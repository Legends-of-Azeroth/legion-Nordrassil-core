/*
 * Copyright (C) 2008-2018 TrinityCore <http://www.trinitycore.org/>
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the
 * Free Software Foundation; either version 2 of the License, or (at your
 * option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program. If not, see <http://www.gnu.org/licenses/>.
 */

// DO NOT EDIT!
// Autogenerated from DB2Structure.h

#include "HotfixDatabase.h"
#include "PreparedStatement.h"

// Force locale statments to appear exactly in locale declaration order, right after normal data fetch statement
#define PREPARE_LOCALE_STMT(stmtBase, sql, con) \
    static_assert(stmtBase + 1 == stmtBase##_LOCALE, "Invalid prepared statement index for " #stmtBase "_LOCALE"); \
    PrepareStatement(stmtBase##_LOCALE, sql, con);

void HotfixDatabaseConnection::DoPrepareStatements()
{
    if (!m_reconnecting)
        m_stmts.resize(MAX_HOTFIXDATABASE_STATEMENTS);

    // Achievement.db2
    PrepareStatement(HOTFIX_SEL_ACHIEVEMENT, "SELECT Title, Description, Reward, Flags, InstanceID, Supercedes, Category, UiOrder, SharesCriteria, "
        "Faction, Points, MinimumCriteria, ID, IconFileID, CriteriaTree FROM achievement ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_ACHIEVEMENT, "SELECT ID, Title_lang, Description_lang, Reward_lang FROM achievement_locale WHERE locale = ?", CONNECTION_SYNCH);

    // Achievement_Category.db2
    PrepareStatement(HOTFIX_SEL_ACHIEVEMENT__CATEGORY, "SELECT Name, Parent, UiOrder, ID FROM achievement__category ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_ACHIEVEMENT__CATEGORY, "SELECT ID, Name_lang FROM achievement__category_locale WHERE locale = ?", CONNECTION_SYNCH);

    // AdventureJournal.db2
    PrepareStatement(HOTFIX_SEL_ADVENTURE_JOURNAL, "SELECT ID, Name, Description, ButtonText, RewardDescription, ContinueDescription, "
        "TextureFileDataID, ItemID, LfgDungeonID, QuestID, BattleMasterListID, BonusPlayerConditionID1, BonusPlayerConditionID2, CurrencyType, "
        "WorldMapAreaID, Type, Flags, ButtonActionType, PriorityMin, PriorityMax, BonusValue1, BonusValue2, CurrencyQuantity, PlayerConditionID, "
        "ItemQuantity FROM adventure_journal ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_ADVENTURE_JOURNAL, "SELECT ID, Name_lang, Description_lang, ButtonText_lang, RewardDescription_lang, "
        "ContinueDescription_lang FROM adventure_journal_locale WHERE locale = ?", CONNECTION_SYNCH);

    // AdventureMapPOI.db2
    PrepareStatement(HOTFIX_SEL_ADVENTURE_MAP_P_O_I, "SELECT ID, Title, Description, WorldPosition1, WorldPosition2, RewardItemID, Type, "
        "PlayerConditionID, QuestID, LfgDungeonID, UiTextureAtlasMemberID, UiTextureKitID, WorldMapAreaID, DungeonMapID, AreaTableID"
        " FROM adventure_map_p_o_i ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_ADVENTURE_MAP_P_O_I, "SELECT ID, Title_lang, Description_lang FROM adventure_map_p_o_i_locale WHERE locale = ?", CONNECTION_SYNCH);

    // AlliedRace.db2
    PrepareStatement(HOTFIX_SEL_ALLIED_RACE, "SELECT BannerColor, ID, RaceID, CrestTextureID, ModelBackgroundTextureID, MaleCreatureDisplayID, "
        "FemaleCreatureDisplayID, UiUnlockAchievementID FROM allied_race ORDER BY ID DESC", CONNECTION_SYNCH);

    // AlliedRaceRacialAbility.db2
    PrepareStatement(HOTFIX_SEL_ALLIED_RACE_RACIAL_ABILITY, "SELECT ID, Name, Description, OrderIndex, IconFileDataID FROM allied_race_racial_ability"
        " ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_ALLIED_RACE_RACIAL_ABILITY, "SELECT ID, Name_lang, Description_lang FROM allied_race_racial_ability_locale"
        " WHERE locale = ?", CONNECTION_SYNCH);

    // AnimationData.db2
    PrepareStatement(HOTFIX_SEL_ANIMATION_DATA, "SELECT ID, Flags, Fallback, BehaviorID, BehaviorTier FROM animation_data ORDER BY ID DESC", CONNECTION_SYNCH);

    // AnimKit.db2
    PrepareStatement(HOTFIX_SEL_ANIM_KIT, "SELECT ID, OneShotDuration, OneShotStopAnimKitID, LowDefAnimKitID FROM anim_kit ORDER BY ID DESC", CONNECTION_SYNCH);

    // AnimKitBoneSet.db2
    PrepareStatement(HOTFIX_SEL_ANIM_KIT_BONE_SET, "SELECT ID, Name, BoneDataID, ParentAnimKitBoneSetID, ExtraBoneCount, AltAnimKitBoneSetID"
        " FROM anim_kit_bone_set ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_ANIM_KIT_BONE_SET, "SELECT ID, Name_lang FROM anim_kit_bone_set_locale WHERE locale = ?", CONNECTION_SYNCH);

    // AnimKitBoneSetAlias.db2
    PrepareStatement(HOTFIX_SEL_ANIM_KIT_BONE_SET_ALIAS, "SELECT ID, BoneDataID, AnimKitBoneSetID FROM anim_kit_bone_set_alias ORDER BY ID DESC", CONNECTION_SYNCH);

    // AnimKitConfig.db2
    PrepareStatement(HOTFIX_SEL_ANIM_KIT_CONFIG, "SELECT ID, ConfigFlags FROM anim_kit_config ORDER BY ID DESC", CONNECTION_SYNCH);

    // AnimKitConfigBoneSet.db2
    PrepareStatement(HOTFIX_SEL_ANIM_KIT_CONFIG_BONE_SET, "SELECT ID, AnimKitPriorityID, AnimKitBoneSetID FROM anim_kit_config_bone_set"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // AnimKitPriority.db2
    PrepareStatement(HOTFIX_SEL_ANIM_KIT_PRIORITY, "SELECT ID, Priority FROM anim_kit_priority ORDER BY ID DESC", CONNECTION_SYNCH);

    // AnimKitReplacement.db2
    PrepareStatement(HOTFIX_SEL_ANIM_KIT_REPLACEMENT, "SELECT SrcAnimKitID, DstAnimKitID, Flags, ID FROM anim_kit_replacement ORDER BY ID DESC", CONNECTION_SYNCH);

    // AnimKitSegment.db2
    PrepareStatement(HOTFIX_SEL_ANIM_KIT_SEGMENT, "SELECT ID, AnimStartTime, EndConditionParam, EndConditionDelay, Speed, OverrideConfigFlags, "
        "ParentAnimKitID, AnimID, AnimKitConfigID, SegmentFlags, BlendInTimeMs, BlendOutTimeMs, OrderIndex, StartCondition, StartConditionParam, "
        "EndCondition, ForcedVariation, LoopToSegmentIndex, StartConditionDelay FROM anim_kit_segment ORDER BY ID DESC", CONNECTION_SYNCH);

    // AnimReplacement.db2
    PrepareStatement(HOTFIX_SEL_ANIM_REPLACEMENT, "SELECT SrcAnimID, DstAnimID, Flags, ID FROM anim_replacement ORDER BY ID DESC", CONNECTION_SYNCH);

    // AnimReplacementSet.db2
    PrepareStatement(HOTFIX_SEL_ANIM_REPLACEMENT_SET, "SELECT ID, ExecOrder FROM anim_replacement_set ORDER BY ID DESC", CONNECTION_SYNCH);

    // AreaFarClipOverride.db2
    PrepareStatement(HOTFIX_SEL_AREA_FAR_CLIP_OVERRIDE, "SELECT AreaID, MinFarClip, MinHorizonStart, Flags, ID FROM area_far_clip_override"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // AreaGroupMember.db2
    PrepareStatement(HOTFIX_SEL_AREA_GROUP_MEMBER, "SELECT ID, AreaID, AreaGroupID FROM area_group_member ORDER BY ID DESC", CONNECTION_SYNCH);

    // AreaPOI.db2
    PrepareStatement(HOTFIX_SEL_AREA_P_O_I, "SELECT ID, Name, Description, Flags, Pos1, Pos2, Pos3, PoiDataType, PoiData, ContinentID, AreaID, "
        "WorldStateID, Importance, Icon, PlayerConditionID, PortLocID, UiTextureAtlasMemberID, MapFloor, WmoGroupID FROM area_p_o_i ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_AREA_P_O_I, "SELECT ID, Name_lang, Description_lang FROM area_p_o_i_locale WHERE locale = ?", CONNECTION_SYNCH);

    // AreaPOIState.db2
    PrepareStatement(HOTFIX_SEL_AREA_P_O_I_STATE, "SELECT ID, Description, WorldStateValue, IconEnumValue, UiTextureAtlasMemberID"
        " FROM area_p_o_i_state ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_AREA_P_O_I_STATE, "SELECT ID, Description_lang FROM area_p_o_i_state_locale WHERE locale = ?", CONNECTION_SYNCH);

    // AreaTable.db2
    PrepareStatement(HOTFIX_SEL_AREA_TABLE, "SELECT ID, ZoneName, AreaName, Flags1, Flags2, AmbientMultiplier, ContinentID, ParentAreaID, AreaBit, "
        "AmbienceID, ZoneMusic, IntroSound, LiquidTypeID1, LiquidTypeID2, LiquidTypeID3, LiquidTypeID4, UwZoneMusic, UwAmbience, "
        "PvpCombatWorldStateID, SoundProviderPref, SoundProviderPrefUnderwater, ExplorationLevel, FactionGroupMask, MountFlags, "
        "WildBattlePetLevelMin, WildBattlePetLevelMax, WindSettingsID, UwIntroSound FROM area_table ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_AREA_TABLE, "SELECT ID, ZoneName_lang, AreaName_lang FROM area_table_locale WHERE locale = ?", CONNECTION_SYNCH);

    // AreaTrigger.db2
    PrepareStatement(HOTFIX_SEL_AREA_TRIGGER, "SELECT PosX, PosY, PosZ, Radius, BoxLength, BoxWidth, BoxHeight, BoxYaw, ContinentID, PhaseID, "
        "PhaseGroupID, ShapeID, AreaTriggerActionSetID, PhaseUseFlags, ShapeType, Flags, ID FROM area_trigger ORDER BY ID DESC", CONNECTION_SYNCH);

    // AreaTriggerActionSet.db2
    PrepareStatement(HOTFIX_SEL_AREA_TRIGGER_ACTION_SET, "SELECT ID, Flags FROM area_trigger_action_set ORDER BY ID DESC", CONNECTION_SYNCH);

    // AreaTriggerBox.db2
    PrepareStatement(HOTFIX_SEL_AREA_TRIGGER_BOX, "SELECT ID, Extents1, Extents2, Extents3 FROM area_trigger_box ORDER BY ID DESC", CONNECTION_SYNCH);

    // AreaTriggerCylinder.db2
    PrepareStatement(HOTFIX_SEL_AREA_TRIGGER_CYLINDER, "SELECT ID, Radius, Height, ZOffset FROM area_trigger_cylinder ORDER BY ID DESC", CONNECTION_SYNCH);

    // AreaTriggerSphere.db2
    PrepareStatement(HOTFIX_SEL_AREA_TRIGGER_SPHERE, "SELECT ID, MaxRadius FROM area_trigger_sphere ORDER BY ID DESC", CONNECTION_SYNCH);

    // ArmorLocation.db2
    PrepareStatement(HOTFIX_SEL_ARMOR_LOCATION, "SELECT ID, Clothmodifier, Leathermodifier, Chainmodifier, Platemodifier, Modifier FROM armor_location"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // Artifact.db2
    PrepareStatement(HOTFIX_SEL_ARTIFACT, "SELECT ID, Name, UiBarOverlayColor, UiBarBackgroundColor, UiNameColor, UiTextureKitID, "
        "ChrSpecializationID, ArtifactCategoryID, Flags, UiModelSceneID, SpellVisualKitID FROM artifact ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_ARTIFACT, "SELECT ID, Name_lang FROM artifact_locale WHERE locale = ?", CONNECTION_SYNCH);

    // ArtifactAppearance.db2
    PrepareStatement(HOTFIX_SEL_ARTIFACT_APPEARANCE, "SELECT Name, UiSwatchColor, UiModelSaturation, UiModelOpacity, OverrideShapeshiftDisplayID, "
        "ArtifactAppearanceSetID, UiCameraID, DisplayIndex, ItemAppearanceModifierID, Flags, OverrideShapeshiftFormID, ID, UnlockPlayerConditionID, "
        "UiItemAppearanceID, UiAltItemAppearanceID FROM artifact_appearance ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_ARTIFACT_APPEARANCE, "SELECT ID, Name_lang FROM artifact_appearance_locale WHERE locale = ?", CONNECTION_SYNCH);

    // ArtifactAppearanceSet.db2
    PrepareStatement(HOTFIX_SEL_ARTIFACT_APPEARANCE_SET, "SELECT Name, Description, UiCameraID, AltHandUICameraID, DisplayIndex, "
        "ForgeAttachmentOverride, Flags, ID, ArtifactID FROM artifact_appearance_set ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_ARTIFACT_APPEARANCE_SET, "SELECT ID, Name_lang, Description_lang FROM artifact_appearance_set_locale"
        " WHERE locale = ?", CONNECTION_SYNCH);

    // ArtifactCategory.db2
    PrepareStatement(HOTFIX_SEL_ARTIFACT_CATEGORY, "SELECT ID, XpMultCurrencyID, XpMultCurveID FROM artifact_category ORDER BY ID DESC", CONNECTION_SYNCH);

    // ArtifactPower.db2
    PrepareStatement(HOTFIX_SEL_ARTIFACT_POWER, "SELECT DisplayPos1, DisplayPos2, ArtifactID, Flags, MaxPurchasableRank, Tier, ID, Label"
        " FROM artifact_power ORDER BY ID DESC", CONNECTION_SYNCH);

    // ArtifactPowerLink.db2
    PrepareStatement(HOTFIX_SEL_ARTIFACT_POWER_LINK, "SELECT ID, PowerA, PowerB FROM artifact_power_link ORDER BY ID DESC", CONNECTION_SYNCH);

    // ArtifactPowerPicker.db2
    PrepareStatement(HOTFIX_SEL_ARTIFACT_POWER_PICKER, "SELECT ID, PlayerConditionID FROM artifact_power_picker ORDER BY ID DESC", CONNECTION_SYNCH);

    // ArtifactPowerRank.db2
    PrepareStatement(HOTFIX_SEL_ARTIFACT_POWER_RANK, "SELECT ID, SpellID, AuraPointsOverride, ItemBonusListID, RankIndex, ArtifactPowerID"
        " FROM artifact_power_rank ORDER BY ID DESC", CONNECTION_SYNCH);

    // ArtifactQuestXp.db2
    PrepareStatement(HOTFIX_SEL_ARTIFACT_QUEST_XP, "SELECT ID, Difficulty1, Difficulty2, Difficulty3, Difficulty4, Difficulty5, Difficulty6, "
        "Difficulty7, Difficulty8, Difficulty9, Difficulty10 FROM artifact_quest_xp ORDER BY ID DESC", CONNECTION_SYNCH);

    // ArtifactTier.db2
    PrepareStatement(HOTFIX_SEL_ARTIFACT_TIER, "SELECT ID, ArtifactTier, MaxNumTraits, MaxArtifactKnowledge, KnowledgePlayerCondition, "
        "MinimumEmpowerKnowledge FROM artifact_tier ORDER BY ID DESC", CONNECTION_SYNCH);

    // ArtifactUnlock.db2
    PrepareStatement(HOTFIX_SEL_ARTIFACT_UNLOCK, "SELECT ID, ItemBonusListID, PowerRank, PowerID, PlayerConditionID, ArtifactID FROM artifact_unlock"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // AuctionHouse.db2
    PrepareStatement(HOTFIX_SEL_AUCTION_HOUSE, "SELECT ID, Name, FactionID, DepositRate, ConsignmentRate FROM auction_house ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_AUCTION_HOUSE, "SELECT ID, Name_lang FROM auction_house_locale WHERE locale = ?", CONNECTION_SYNCH);

    // BankBagSlotPrices.db2
    PrepareStatement(HOTFIX_SEL_BANK_BAG_SLOT_PRICES, "SELECT ID, Cost FROM bank_bag_slot_prices ORDER BY ID DESC", CONNECTION_SYNCH);

    // BannedAddons.db2
    PrepareStatement(HOTFIX_SEL_BANNED_ADDONS, "SELECT ID, Name, Version, Flags FROM banned_addons ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_BANNED_ADDONS, "SELECT ID, Name_lang, Version_lang FROM banned_addons_locale WHERE locale = ?", CONNECTION_SYNCH);

    // BarberShopStyle.db2
    PrepareStatement(HOTFIX_SEL_BARBER_SHOP_STYLE, "SELECT DisplayName, Description, CostModifier, Type, Race, Sex, Data, ID FROM barber_shop_style"
        " ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_BARBER_SHOP_STYLE, "SELECT ID, DisplayName_lang, Description_lang FROM barber_shop_style_locale WHERE locale = ?", CONNECTION_SYNCH);

    // BattlemasterList.db2
    PrepareStatement(HOTFIX_SEL_BATTLEMASTER_LIST, "SELECT ID, Name, GameType, ShortDescription, LongDescription, IconFileDataID, MapID1, MapID2, "
        "MapID3, MapID4, MapID5, MapID6, MapID7, MapID8, MapID9, MapID10, MapID11, MapID12, MapID13, MapID14, MapID15, MapID16, HolidayWorldState, "
        "RequiredPlayer_Condition_ID, InstanceType, GroupsAllowed, MaxGroupSize, MinLevel, MaxLevel, RatedPlayers, MinPlayers, MaxPlayers, Flags"
        " FROM battlemaster_list ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_BATTLEMASTER_LIST, "SELECT ID, Name_lang, GameType_lang, ShortDescription_lang, LongDescription_lang"
        " FROM battlemaster_list_locale WHERE locale = ?", CONNECTION_SYNCH);

    // BattlePetAbility.db2
    PrepareStatement(HOTFIX_SEL_BATTLE_PET_ABILITY, "SELECT ID, Name, Description, IconFileDataID, BattlePetVisualID, PetTypeEnum, Flags, Cooldown"
        " FROM battle_pet_ability ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_BATTLE_PET_ABILITY, "SELECT ID, Name_lang, Description_lang FROM battle_pet_ability_locale WHERE locale = ?", CONNECTION_SYNCH);

    // BattlePetAbilityEffect.db2
    PrepareStatement(HOTFIX_SEL_BATTLE_PET_ABILITY_EFFECT, "SELECT BattlePetAbilityTurnID, BattlePetVisualID, AuraBattlePetAbilityID, "
        "BattlePetEffectPropertiesID, Param1, Param2, Param3, Param4, Param5, Param6, OrderIndex, ID FROM battle_pet_ability_effect ORDER BY ID DESC", CONNECTION_SYNCH);

    // BattlePetAbilityState.db2
    PrepareStatement(HOTFIX_SEL_BATTLE_PET_ABILITY_STATE, "SELECT ID, Value, BattlePetStateID, BattlePetAbilityID FROM battle_pet_ability_state"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // BattlePetAbilityTurn.db2
    PrepareStatement(HOTFIX_SEL_BATTLE_PET_ABILITY_TURN, "SELECT BattlePetAbilityID, BattlePetVisualID, OrderIndex, TurnTypeEnum, EventTypeEnum, ID"
        " FROM battle_pet_ability_turn ORDER BY ID DESC", CONNECTION_SYNCH);

    // BattlePetBreedQuality.db2
    PrepareStatement(HOTFIX_SEL_BATTLE_PET_BREED_QUALITY, "SELECT ID, StateMultiplier, QualityEnum FROM battle_pet_breed_quality ORDER BY ID DESC", CONNECTION_SYNCH);

    // BattlePetBreedState.db2
    PrepareStatement(HOTFIX_SEL_BATTLE_PET_BREED_STATE, "SELECT ID, Value, BattlePetStateID, BreedID FROM battle_pet_breed_state ORDER BY ID DESC", CONNECTION_SYNCH);

    // BattlePetDisplayOverride.db2
    PrepareStatement(HOTFIX_SEL_BATTLE_PET_DISPLAY_OVERRIDE, "SELECT ID, BattlePetSpeciesID, PlayerConditionID, CreatureDisplayInfoID, "
        "PriorityCategory FROM battle_pet_display_override ORDER BY ID DESC", CONNECTION_SYNCH);

    // BattlePetEffectProperties.db2
    PrepareStatement(HOTFIX_SEL_BATTLE_PET_EFFECT_PROPERTIES, "SELECT ID, ParamLabel1, ParamLabel2, ParamLabel3, ParamLabel4, ParamLabel5, "
        "ParamLabel6, BattlePetVisualID, ParamTypeEnum1, ParamTypeEnum2, ParamTypeEnum3, ParamTypeEnum4, ParamTypeEnum5, ParamTypeEnum6"
        " FROM battle_pet_effect_properties ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_BATTLE_PET_EFFECT_PROPERTIES, "SELECT ID, ParamLabel1_lang, ParamLabel2_lang, ParamLabel3_lang, ParamLabel4_lang, "
        "ParamLabel5_lang, ParamLabel6_lang FROM battle_pet_effect_properties_locale WHERE locale = ?", CONNECTION_SYNCH);

    // BattlePetNPCTeamMember.db2
    PrepareStatement(HOTFIX_SEL_BATTLE_PET_N_P_C_TEAM_MEMBER, "SELECT ID, Name FROM battle_pet_n_p_c_team_member ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_BATTLE_PET_N_P_C_TEAM_MEMBER, "SELECT ID, Name_lang FROM battle_pet_n_p_c_team_member_locale WHERE locale = ?", CONNECTION_SYNCH);

    // BattlePetSpecies.db2
    PrepareStatement(HOTFIX_SEL_BATTLE_PET_SPECIES, "SELECT SourceText, Description, CreatureID, IconFileDataID, SummonSpellID, Flags, PetTypeEnum, "
        "SourceTypeEnum, ID, CardUIModelSceneID, LoadoutUIModelSceneID FROM battle_pet_species ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_BATTLE_PET_SPECIES, "SELECT ID, SourceText_lang, Description_lang FROM battle_pet_species_locale WHERE locale = ?", CONNECTION_SYNCH);

    // BattlePetSpeciesState.db2
    PrepareStatement(HOTFIX_SEL_BATTLE_PET_SPECIES_STATE, "SELECT ID, Value, BattlePetStateID, SpeciesID FROM battle_pet_species_state"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // BattlePetSpeciesXAbility.db2
    PrepareStatement(HOTFIX_SEL_BATTLE_PET_SPECIES_X_ABILITY, "SELECT ID, BattlePetAbilityID, RequiredLevel, SlotEnum, BattlePetSpeciesID"
        " FROM battle_pet_species_x_ability ORDER BY ID DESC", CONNECTION_SYNCH);

    // BattlePetState.db2
    PrepareStatement(HOTFIX_SEL_BATTLE_PET_STATE, "SELECT ID, LuaName, BattlePetVisualID, Flags FROM battle_pet_state ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_BATTLE_PET_STATE, "SELECT ID, LuaName_lang FROM battle_pet_state_locale WHERE locale = ?", CONNECTION_SYNCH);

    // BattlePetVisual.db2
    PrepareStatement(HOTFIX_SEL_BATTLE_PET_VISUAL, "SELECT ID, SceneScriptFunction, SpellVisualID, CastMilliSeconds, ImpactMilliSeconds, "
        "SceneScriptPackageID, RangeTypeEnum, Flags FROM battle_pet_visual ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_BATTLE_PET_VISUAL, "SELECT ID, SceneScriptFunction_lang FROM battle_pet_visual_locale WHERE locale = ?", CONNECTION_SYNCH);

    // BeamEffect.db2
    PrepareStatement(HOTFIX_SEL_BEAM_EFFECT, "SELECT ID, BeamID, SourceMinDistance, FixedLength, Flags, SourceOffset, DestOffset, SourceAttachID, "
        "DestAttachID, SourcePositionerID, DestPositionerID FROM beam_effect ORDER BY ID DESC", CONNECTION_SYNCH);

    // BoneWindModifierModel.db2
    PrepareStatement(HOTFIX_SEL_BONE_WIND_MODIFIER_MODEL, "SELECT ID, FileDataID, BoneWindModifierID FROM bone_wind_modifier_model ORDER BY ID DESC", CONNECTION_SYNCH);

    // BoneWindModifiers.db2
    PrepareStatement(HOTFIX_SEL_BONE_WIND_MODIFIERS, "SELECT ID, Multiplier1, Multiplier2, Multiplier3, PhaseMultiplier FROM bone_wind_modifiers"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // Bounty.db2
    PrepareStatement(HOTFIX_SEL_BOUNTY, "SELECT ID, IconFileDataID, QuestID, FactionID, TurninPlayerConditionID FROM bounty ORDER BY ID DESC", CONNECTION_SYNCH);

    // BountySet.db2
    PrepareStatement(HOTFIX_SEL_BOUNTY_SET, "SELECT ID, LockedQuestID, VisiblePlayerConditionID FROM bounty_set ORDER BY ID DESC", CONNECTION_SYNCH);

    // BroadcastText.db2
    PrepareStatement(HOTFIX_SEL_BROADCAST_TEXT, "SELECT ID, Text, Text1, EmoteID1, EmoteID2, EmoteID3, EmoteDelay1, EmoteDelay2, EmoteDelay3, "
        "EmotesID, LanguageID, Flags, ConditionID, SoundEntriesID1, SoundEntriesID2 FROM broadcast_text ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_BROADCAST_TEXT, "SELECT ID, Text_lang, Text1_lang FROM broadcast_text_locale WHERE locale = ?", CONNECTION_SYNCH);

    // CameraEffect.db2
    PrepareStatement(HOTFIX_SEL_CAMERA_EFFECT, "SELECT ID, Flags FROM camera_effect ORDER BY ID DESC", CONNECTION_SYNCH);

    // CameraEffectEntry.db2
    PrepareStatement(HOTFIX_SEL_CAMERA_EFFECT_ENTRY, "SELECT ID, Duration, Delay, Phase, Amplitude, AmplitudeB, Frequency, RadiusMin, RadiusMax, "
        "AmplitudeCurveID, OrderIndex, Flags, EffectType, DirectionType, MovementType, AttenuationType FROM camera_effect_entry ORDER BY ID DESC", CONNECTION_SYNCH);

    // CameraMode.db2
    PrepareStatement(HOTFIX_SEL_CAMERA_MODE, "SELECT ID, PositionOffset1, PositionOffset2, PositionOffset3, TargetOffset1, TargetOffset2, "
        "TargetOffset3, PositionSmoothing, RotationSmoothing, FieldOfView, Flags, Type, LockedPositionOffsetBase, LockedPositionOffsetDirection, "
        "LockedTargetOffsetBase, LockedTargetOffsetDirection FROM camera_mode ORDER BY ID DESC", CONNECTION_SYNCH);

    // CastableRaidBuffs.db2
    PrepareStatement(HOTFIX_SEL_CASTABLE_RAID_BUFFS, "SELECT ID, CastingSpellID FROM castable_raid_buffs ORDER BY ID DESC", CONNECTION_SYNCH);

    // CelestialBody.db2
    PrepareStatement(HOTFIX_SEL_CELESTIAL_BODY, "SELECT BaseFileDataID, LightMaskFileDataID, GlowMaskFileDataID1, GlowMaskFileDataID2, "
        "AtmosphericMaskFileDataID, AtmosphericModifiedFileDataID, GlowModifiedFileDataID1, GlowModifiedFileDataID2, ScrollURate1, ScrollURate2, "
        "ScrollVRate1, ScrollVRate2, RotateRate, GlowMaskScale1, GlowMaskScale2, AtmosphericMaskScale, Position1, Position2, Position3, "
        "BodyBaseScale, SkyArrayBand, ID FROM celestial_body ORDER BY ID DESC", CONNECTION_SYNCH);

    // Cfg_Categories.db2
    PrepareStatement(HOTFIX_SEL_CFG__CATEGORIES, "SELECT ID, Name, LocaleMask, CreateCharsetMask, ExistingCharsetMask, Flags FROM cfg__categories"
        " ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_CFG__CATEGORIES, "SELECT ID, Name_lang FROM cfg__categories_locale WHERE locale = ?", CONNECTION_SYNCH);

    // Cfg_Configs.db2
    PrepareStatement(HOTFIX_SEL_CFG__CONFIGS, "SELECT ID, MaxDamageReductionPctPhysical, PlayerAttackSpeedBase, PlayerKillingAllowed, Roleplaying"
        " FROM cfg__configs ORDER BY ID DESC", CONNECTION_SYNCH);

    // Cfg_Regions.db2
    PrepareStatement(HOTFIX_SEL_CFG__REGIONS, "SELECT ID, Tag, Raidorigin, ChallengeOrigin, RegionID, RegionGroup_mask FROM cfg__regions"
        " ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_CFG__REGIONS, "SELECT ID, Tag_lang FROM cfg__regions_locale WHERE locale = ?", CONNECTION_SYNCH);

    // CharacterFaceBoneSet.db2
    PrepareStatement(HOTFIX_SEL_CHARACTER_FACE_BONE_SET, "SELECT ID, BoneSetFileDataID, SexID, FaceVariationIndex, Resolution"
        " FROM character_face_bone_set ORDER BY ID DESC", CONNECTION_SYNCH);

    // CharacterFacialHairStyles.db2
    PrepareStatement(HOTFIX_SEL_CHARACTER_FACIAL_HAIR_STYLES, "SELECT ID, Geoset1, Geoset2, Geoset3, Geoset4, Geoset5, RaceID, SexID, VariationID"
        " FROM character_facial_hair_styles ORDER BY ID DESC", CONNECTION_SYNCH);

    // CharacterLoadout.db2
    PrepareStatement(HOTFIX_SEL_CHARACTER_LOADOUT, "SELECT ID, RaceMask, ChrClassID, Purpose FROM character_loadout ORDER BY ID DESC", CONNECTION_SYNCH);

    // CharacterLoadoutItem.db2
    PrepareStatement(HOTFIX_SEL_CHARACTER_LOADOUT_ITEM, "SELECT ID, ItemID, CharacterLoadoutID FROM character_loadout_item ORDER BY ID DESC", CONNECTION_SYNCH);

    // CharacterServiceInfo.db2
    PrepareStatement(HOTFIX_SEL_CHARACTER_SERVICE_INFO, "SELECT ID, FlowTitle, PopupTitle, PopupDescription, BoostType, IconFileDataID, Priority, "
        "Flags, ProfessionLevel, BoostLevel, Expansion, PopupUITextureKitID FROM character_service_info ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_CHARACTER_SERVICE_INFO, "SELECT ID, FlowTitle_lang, PopupTitle_lang, PopupDescription_lang"
        " FROM character_service_info_locale WHERE locale = ?", CONNECTION_SYNCH);

    // CharBaseInfo.db2
    PrepareStatement(HOTFIX_SEL_CHAR_BASE_INFO, "SELECT ID, RaceID, ClassID FROM char_base_info ORDER BY ID DESC", CONNECTION_SYNCH);

    // CharBaseSection.db2
    PrepareStatement(HOTFIX_SEL_CHAR_BASE_SECTION, "SELECT ID, VariationEnum, ResolutionVariationEnum, LayoutResType FROM char_base_section"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // CharComponentTextureLayouts.db2
    PrepareStatement(HOTFIX_SEL_CHAR_COMPONENT_TEXTURE_LAYOUTS, "SELECT ID, Width, Height FROM char_component_texture_layouts ORDER BY ID DESC", CONNECTION_SYNCH);

    // CharComponentTextureSections.db2
    PrepareStatement(HOTFIX_SEL_CHAR_COMPONENT_TEXTURE_SECTIONS, "SELECT ID, OverlapSectionMask, X, Y, Width, Height, CharComponentTextureLayoutID, "
        "SectionType FROM char_component_texture_sections ORDER BY ID DESC", CONNECTION_SYNCH);

    // CharHairGeosets.db2
    PrepareStatement(HOTFIX_SEL_CHAR_HAIR_GEOSETS, "SELECT ID, HdCustomGeoFileDataID, RaceID, SexID, VariationID, VariationType, GeosetID, "
        "GeosetType, Showscalp, ColorIndex, CustomGeoFileDataID FROM char_hair_geosets ORDER BY ID DESC", CONNECTION_SYNCH);

    // CharSections.db2
    PrepareStatement(HOTFIX_SEL_CHAR_SECTIONS, "SELECT ID, MaterialResourcesID1, MaterialResourcesID2, MaterialResourcesID3, Flags, RaceID, SexID, "
        "BaseSection, VariationIndex, ColorIndex FROM char_sections ORDER BY ID DESC", CONNECTION_SYNCH);

    // CharShipment.db2
    PrepareStatement(HOTFIX_SEL_CHAR_SHIPMENT, "SELECT ID, TreasureID, Duration, SpellID, DummyItemID, OnCompleteSpellID, ContainerID, "
        "GarrFollowerID, MaxShipments, Flags FROM char_shipment ORDER BY ID DESC", CONNECTION_SYNCH);

    // CharShipmentContainer.db2
    PrepareStatement(HOTFIX_SEL_CHAR_SHIPMENT_CONTAINER, "SELECT ID, PendingText, Description, WorkingSpellVisualID, UiTextureKitID, "
        "WorkingDisplayInfoID, SmallDisplayInfoID, MediumDisplayInfoID, LargeDisplayInfoID, CrossFactionID, BaseCapacity, GarrBuildingType, "
        "GarrTypeID, MediumThreshold, LargeThreshold, Faction, CompleteSpellVisualID FROM char_shipment_container ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_CHAR_SHIPMENT_CONTAINER, "SELECT ID, PendingText_lang, Description_lang FROM char_shipment_container_locale"
        " WHERE locale = ?", CONNECTION_SYNCH);

    // CharStartOutfit.db2
    PrepareStatement(HOTFIX_SEL_CHAR_START_OUTFIT, "SELECT ID, ItemID1, ItemID2, ItemID3, ItemID4, ItemID5, ItemID6, ItemID7, ItemID8, ItemID9, "
        "ItemID10, ItemID11, ItemID12, ItemID13, ItemID14, ItemID15, ItemID16, ItemID17, ItemID18, ItemID19, ItemID20, ItemID21, ItemID22, ItemID23, "
        "ItemID24, PetDisplayID, ClassID, SexID, OutfitID, PetFamilyID, RaceID FROM char_start_outfit ORDER BY ID DESC", CONNECTION_SYNCH);

    // CharTitles.db2
    PrepareStatement(HOTFIX_SEL_CHAR_TITLES, "SELECT ID, Name, Name1, MaskID, Flags FROM char_titles ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_CHAR_TITLES, "SELECT ID, Name_lang, Name1_lang FROM char_titles_locale WHERE locale = ?", CONNECTION_SYNCH);

    // ChatChannels.db2
    PrepareStatement(HOTFIX_SEL_CHAT_CHANNELS, "SELECT ID, Name, Shortcut, Flags, FactionGroup FROM chat_channels ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_CHAT_CHANNELS, "SELECT ID, Name_lang, Shortcut_lang FROM chat_channels_locale WHERE locale = ?", CONNECTION_SYNCH);

    // ChatProfanity.db2
    PrepareStatement(HOTFIX_SEL_CHAT_PROFANITY, "SELECT ID, Text, Language FROM chat_profanity ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_CHAT_PROFANITY, "SELECT ID, Text_lang FROM chat_profanity_locale WHERE locale = ?", CONNECTION_SYNCH);

    // ChrClasses.db2
    PrepareStatement(HOTFIX_SEL_CHR_CLASSES, "SELECT PetNameToken, Name, NameFemale, NameMale, Filename, CreateScreenFileDataID, "
        "SelectScreenFileDataID, LowResScreenFileDataID, IconFileDataID, StartingLevel, Flags, CinematicSequenceID, DefaultSpec, DisplayPower, "
        "SpellClassSet, AttackPowerPerStrength, AttackPowerPerAgility, RangedAttackPowerPerAgility, PrimaryStatPriority, ID FROM chr_classes"
        " ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_CHR_CLASSES, "SELECT ID, PetNameToken_lang, Name_lang, NameFemale_lang, NameMale_lang, Filename_lang"
        " FROM chr_classes_locale WHERE locale = ?", CONNECTION_SYNCH);

    // ChrClassesXPowerTypes.db2
    PrepareStatement(HOTFIX_SEL_CHR_CLASSES_X_POWER_TYPES, "SELECT ID, PowerType, ClassID FROM chr_classes_x_power_types ORDER BY ID DESC", CONNECTION_SYNCH);

    // ChrClassRaceSex.db2
    PrepareStatement(HOTFIX_SEL_CHR_CLASS_RACE_SEX, "SELECT ID, ClassID, RaceID, Sex, Flags, SoundID, VoiceSoundFilterID FROM chr_class_race_sex"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // ChrClassTitle.db2
    PrepareStatement(HOTFIX_SEL_CHR_CLASS_TITLE, "SELECT ID, NameMale, NameFemale, ChrClassID FROM chr_class_title ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_CHR_CLASS_TITLE, "SELECT ID, NameMale_lang, NameFemale_lang FROM chr_class_title_locale WHERE locale = ?", CONNECTION_SYNCH);

    // ChrClassUIDisplay.db2
    PrepareStatement(HOTFIX_SEL_CHR_CLASS_U_I_DISPLAY, "SELECT ID, ChrClassesID, AdvGuidePlayerConditionID, SplashPlayerConditionID"
        " FROM chr_class_u_i_display ORDER BY ID DESC", CONNECTION_SYNCH);

    // ChrClassVillain.db2
    PrepareStatement(HOTFIX_SEL_CHR_CLASS_VILLAIN, "SELECT ID, Name, ChrClassID, Gender FROM chr_class_villain ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_CHR_CLASS_VILLAIN, "SELECT ID, Name_lang FROM chr_class_villain_locale WHERE locale = ?", CONNECTION_SYNCH);

    // ChrCustomization.db2
    PrepareStatement(HOTFIX_SEL_CHR_CUSTOMIZATION, "SELECT ID, Name, Sex, BaseSection, UiCustomizationType, Flags, ComponentSection1, "
        "ComponentSection2, ComponentSection3 FROM chr_customization ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_CHR_CUSTOMIZATION, "SELECT ID, Name_lang FROM chr_customization_locale WHERE locale = ?", CONNECTION_SYNCH);

    // ChrRaces.db2
    PrepareStatement(HOTFIX_SEL_CHR_RACES, "SELECT ClientPrefix, ClientFileString, Name, NameFemale, NameLowercase, NameFemale_lowercase, Flags, "
        "MaleDisplayID, FemaleDisplayID, CreateScreenFileDataID, SelectScreenFileDataID, MaleCustomizeOffset1, MaleCustomizeOffset2, "
        "MaleCustomizeOffset3, FemaleCustomizeOffset1, FemaleCustomizeOffset2, FemaleCustomizeOffset3, LowResScreenFileDataID, StartingLevel, "
        "UiDisplayOrder, FactionID, ResSicknessSpellID, SplashSoundID, CinematicSequenceID, BaseLanguage, CreatureType, Alliance, RaceRelated, "
        "UnalteredVisualRaceID, CharComponentTextureLayoutID, DefaultClassID, NeutralRaceID, DisplayRaceID, CharComponentTexLayoutHiResID, ID, "
        "HighResMaleDisplayID, HighResFemaleDisplayID, HeritageArmorAchievementID, MaleSkeletonFileDataID, FemaleSkeletonFileDataID, "
        "AlteredFormStartVisualKitID1, AlteredFormStartVisualKitID2, AlteredFormStartVisualKitID3, AlteredFormFinishVisualKitID1, "
        "AlteredFormFinishVisualKitID2, AlteredFormFinishVisualKitID3 FROM chr_races ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_CHR_RACES, "SELECT ID, ClientPrefix_lang, ClientFileString_lang, Name_lang, NameFemale_lang, NameLowercase_lang, "
        "NameFemale_lowercase_lang FROM chr_races_locale WHERE locale = ?", CONNECTION_SYNCH);

    // ChrSpecialization.db2
    PrepareStatement(HOTFIX_SEL_CHR_SPECIALIZATION, "SELECT Name, FemaleName, Description, MasterySpellID1, MasterySpellID2, ClassID, OrderIndex, "
        "PetTalentType, Role, PrimaryStatPriority, ID, SpellIconFileID, Flags, AnimReplacements FROM chr_specialization ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_CHR_SPECIALIZATION, "SELECT ID, Name_lang, FemaleName_lang, Description_lang FROM chr_specialization_locale"
        " WHERE locale = ?", CONNECTION_SYNCH);

    // ChrUpgradeBucket.db2
    PrepareStatement(HOTFIX_SEL_CHR_UPGRADE_BUCKET, "SELECT ChrSpecializationID, ID FROM chr_upgrade_bucket ORDER BY ID DESC", CONNECTION_SYNCH);

    // ChrUpgradeBucketSpell.db2
    PrepareStatement(HOTFIX_SEL_CHR_UPGRADE_BUCKET_SPELL, "SELECT ID, SpellID FROM chr_upgrade_bucket_spell ORDER BY ID DESC", CONNECTION_SYNCH);

    // ChrUpgradeTier.db2
    PrepareStatement(HOTFIX_SEL_CHR_UPGRADE_TIER, "SELECT DisplayName, OrderIndex, NumTalents, ID FROM chr_upgrade_tier ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_CHR_UPGRADE_TIER, "SELECT ID, DisplayName_lang FROM chr_upgrade_tier_locale WHERE locale = ?", CONNECTION_SYNCH);

    // CinematicCamera.db2
    PrepareStatement(HOTFIX_SEL_CINEMATIC_CAMERA, "SELECT ID, SoundID, Origin1, Origin2, Origin3, OriginFacing, FileDataID FROM cinematic_camera"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // CinematicSequences.db2
    PrepareStatement(HOTFIX_SEL_CINEMATIC_SEQUENCES, "SELECT ID, SoundID, Camera1, Camera2, Camera3, Camera4, Camera5, Camera6, Camera7, Camera8"
        " FROM cinematic_sequences ORDER BY ID DESC", CONNECTION_SYNCH);

    // CloakDampening.db2
    PrepareStatement(HOTFIX_SEL_CLOAK_DAMPENING, "SELECT ID, Angle1, Angle2, Angle3, Angle4, Angle5, Dampening1, Dampening2, Dampening3, Dampening4, "
        "Dampening5, TailAngle1, TailAngle2, TailDampening1, TailDampening2, TabardAngle, TabardDampening, ExpectedWeaponSize FROM cloak_dampening"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // CombatCondition.db2
    PrepareStatement(HOTFIX_SEL_COMBAT_CONDITION, "SELECT ID, WorldStateExpressionID, SelfConditionID, TargetConditionID, FriendConditionID1, "
        "FriendConditionID2, EnemyConditionID1, EnemyConditionID2, FriendConditionOp1, FriendConditionOp2, FriendConditionCount1, "
        "FriendConditionCount2, FriendConditionLogic, EnemyConditionOp1, EnemyConditionOp2, EnemyConditionCount1, EnemyConditionCount2, "
        "EnemyConditionLogic FROM combat_condition ORDER BY ID DESC", CONNECTION_SYNCH);

    // CommentatorStartLocation.db2
    PrepareStatement(HOTFIX_SEL_COMMENTATOR_START_LOCATION, "SELECT ID, Pos1, Pos2, Pos3, MapID FROM commentator_start_location ORDER BY ID DESC", CONNECTION_SYNCH);

    // CommentatorTrackedCooldown.db2
    PrepareStatement(HOTFIX_SEL_COMMENTATOR_TRACKED_COOLDOWN, "SELECT ID, Priority, Flags, SpellID FROM commentator_tracked_cooldown ORDER BY ID DESC", CONNECTION_SYNCH);

    // ComponentModelFileData.db2
    PrepareStatement(HOTFIX_SEL_COMPONENT_MODEL_FILE_DATA, "SELECT ID, GenderIndex, ClassID, RaceID, PositionIndex FROM component_model_file_data"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // ComponentTextureFileData.db2
    PrepareStatement(HOTFIX_SEL_COMPONENT_TEXTURE_FILE_DATA, "SELECT ID, GenderIndex, ClassID, RaceID FROM component_texture_file_data"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // ConfigurationWarning.db2
    PrepareStatement(HOTFIX_SEL_CONFIGURATION_WARNING, "SELECT ID, Warning, Type FROM configuration_warning ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_CONFIGURATION_WARNING, "SELECT ID, Warning_lang FROM configuration_warning_locale WHERE locale = ?", CONNECTION_SYNCH);

    // Contribution.db2
    PrepareStatement(HOTFIX_SEL_CONTRIBUTION, "SELECT Description, Name, ID, ManagedWorldStateInputID, UiTextureAtlasMemberID1, "
        "UiTextureAtlasMemberID2, UiTextureAtlasMemberID3, UiTextureAtlasMemberID4, OrderIndex FROM contribution ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_CONTRIBUTION, "SELECT ID, Description_lang, Name_lang FROM contribution_locale WHERE locale = ?", CONNECTION_SYNCH);

    // ConversationLine.db2
    PrepareStatement(HOTFIX_SEL_CONVERSATION_LINE, "SELECT ID, BroadcastTextID, SpellVisualKitID, AdditionalDuration, NextConversationLineID, "
        "AnimKitID, SpeechType, StartAnimation, EndAnimation FROM conversation_line ORDER BY ID DESC", CONNECTION_SYNCH);

    // Creature.db2
    PrepareStatement(HOTFIX_SEL_CREATURE, "SELECT ID, Name, NameAlt, Title, TitleAlt, AlwaysItem1, AlwaysItem2, AlwaysItem3, MountCreatureID, "
        "DisplayID1, DisplayID2, DisplayID3, DisplayID4, DisplayProbability1, DisplayProbability2, DisplayProbability3, DisplayProbability4, "
        "CreatureType, CreatureFamily, Classification, StartAnimState FROM creature ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_CREATURE, "SELECT ID, Name_lang, NameAlt_lang, Title_lang, TitleAlt_lang FROM creature_locale WHERE locale = ?", CONNECTION_SYNCH);

    // CreatureDifficulty.db2
    PrepareStatement(HOTFIX_SEL_CREATURE_DIFFICULTY, "SELECT ID, Flags1, Flags2, Flags3, Flags4, Flags5, Flags6, Flags7, FactionID, ExpansionID, "
        "MinLevel, MaxLevel, CreatureID FROM creature_difficulty ORDER BY ID DESC", CONNECTION_SYNCH);

    // CreatureDisplayInfo.db2
    PrepareStatement(HOTFIX_SEL_CREATURE_DISPLAY_INFO, "SELECT ID, CreatureModelScale, ModelID, NPCSoundID, SizeClass, Flags, Gender, "
        "ExtendedDisplayInfoID, PortraitTextureFileDataID, CreatureModelAlpha, SoundID, PlayerOverrideScale, PortraitCreatureDisplayInfoID, BloodID, "
        "ParticleColorID, DissolveEffectID, ObjectEffectPackageID, AnimReplacementSetID, UnarmedWeaponType, StateSpellVisualKitID, PetInstanceScale, "
        "MountPoofSpellVisualKitID, TextureVariationFileDataID1, TextureVariationFileDataID2, TextureVariationFileDataID3 FROM creature_display_info"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // CreatureDisplayInfoCond.db2
    PrepareStatement(HOTFIX_SEL_CREATURE_DISPLAY_INFO_COND, "SELECT ID, RaceMask, CustomOption0Mask1, CustomOption0Mask2, CustomOption1Mask1, "
        "CustomOption1Mask2, CustomOption2Mask1, CustomOption2Mask2, OrderIndex, Gender, ClassMask, SkinColorMask, HairColorMask, HairStyleMask, "
        "FaceStyleMask, FacialHairStyleMask, CreatureModelDataID, TextureVariationFileDataID1, TextureVariationFileDataID2, "
        "TextureVariationFileDataID3 FROM creature_display_info_cond ORDER BY ID DESC", CONNECTION_SYNCH);

    // CreatureDisplayInfoEvt.db2
    PrepareStatement(HOTFIX_SEL_CREATURE_DISPLAY_INFO_EVT, "SELECT ID, Fourcc, SpellVisualKitID, Flags FROM creature_display_info_evt ORDER BY ID DESC", CONNECTION_SYNCH);

    // CreatureDisplayInfoExtra.db2
    PrepareStatement(HOTFIX_SEL_CREATURE_DISPLAY_INFO_EXTRA, "SELECT ID, BakeMaterialResourcesID, HDBakeMaterialResourcesID, DisplayRaceID, "
        "DisplaySexID, DisplayClassID, SkinID, FaceID, HairStyleID, HairColorID, FacialHairID, CustomDisplayOption1, CustomDisplayOption2, "
        "CustomDisplayOption3, Flags FROM creature_display_info_extra ORDER BY ID DESC", CONNECTION_SYNCH);

    // CreatureDisplayInfoTrn.db2
    PrepareStatement(HOTFIX_SEL_CREATURE_DISPLAY_INFO_TRN, "SELECT ID, DstCreatureDisplayInfoID, MaxTime, DissolveEffectID, StartVisualKitID, "
        "FinishVisualKitID FROM creature_display_info_trn ORDER BY ID DESC", CONNECTION_SYNCH);

    // CreatureDispXUiCamera.db2
    PrepareStatement(HOTFIX_SEL_CREATURE_DISP_X_UI_CAMERA, "SELECT ID, CreatureDisplayInfoID, UiCameraID FROM creature_disp_x_ui_camera"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // CreatureFamily.db2
    PrepareStatement(HOTFIX_SEL_CREATURE_FAMILY, "SELECT ID, Name, MinScale, MaxScale, IconFileID, SkillLine1, SkillLine2, PetFoodMask, "
        "MinScaleLevel, MaxScaleLevel, PetTalentType FROM creature_family ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_CREATURE_FAMILY, "SELECT ID, Name_lang FROM creature_family_locale WHERE locale = ?", CONNECTION_SYNCH);

    // CreatureImmunities.db2
    PrepareStatement(HOTFIX_SEL_CREATURE_IMMUNITIES, "SELECT ID, Mechanic1, Mechanic2, School, MechanicsAllowed, EffectsAllowed, StatesAllowed, "
        "Flags, DispelType, Effect1, Effect2, Effect3, Effect4, Effect5, Effect6, Effect7, Effect8, Effect9, State1, State2, State3, State4, State5, "
        "State6, State7, State8, State9, State10, State11, State12, State13, State14, State15, State16 FROM creature_immunities ORDER BY ID DESC", CONNECTION_SYNCH);

    // CreatureModelData.db2
    PrepareStatement(HOTFIX_SEL_CREATURE_MODEL_DATA, "SELECT ID, ModelScale, FootprintTextureLength, FootprintTextureWidth, FootprintParticleScale, "
        "CollisionWidth, CollisionHeight, MountHeight, GeoBox1, GeoBox2, GeoBox3, GeoBox4, GeoBox5, GeoBox6, WorldEffectScale, AttachedEffectScale, "
        "MissileCollisionRadius, MissileCollisionPush, MissileCollisionRaise, OverrideLootEffectScale, OverrideNameScale, OverrideSelectionRadius, "
        "TamedPetBaseScale, HoverHeight, Flags, FileDataID, SizeClass, BloodID, FootprintTextureID, FoleyMaterialID, FootstepCameraEffectID, "
        "DeathThudCameraEffectID, SoundID, CreatureGeosetDataID FROM creature_model_data ORDER BY ID DESC", CONNECTION_SYNCH);

    // CreatureMovementInfo.db2
    PrepareStatement(HOTFIX_SEL_CREATURE_MOVEMENT_INFO, "SELECT ID, SmoothFacingChaseRate FROM creature_movement_info ORDER BY ID DESC", CONNECTION_SYNCH);

    // CreatureSoundData.db2
    PrepareStatement(HOTFIX_SEL_CREATURE_SOUND_DATA, "SELECT ID, FidgetDelaySecondsMin, FidgetDelaySecondsMax, CreatureImpactType, SoundExertionID, "
        "SoundExertionCriticalID, SoundInjuryID, SoundInjuryCriticalID, SoundInjuryCrushingBlowID, SoundDeathID, SoundStunID, SoundStandID, "
        "SoundFootstepID, SoundAggroID, SoundWingFlapID, SoundWingGlideID, SoundAlertID, NPCSoundID, LoopSoundID, SoundJumpStartID, SoundJumpEndID, "
        "SoundPetAttackID, SoundPetOrderID, SoundPetDismissID, BirthSoundID, SpellCastDirectedSoundID, SubmergeSoundID, SubmergedSoundID, "
        "CreatureSoundDataIDPet, WindupSoundID, WindupCriticalSoundID, ChargeSoundID, ChargeCriticalSoundID, BattleShoutSoundID, "
        "BattleShoutCriticalSoundID, TauntSoundID, SoundFidget1, SoundFidget2, SoundFidget3, SoundFidget4, SoundFidget5, CustomAttack1, "
        "CustomAttack2, CustomAttack3, CustomAttack4 FROM creature_sound_data ORDER BY ID DESC", CONNECTION_SYNCH);

    // CreatureType.db2
    PrepareStatement(HOTFIX_SEL_CREATURE_TYPE, "SELECT ID, Name, Flags FROM creature_type ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_CREATURE_TYPE, "SELECT ID, Name_lang FROM creature_type_locale WHERE locale = ?", CONNECTION_SYNCH);

    // CreatureXContribution.db2
    PrepareStatement(HOTFIX_SEL_CREATURE_X_CONTRIBUTION, "SELECT ID, ContributionID, CreatureId FROM creature_x_contribution ORDER BY ID DESC", CONNECTION_SYNCH);

    // Criteria.db2
    PrepareStatement(HOTFIX_SEL_CRITERIA, "SELECT ID, Asset, StartAsset, FailAsset, ModifierTreeId, StartTimer, EligibilityWorldStateId, Type, "
        "StartEvent, FailEvent, Flags, EligibilityWorldStateValue FROM criteria ORDER BY ID DESC", CONNECTION_SYNCH);

    // CriteriaTree.db2
    PrepareStatement(HOTFIX_SEL_CRITERIA_TREE, "SELECT ID, Description, Amount, Flags, Operator, CriteriaID, Parent, OrderIndex FROM criteria_tree"
        " ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_CRITERIA_TREE, "SELECT ID, Description_lang FROM criteria_tree_locale WHERE locale = ?", CONNECTION_SYNCH);

    // CriteriaTreeXEffect.db2
    PrepareStatement(HOTFIX_SEL_CRITERIA_TREE_X_EFFECT, "SELECT ID, WorldEffectID FROM criteria_tree_x_effect ORDER BY ID DESC", CONNECTION_SYNCH);

    // CurrencyCategory.db2
    PrepareStatement(HOTFIX_SEL_CURRENCY_CATEGORY, "SELECT ID, Name, Flags, ExpansionID FROM currency_category ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_CURRENCY_CATEGORY, "SELECT ID, Name_lang FROM currency_category_locale WHERE locale = ?", CONNECTION_SYNCH);

    // CurrencyTypes.db2
    PrepareStatement(HOTFIX_SEL_CURRENCY_TYPES, "SELECT ID, Name, Description, MaxQty, MaxEarnablePerWeek, Flags, CategoryID, SpellCategory, Quality, "
        "InventoryIconFileID, SpellWeight FROM currency_types ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_CURRENCY_TYPES, "SELECT ID, Name_lang, Description_lang FROM currency_types_locale WHERE locale = ?", CONNECTION_SYNCH);

    // Curve.db2
    PrepareStatement(HOTFIX_SEL_CURVE, "SELECT ID, Type, Flags FROM curve ORDER BY ID DESC", CONNECTION_SYNCH);

    // CurvePoint.db2
    PrepareStatement(HOTFIX_SEL_CURVE_POINT, "SELECT ID, PosX, PosY, CurveID, OrderIndex FROM curve_point ORDER BY ID DESC", CONNECTION_SYNCH);

    // DeathThudLookups.db2
    PrepareStatement(HOTFIX_SEL_DEATH_THUD_LOOKUPS, "SELECT ID, SizeClass, TerrainTypeSoundID, SoundEntryID, SoundEntryIDWater FROM death_thud_lookups"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // DecalProperties.db2
    PrepareStatement(HOTFIX_SEL_DECAL_PROPERTIES, "SELECT ID, FileDataID, InnerRadius, OuterRadius, Rim, Gain, ModX, Scale, FadeIn, FadeOut, "
        "Priority, BlendMode, TopTextureBlendSetID, BotTextureBlendSetID, GameFlags, Flags, CasterDecalPropertiesID FROM decal_properties"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // DeclinedWord.db2
    PrepareStatement(HOTFIX_SEL_DECLINED_WORD, "SELECT Word, ID FROM declined_word ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_DECLINED_WORD, "SELECT ID, Word_lang FROM declined_word_locale WHERE locale = ?", CONNECTION_SYNCH);

    // DeclinedWordCases.db2
    PrepareStatement(HOTFIX_SEL_DECLINED_WORD_CASES, "SELECT ID, DeclinedWord, CaseIndex FROM declined_word_cases ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_DECLINED_WORD_CASES, "SELECT ID, DeclinedWord_lang FROM declined_word_cases_locale WHERE locale = ?", CONNECTION_SYNCH);

    // DestructibleModelData.db2
    PrepareStatement(HOTFIX_SEL_DESTRUCTIBLE_MODEL_DATA, "SELECT ID, State0Wmo, State1Wmo, State2Wmo, State3Wmo, HealEffectSpeed, "
        "State0ImpactEffectDoodadSet, State0AmbientDoodadSet, State0NameSet, State1DestructionDoodadSet, State1ImpactEffectDoodadSet, "
        "State1AmbientDoodadSet, State1NameSet, State2DestructionDoodadSet, State2ImpactEffectDoodadSet, State2AmbientDoodadSet, State2NameSet, "
        "State3InitDoodadSet, State3AmbientDoodadSet, State3NameSet, EjectDirection, DoNotHighlight, HealEffect FROM destructible_model_data"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // DeviceBlacklist.db2
    PrepareStatement(HOTFIX_SEL_DEVICE_BLACKLIST, "SELECT ID, VendorID, DeviceID FROM device_blacklist ORDER BY ID DESC", CONNECTION_SYNCH);

    // DeviceDefaultSettings.db2
    PrepareStatement(HOTFIX_SEL_DEVICE_DEFAULT_SETTINGS, "SELECT ID, VendorID, DeviceID, DefaultSetting FROM device_default_settings ORDER BY ID DESC", CONNECTION_SYNCH);

    // Difficulty.db2
    PrepareStatement(HOTFIX_SEL_DIFFICULTY, "SELECT ID, Name, GroupSizeHealthCurveID, GroupSizeDmgCurveID, GroupSizeSpellPointsCurveID, "
        "FallbackDifficultyID, InstanceType, MinPlayers, MaxPlayers, OldEnumValue, Flags, ToggleDifficultyID, ItemContext, OrderIndex FROM difficulty"
        " ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_DIFFICULTY, "SELECT ID, Name_lang FROM difficulty_locale WHERE locale = ?", CONNECTION_SYNCH);

    // DissolveEffect.db2
    PrepareStatement(HOTFIX_SEL_DISSOLVE_EFFECT, "SELECT ID, Ramp, StartValue, EndValue, FadeInTime, FadeOutTime, Duration, Scale, FresnelIntensity, "
        "AttachID, ProjectionType, TextureBlendSetID, Flags, CurveID, Priority FROM dissolve_effect ORDER BY ID DESC", CONNECTION_SYNCH);

    // DriverBlacklist.db2
    PrepareStatement(HOTFIX_SEL_DRIVER_BLACKLIST, "SELECT ID, DriverVersionHi, DriverVersionLow, VendorID, DeviceID, OsVersion, OsBits, Flags"
        " FROM driver_blacklist ORDER BY ID DESC", CONNECTION_SYNCH);

    // DungeonEncounter.db2
    PrepareStatement(HOTFIX_SEL_DUNGEON_ENCOUNTER, "SELECT Name, CreatureDisplayID, MapID, DifficultyID, Bit, Flags, ID, OrderIndex, SpellIconFileID"
        " FROM dungeon_encounter ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_DUNGEON_ENCOUNTER, "SELECT ID, Name_lang FROM dungeon_encounter_locale WHERE locale = ?", CONNECTION_SYNCH);

    // DungeonMap.db2
    PrepareStatement(HOTFIX_SEL_DUNGEON_MAP, "SELECT Min1, Min2, Max1, Max2, MapID, ParentWorldMapID, FloorIndex, RelativeHeightIndex, Flags, ID"
        " FROM dungeon_map ORDER BY ID DESC", CONNECTION_SYNCH);

    // DungeonMapChunk.db2
    PrepareStatement(HOTFIX_SEL_DUNGEON_MAP_CHUNK, "SELECT ID, MinZ, DoodadPlacementID, MapID, WmoGroupID, DungeonMapID FROM dungeon_map_chunk"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // DurabilityCosts.db2
    PrepareStatement(HOTFIX_SEL_DURABILITY_COSTS, "SELECT ID, WeaponSubClassCost1, WeaponSubClassCost2, WeaponSubClassCost3, WeaponSubClassCost4, "
        "WeaponSubClassCost5, WeaponSubClassCost6, WeaponSubClassCost7, WeaponSubClassCost8, WeaponSubClassCost9, WeaponSubClassCost10, "
        "WeaponSubClassCost11, WeaponSubClassCost12, WeaponSubClassCost13, WeaponSubClassCost14, WeaponSubClassCost15, WeaponSubClassCost16, "
        "WeaponSubClassCost17, WeaponSubClassCost18, WeaponSubClassCost19, WeaponSubClassCost20, WeaponSubClassCost21, ArmorSubClassCost1, "
        "ArmorSubClassCost2, ArmorSubClassCost3, ArmorSubClassCost4, ArmorSubClassCost5, ArmorSubClassCost6, ArmorSubClassCost7, ArmorSubClassCost8"
        " FROM durability_costs ORDER BY ID DESC", CONNECTION_SYNCH);

    // DurabilityQuality.db2
    PrepareStatement(HOTFIX_SEL_DURABILITY_QUALITY, "SELECT ID, Data FROM durability_quality ORDER BY ID DESC", CONNECTION_SYNCH);

    // EdgeGlowEffect.db2
    PrepareStatement(HOTFIX_SEL_EDGE_GLOW_EFFECT, "SELECT ID, Duration, FadeIn, FadeOut, FresnelCoefficient, GlowRed, GlowGreen, GlowBlue, GlowAlpha, "
        "GlowMultiplier, InitialDelay, Flags, CurveID, Priority FROM edge_glow_effect ORDER BY ID DESC", CONNECTION_SYNCH);

    // Emotes.db2
    PrepareStatement(HOTFIX_SEL_EMOTES, "SELECT ID, RaceMask, EmoteSlashCommand, EmoteFlags, SpellVisualKitID, AnimID, EmoteSpecProc, ClassMask, "
        "EmoteSpecProcParam, EventSoundID FROM emotes ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_EMOTES, "SELECT ID, EmoteSlashCommand_lang FROM emotes_locale WHERE locale = ?", CONNECTION_SYNCH);

    // EmotesText.db2
    PrepareStatement(HOTFIX_SEL_EMOTES_TEXT, "SELECT ID, Name, EmoteID FROM emotes_text ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_EMOTES_TEXT, "SELECT ID, Name_lang FROM emotes_text_locale WHERE locale = ?", CONNECTION_SYNCH);

    // EmotesTextData.db2
    PrepareStatement(HOTFIX_SEL_EMOTES_TEXT_DATA, "SELECT ID, Text, RelationshipFlags FROM emotes_text_data ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_EMOTES_TEXT_DATA, "SELECT ID, Text_lang FROM emotes_text_data_locale WHERE locale = ?", CONNECTION_SYNCH);

    // EmotesTextSound.db2
    PrepareStatement(HOTFIX_SEL_EMOTES_TEXT_SOUND, "SELECT ID, RaceID, SexID, ClassID, SoundID FROM emotes_text_sound ORDER BY ID DESC", CONNECTION_SYNCH);

    // EnvironmentalDamage.db2
    PrepareStatement(HOTFIX_SEL_ENVIRONMENTAL_DAMAGE, "SELECT ID, VisualKitID, EnumID FROM environmental_damage ORDER BY ID DESC", CONNECTION_SYNCH);

    // Exhaustion.db2
    PrepareStatement(HOTFIX_SEL_EXHAUSTION, "SELECT Name, CombatLogText, Xp, Factor, OutdoorHours, InnHours, Threshold, ID FROM exhaustion"
        " ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_EXHAUSTION, "SELECT ID, Name_lang, CombatLogText_lang FROM exhaustion_locale WHERE locale = ?", CONNECTION_SYNCH);

    // Faction.db2
    PrepareStatement(HOTFIX_SEL_FACTION, "SELECT ReputationRaceMask1, ReputationRaceMask2, ReputationRaceMask3, ReputationRaceMask4, Name, "
        "Description, ID, ReputationBase1, ReputationBase2, ReputationBase3, ReputationBase4, ParentFactionMod1, ParentFactionMod2, ReputationMax1, "
        "ReputationMax2, ReputationMax3, ReputationMax4, ReputationIndex, ReputationClassMask1, ReputationClassMask2, ReputationClassMask3, "
        "ReputationClassMask4, ReputationFlags1, ReputationFlags2, ReputationFlags3, ReputationFlags4, ParentFactionID, ParagonFactionID, "
        "ParentFactionCap1, ParentFactionCap2, Expansion, Flags, FriendshipRepID FROM faction ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_FACTION, "SELECT ID, Name_lang, Description_lang FROM faction_locale WHERE locale = ?", CONNECTION_SYNCH);

    // FactionGroup.db2
    PrepareStatement(HOTFIX_SEL_FACTION_GROUP, "SELECT InternalName, Name, ID, MaskID, HonorCurrencyTextureFileID, ConquestCurrencyTextureFileID"
        " FROM faction_group ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_FACTION_GROUP, "SELECT ID, InternalName_lang, Name_lang FROM faction_group_locale WHERE locale = ?", CONNECTION_SYNCH);

    // FactionTemplate.db2
    PrepareStatement(HOTFIX_SEL_FACTION_TEMPLATE, "SELECT ID, Faction, Flags, Enemies1, Enemies2, Enemies3, Enemies4, Friend1, Friend2, Friend3, "
        "Friend4, FactionGroup, FriendGroup, EnemyGroup FROM faction_template ORDER BY ID DESC", CONNECTION_SYNCH);

    // FootprintTextures.db2
    PrepareStatement(HOTFIX_SEL_FOOTPRINT_TEXTURES, "SELECT ID, TextureBlendsetID, Flags, FileDataID FROM footprint_textures ORDER BY ID DESC", CONNECTION_SYNCH);

    // FootstepTerrainLookup.db2
    PrepareStatement(HOTFIX_SEL_FOOTSTEP_TERRAIN_LOOKUP, "SELECT ID, CreatureFootstepID, TerrainSoundID, SoundID, SoundIDSplash"
        " FROM footstep_terrain_lookup ORDER BY ID DESC", CONNECTION_SYNCH);

    // FriendshipRepReaction.db2
    PrepareStatement(HOTFIX_SEL_FRIENDSHIP_REP_REACTION, "SELECT ID, Reaction, ReactionThreshold, FriendshipRepID FROM friendship_rep_reaction"
        " ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_FRIENDSHIP_REP_REACTION, "SELECT ID, Reaction_lang FROM friendship_rep_reaction_locale WHERE locale = ?", CONNECTION_SYNCH);

    // FriendshipReputation.db2
    PrepareStatement(HOTFIX_SEL_FRIENDSHIP_REPUTATION, "SELECT Description, TextureFileID, FactionID, ID FROM friendship_reputation ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_FRIENDSHIP_REPUTATION, "SELECT ID, Description_lang FROM friendship_reputation_locale WHERE locale = ?", CONNECTION_SYNCH);

    // FullScreenEffect.db2
    PrepareStatement(HOTFIX_SEL_FULL_SCREEN_EFFECT, "SELECT ID, Saturation, GammaRed, GammaGreen, GammaBlue, MaskOffsetY, MaskSizeMultiplier, "
        "MaskPower, ColorMultiplyRed, ColorMultiplyGreen, ColorMultiplyBlue, ColorMultiplyOffsetY, ColorMultiplyMultiplier, ColorMultiplyPower, "
        "ColorAdditionRed, ColorAdditionGreen, ColorAdditionBlue, ColorAdditionOffsetY, ColorAdditionMultiplier, ColorAdditionPower, BlurIntensity, "
        "BlurOffsetY, BlurMultiplier, BlurPower, Flags, TextureBlendSetID, EffectFadeInMs, EffectFadeOutMs FROM full_screen_effect ORDER BY ID DESC", CONNECTION_SYNCH);

    // GameobjectArtKit.db2
    PrepareStatement(HOTFIX_SEL_GAMEOBJECT_ART_KIT, "SELECT ID, AttachModelFileID, TextureVariationFileID1, TextureVariationFileID2, "
        "TextureVariationFileID3 FROM gameobject_art_kit ORDER BY ID DESC", CONNECTION_SYNCH);

    // GameobjectDiffAnimMap.db2
    PrepareStatement(HOTFIX_SEL_GAMEOBJECT_DIFF_ANIM_MAP, "SELECT ID, AttachmentDisplayID, DifficultyID, Animation FROM gameobject_diff_anim_map"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // GameobjectDisplayInfo.db2
    PrepareStatement(HOTFIX_SEL_GAMEOBJECT_DISPLAY_INFO, "SELECT ID, FileDataID, GeoBoxMinX, GeoBoxMinY, GeoBoxMinZ, GeoBoxMaxX, GeoBoxMaxY, "
        "GeoBoxMaxZ, OverrideLootEffectScale, OverrideNameScale, ObjectEffectPackageID FROM gameobject_display_info ORDER BY ID DESC", CONNECTION_SYNCH);

    // GameobjectDisplayInfoXSoundKit.db2
    PrepareStatement(HOTFIX_SEL_GAMEOBJECT_DISPLAY_INFO_X_SOUND_KIT, "SELECT ID, EventIndex, SoundKitID FROM gameobject_display_info_x_sound_kit"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // Gameobjects.db2
    PrepareStatement(HOTFIX_SEL_GAMEOBJECTS, "SELECT Name, PositionX, PositionY, PositionZ, RotationX, RotationY, RotationZ, RotationO, Scale, "
        "PropValue1, PropValue2, PropValue3, PropValue4, PropValue5, PropValue6, PropValue7, PropValue8, OwnerID, DisplayID, PhaseID, PhaseGroupID, "
        "PhaseUseFlags, TypeID, ID FROM gameobjects ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_GAMEOBJECTS, "SELECT ID, Name_lang FROM gameobjects_locale WHERE locale = ?", CONNECTION_SYNCH);

    // GameTips.db2
    PrepareStatement(HOTFIX_SEL_GAME_TIPS, "SELECT ID, Text, MinLevel, MaxLevel, SortIndex FROM game_tips ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_GAME_TIPS, "SELECT ID, Text_lang FROM game_tips_locale WHERE locale = ?", CONNECTION_SYNCH);

    // GarrAbility.db2
    PrepareStatement(HOTFIX_SEL_GARR_ABILITY, "SELECT Name, Description, IconFileDataID, Flags, FactionChangeGarrAbilityID, GarrAbilityCategoryID, "
        "GarrFollowerTypeID, ID FROM garr_ability ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_GARR_ABILITY, "SELECT ID, Name_lang, Description_lang FROM garr_ability_locale WHERE locale = ?", CONNECTION_SYNCH);

    // GarrAbilityCategory.db2
    PrepareStatement(HOTFIX_SEL_GARR_ABILITY_CATEGORY, "SELECT ID, Name FROM garr_ability_category ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_GARR_ABILITY_CATEGORY, "SELECT ID, Name_lang FROM garr_ability_category_locale WHERE locale = ?", CONNECTION_SYNCH);

    // GarrAbilityEffect.db2
    PrepareStatement(HOTFIX_SEL_GARR_ABILITY_EFFECT, "SELECT CombatWeightBase, CombatWeightMax, ActionValueFlat, ActionRecordID, GarrAbilityID, "
        "AbilityAction, AbilityTargetType, GarrMechanicTypeID, Flags, ActionRace, ActionHours, ID FROM garr_ability_effect ORDER BY ID DESC", CONNECTION_SYNCH);

    // GarrBuilding.db2
    PrepareStatement(HOTFIX_SEL_GARR_BUILDING, "SELECT ID, AllianceName, HordeName, Description, Tooltip, HordeGameObjectID, AllianceGameObjectID, "
        "IconFileDataID, CurrencyTypeID, HordeUiTextureKitID, AllianceUiTextureKitID, AllianceSceneScriptPackageID, HordeSceneScriptPackageID, "
        "GarrAbilityID, BonusGarrAbilityID, GoldCost, GarrSiteID, BuildingType, UpgradeLevel, Flags, ShipmentCapacity, GarrTypeID, BuildSeconds, "
        "CurrencyQty, MaxAssignments FROM garr_building ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_GARR_BUILDING, "SELECT ID, AllianceName_lang, HordeName_lang, Description_lang, Tooltip_lang"
        " FROM garr_building_locale WHERE locale = ?", CONNECTION_SYNCH);

    // GarrBuildingDoodadSet.db2
    PrepareStatement(HOTFIX_SEL_GARR_BUILDING_DOODAD_SET, "SELECT ID, GarrBuildingID, Type, AllianceDoodadSet, HordeDoodadSet, SpecializationID"
        " FROM garr_building_doodad_set ORDER BY ID DESC", CONNECTION_SYNCH);

    // GarrBuildingPlotInst.db2
    PrepareStatement(HOTFIX_SEL_GARR_BUILDING_PLOT_INST, "SELECT MapOffsetX, MapOffsetY, UiTextureAtlasMemberID, GarrSiteLevelPlotInstID, "
        "GarrBuildingID, ID FROM garr_building_plot_inst ORDER BY ID DESC", CONNECTION_SYNCH);

    // GarrClassSpec.db2
    PrepareStatement(HOTFIX_SEL_GARR_CLASS_SPEC, "SELECT ClassSpec, ClassSpecMale, ClassSpecFemale, UiTextureAtlasMemberID, GarrFollItemSetID, "
        "FollowerClassLimit, Flags, ID FROM garr_class_spec ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_GARR_CLASS_SPEC, "SELECT ID, ClassSpec_lang, ClassSpecMale_lang, ClassSpecFemale_lang FROM garr_class_spec_locale"
        " WHERE locale = ?", CONNECTION_SYNCH);

    // GarrClassSpecPlayerCond.db2
    PrepareStatement(HOTFIX_SEL_GARR_CLASS_SPEC_PLAYER_COND, "SELECT ID, Name, IconFileDataID, OrderIndex, GarrClassSpecID, PlayerConditionID, "
        "FlavorGarrStringID FROM garr_class_spec_player_cond ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_GARR_CLASS_SPEC_PLAYER_COND, "SELECT ID, Name_lang FROM garr_class_spec_player_cond_locale WHERE locale = ?", CONNECTION_SYNCH);

    // GarrEncounter.db2
    PrepareStatement(HOTFIX_SEL_GARR_ENCOUNTER, "SELECT Name, CreatureID, UiAnimScale, UiAnimHeight, PortraitFileDataID, ID, UiTextureKitID"
        " FROM garr_encounter ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_GARR_ENCOUNTER, "SELECT ID, Name_lang FROM garr_encounter_locale WHERE locale = ?", CONNECTION_SYNCH);

    // GarrEncounterSetXEncounter.db2
    PrepareStatement(HOTFIX_SEL_GARR_ENCOUNTER_SET_X_ENCOUNTER, "SELECT ID, xEncounter, Encounter FROM garr_encounter_set_x_encounter ORDER BY ID DESC", CONNECTION_SYNCH);

    // GarrEncounterXMechanic.db2
    PrepareStatement(HOTFIX_SEL_GARR_ENCOUNTER_X_MECHANIC, "SELECT ID, GarrMechanicID, GarrMechanicSetID, GarrEncounterID"
        " FROM garr_encounter_x_mechanic ORDER BY ID DESC", CONNECTION_SYNCH);

    // GarrFollItemSetMember.db2
    PrepareStatement(HOTFIX_SEL_GARR_FOLL_ITEM_SET_MEMBER, "SELECT ID, ItemID, MinItemLevel, ItemSlot, GarrFollItemSetID"
        " FROM garr_foll_item_set_member ORDER BY ID DESC", CONNECTION_SYNCH);

    // GarrFollower.db2
    PrepareStatement(HOTFIX_SEL_GARR_FOLLOWER, "SELECT HordeSourceText, AllianceSourceText, TitleName, HordeCreatureID, AllianceCreatureID, "
        "HordeIconFileDataID, AllianceIconFileDataID, HordeSlottingBroadcastTextID, AllySlottingBroadcastTextID, HordeGarrFollItemSetID, "
        "AllianceGarrFollItemSetID, ItemLevelWeapon, ItemLevelArmor, HordeUITextureKitID, AllianceUITextureKitID, GarrFollowerTypeID, "
        "HordeGarrFollRaceID, AllianceGarrFollRaceID, Quality, HordeGarrClassSpecID, AllianceGarrClassSpecID, FollowerLevel, Gender, Flags, "
        "HordeSourceTypeEnum, AllianceSourceTypeEnum, GarrTypeID, Vitality, ChrClassID, HordeFlavorGarrStringID, AllianceFlavorGarrStringID, ID"
        " FROM garr_follower ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_GARR_FOLLOWER, "SELECT ID, HordeSourceText_lang, AllianceSourceText_lang, TitleName_lang FROM garr_follower_locale"
        " WHERE locale = ?", CONNECTION_SYNCH);

    // GarrFollowerLevelXP.db2
    PrepareStatement(HOTFIX_SEL_GARR_FOLLOWER_LEVEL_X_P, "SELECT ID, XpToNextLevel, ShipmentXP, FollowerLevel, GarrFollowerTypeID"
        " FROM garr_follower_level_x_p ORDER BY ID DESC", CONNECTION_SYNCH);

    // GarrFollowerQuality.db2
    PrepareStatement(HOTFIX_SEL_GARR_FOLLOWER_QUALITY, "SELECT ID, XpToNextQuality, ShipmentXP, Quality, AbilityCount, TraitCount, "
        "GarrFollowerTypeID, ClassSpecID FROM garr_follower_quality ORDER BY ID DESC", CONNECTION_SYNCH);

    // GarrFollowerSetXFollower.db2
    PrepareStatement(HOTFIX_SEL_GARR_FOLLOWER_SET_X_FOLLOWER, "SELECT ID, GarrFollowerID, GarrFollowerSetID FROM garr_follower_set_x_follower"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // GarrFollowerType.db2
    PrepareStatement(HOTFIX_SEL_GARR_FOLLOWER_TYPE, "SELECT ID, MaxItemLevel, MaxFollowers, MaxFollowerBuildingType, GarrTypeID, LevelRangeBias, "
        "ItemLevelRangeBias, Flags FROM garr_follower_type ORDER BY ID DESC", CONNECTION_SYNCH);

    // GarrFollowerUICreature.db2
    PrepareStatement(HOTFIX_SEL_GARR_FOLLOWER_U_I_CREATURE, "SELECT ID, CreatureID, Scale, FactionIndex, OrderIndex, Flags"
        " FROM garr_follower_u_i_creature ORDER BY ID DESC", CONNECTION_SYNCH);

    // GarrFollowerXAbility.db2
    PrepareStatement(HOTFIX_SEL_GARR_FOLLOWER_X_ABILITY, "SELECT ID, GarrAbilityID, FactionIndex, GarrFollowerID FROM garr_follower_x_ability"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // GarrFollSupportSpell.db2
    PrepareStatement(HOTFIX_SEL_GARR_FOLL_SUPPORT_SPELL, "SELECT ID, AllianceSpellID, HordeSpellID, OrderIndex, GarrFollowerID"
        " FROM garr_foll_support_spell ORDER BY ID DESC", CONNECTION_SYNCH);

    // GarrItemLevelUpgradeData.db2
    PrepareStatement(HOTFIX_SEL_GARR_ITEM_LEVEL_UPGRADE_DATA, "SELECT ID, Operation, MinItemLevel, MaxItemLevel, FollowerTypeID"
        " FROM garr_item_level_upgrade_data ORDER BY ID DESC", CONNECTION_SYNCH);

    // GarrMechanic.db2
    PrepareStatement(HOTFIX_SEL_GARR_MECHANIC, "SELECT ID, Factor, GarrMechanicTypeID, GarrAbilityID FROM garr_mechanic ORDER BY ID DESC", CONNECTION_SYNCH);

    // GarrMechanicSetXMechanic.db2
    PrepareStatement(HOTFIX_SEL_GARR_MECHANIC_SET_X_MECHANIC, "SELECT GarrMechanicID, ID, GarrMechanicSetId FROM garr_mechanic_set_x_mechanic"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // GarrMechanicType.db2
    PrepareStatement(HOTFIX_SEL_GARR_MECHANIC_TYPE, "SELECT Name, Description, IconFileDataID, Category, ID FROM garr_mechanic_type ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_GARR_MECHANIC_TYPE, "SELECT ID, Name_lang, Description_lang FROM garr_mechanic_type_locale WHERE locale = ?", CONNECTION_SYNCH);

    // GarrMission.db2
    PrepareStatement(HOTFIX_SEL_GARR_MISSION, "SELECT Name, Description, Location, MissionDuration, OfferDuration, MapPos_1, MapPos_2, WorldPos1, "
        "WorldPos2, TargetItemLevel, UiTextureKitID, MissionCostCurrencyTypesID, TargetLevel, EnvGarrMechanicTypeID, MaxFollowers, "
        "OfferedGarrMissionTextureID, GarrMissionTypeID, GarrFollowerTypeID, BaseCompletionChance, FollowerDeathChance, GarrTypeID, ID, "
        "TravelDuration, CriteriaID, PlayerConditionID, MissionCost, Flags, BaseFollowerXP, AreaID, OvermaxRewardPackID, EnvGarrMechanicID"
        " FROM garr_mission ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_GARR_MISSION, "SELECT ID, Name_lang, Description_lang, Location_lang FROM garr_mission_locale WHERE locale = ?", CONNECTION_SYNCH);

    // GarrMissionTexture.db2
    PrepareStatement(HOTFIX_SEL_GARR_MISSION_TEXTURE, "SELECT ID, Pos1, Pos2, UiTextureKitID FROM garr_mission_texture ORDER BY ID DESC", CONNECTION_SYNCH);

    // GarrMissionType.db2
    PrepareStatement(HOTFIX_SEL_GARR_MISSION_TYPE, "SELECT ID, Name, UiTextureAtlasMemberID, UiTextureKitID FROM garr_mission_type ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_GARR_MISSION_TYPE, "SELECT ID, Name_lang FROM garr_mission_type_locale WHERE locale = ?", CONNECTION_SYNCH);

    // GarrMissionXEncounter.db2
    PrepareStatement(HOTFIX_SEL_GARR_MISSION_X_ENCOUNTER, "SELECT OrderIndex, ID, GarrMissionID, GarrEncounterID, GarrEncounterSetID"
        " FROM garr_mission_x_encounter ORDER BY ID DESC", CONNECTION_SYNCH);

    // GarrMissionXFollower.db2
    PrepareStatement(HOTFIX_SEL_GARR_MISSION_X_FOLLOWER, "SELECT ID, GarrFollowerID, GarrFollowerSetID, GarrMissionID FROM garr_mission_x_follower"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // GarrMssnBonusAbility.db2
    PrepareStatement(HOTFIX_SEL_GARR_MSSN_BONUS_ABILITY, "SELECT ID, Radius, DurationSecs, GarrAbilityID, GarrFollowerTypeID, GarrMissionTextureID"
        " FROM garr_mssn_bonus_ability ORDER BY ID DESC", CONNECTION_SYNCH);

    // GarrPlot.db2
    PrepareStatement(HOTFIX_SEL_GARR_PLOT, "SELECT ID, Name, AllianceConstructObjID, HordeConstructObjID, UiCategoryID, PlotType, Flags, "
        "UpgradeRequirement1, UpgradeRequirement2 FROM garr_plot ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_GARR_PLOT, "SELECT ID, Name_lang FROM garr_plot_locale WHERE locale = ?", CONNECTION_SYNCH);

    // GarrPlotBuilding.db2
    PrepareStatement(HOTFIX_SEL_GARR_PLOT_BUILDING, "SELECT ID, GarrPlotID, GarrBuildingID FROM garr_plot_building ORDER BY ID DESC", CONNECTION_SYNCH);

    // GarrPlotInstance.db2
    PrepareStatement(HOTFIX_SEL_GARR_PLOT_INSTANCE, "SELECT ID, Name, GarrPlotID FROM garr_plot_instance ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_GARR_PLOT_INSTANCE, "SELECT ID, Name_lang FROM garr_plot_instance_locale WHERE locale = ?", CONNECTION_SYNCH);

    // GarrPlotUICategory.db2
    PrepareStatement(HOTFIX_SEL_GARR_PLOT_U_I_CATEGORY, "SELECT ID, CategoryName, PlotType FROM garr_plot_u_i_category ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_GARR_PLOT_U_I_CATEGORY, "SELECT ID, CategoryName_lang FROM garr_plot_u_i_category_locale WHERE locale = ?", CONNECTION_SYNCH);

    // GarrSiteLevel.db2
    PrepareStatement(HOTFIX_SEL_GARR_SITE_LEVEL, "SELECT ID, TownHallUiPos1, TownHallUiPos2, MapID, UiTextureKitID, UpgradeMovieID, UpgradeCost, "
        "UpgradeGoldCost, GarrLevel, GarrSiteID, MaxBuildingLevel FROM garr_site_level ORDER BY ID DESC", CONNECTION_SYNCH);

    // GarrSiteLevelPlotInst.db2
    PrepareStatement(HOTFIX_SEL_GARR_SITE_LEVEL_PLOT_INST, "SELECT ID, UiMarkerPos1, UiMarkerPos2, GarrSiteLevelID, GarrPlotInstanceID, UiMarkerSize"
        " FROM garr_site_level_plot_inst ORDER BY ID DESC", CONNECTION_SYNCH);

    // GarrSpecialization.db2
    PrepareStatement(HOTFIX_SEL_GARR_SPECIALIZATION, "SELECT ID, Name, Tooltip, IconFileDataID, Param1, Param2, BuildingType, SpecType, "
        "RequiredUpgradeLevel FROM garr_specialization ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_GARR_SPECIALIZATION, "SELECT ID, Name_lang, Tooltip_lang FROM garr_specialization_locale WHERE locale = ?", CONNECTION_SYNCH);

    // GarrString.db2
    PrepareStatement(HOTFIX_SEL_GARR_STRING, "SELECT ID, Text FROM garr_string ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_GARR_STRING, "SELECT ID, Text_lang FROM garr_string_locale WHERE locale = ?", CONNECTION_SYNCH);

    // GarrTalent.db2
    PrepareStatement(HOTFIX_SEL_GARR_TALENT, "SELECT Name, Description, IconFileDataID, ResearchDurationSecs, Tier, UiOrder, Flags, ID, "
        "GarrTalentTreeID, GarrAbilityID, PlayerConditionID, ResearchCost, ResearchCostCurrencyTypesID, ResearchGoldCost, PerkSpellID, "
        "PerkPlayerConditionID, RespecCost, RespecCostCurrencyTypesID, RespecDurationSecs, RespecGoldCost FROM garr_talent ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_GARR_TALENT, "SELECT ID, Name_lang, Description_lang FROM garr_talent_locale WHERE locale = ?", CONNECTION_SYNCH);

    // GarrTalentTree.db2
    PrepareStatement(HOTFIX_SEL_GARR_TALENT_TREE, "SELECT ID, UiTextureKitID, MaxTiers, UiOrder, ClassID, GarrTypeID FROM garr_talent_tree"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // GarrType.db2
    PrepareStatement(HOTFIX_SEL_GARR_TYPE, "SELECT ID, Flags, PrimaryCurrencyTypeID, SecondaryCurrencyTypeID, ExpansionID, MapIDs1, MapIDs2"
        " FROM garr_type ORDER BY ID DESC", CONNECTION_SYNCH);

    // GarrUiAnimClassInfo.db2
    PrepareStatement(HOTFIX_SEL_GARR_UI_ANIM_CLASS_INFO, "SELECT ID, ImpactDelaySecs, GarrClassSpecID, MovementType, CastKit, ImpactKit, "
        "TargetImpactKit FROM garr_ui_anim_class_info ORDER BY ID DESC", CONNECTION_SYNCH);

    // GarrUiAnimRaceInfo.db2
    PrepareStatement(HOTFIX_SEL_GARR_UI_ANIM_RACE_INFO, "SELECT ID, MaleScale, MaleHeight, MaleSingleModelScale, MaleSingleModelHeight, "
        "MaleFollowerPageScale, MaleFollowerPageHeight, FemaleScale, FemaleHeight, FemaleSingleModelScale, FemaleSingleModelHeight, "
        "FemaleFollowerPageScale, FemaleFollowerPageHeight, GarrFollRaceID FROM garr_ui_anim_race_info ORDER BY ID DESC", CONNECTION_SYNCH);

    // GemProperties.db2
    PrepareStatement(HOTFIX_SEL_GEM_PROPERTIES, "SELECT ID, Type, EnchantID, MinItemLevel FROM gem_properties ORDER BY ID DESC", CONNECTION_SYNCH);

    // GlobalStrings.db2
    PrepareStatement(HOTFIX_SEL_GLOBAL_STRINGS, "SELECT ID, BaseTag, TagText, Flags FROM global_strings ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_GLOBAL_STRINGS, "SELECT ID, BaseTag_lang, TagText_lang FROM global_strings_locale WHERE locale = ?", CONNECTION_SYNCH);

    // GlyphBindableSpell.db2
    PrepareStatement(HOTFIX_SEL_GLYPH_BINDABLE_SPELL, "SELECT ID, SpellID, GlyphPropertiesID FROM glyph_bindable_spell ORDER BY ID DESC", CONNECTION_SYNCH);

    // GlyphExclusiveCategory.db2
    PrepareStatement(HOTFIX_SEL_GLYPH_EXCLUSIVE_CATEGORY, "SELECT ID, Name FROM glyph_exclusive_category ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_GLYPH_EXCLUSIVE_CATEGORY, "SELECT ID, Name_lang FROM glyph_exclusive_category_locale WHERE locale = ?", CONNECTION_SYNCH);

    // GlyphProperties.db2
    PrepareStatement(HOTFIX_SEL_GLYPH_PROPERTIES, "SELECT ID, SpellID, SpellIconID, GlyphType, GlyphExclusiveCategoryID FROM glyph_properties"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // GlyphRequiredSpec.db2
    PrepareStatement(HOTFIX_SEL_GLYPH_REQUIRED_SPEC, "SELECT ID, ChrSpecializationID, GlyphPropertiesID FROM glyph_required_spec ORDER BY ID DESC", CONNECTION_SYNCH);

    // GMSurveyAnswers.db2
    PrepareStatement(HOTFIX_SEL_G_M_SURVEY_ANSWERS, "SELECT ID, Answer, SortIndex FROM g_m_survey_answers ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_G_M_SURVEY_ANSWERS, "SELECT ID, Answer_lang FROM g_m_survey_answers_locale WHERE locale = ?", CONNECTION_SYNCH);

    // GMSurveyCurrentSurvey.db2
    PrepareStatement(HOTFIX_SEL_G_M_SURVEY_CURRENT_SURVEY, "SELECT ID, GmsurveyID FROM g_m_survey_current_survey ORDER BY ID DESC", CONNECTION_SYNCH);

    // GMSurveyQuestions.db2
    PrepareStatement(HOTFIX_SEL_G_M_SURVEY_QUESTIONS, "SELECT ID, Question FROM g_m_survey_questions ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_G_M_SURVEY_QUESTIONS, "SELECT ID, Question_lang FROM g_m_survey_questions_locale WHERE locale = ?", CONNECTION_SYNCH);

    // GMSurveySurveys.db2
    PrepareStatement(HOTFIX_SEL_G_M_SURVEY_SURVEYS, "SELECT ID, Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, Q11, Q12, Q13, Q14, Q15"
        " FROM g_m_survey_surveys ORDER BY ID DESC", CONNECTION_SYNCH);

    // GroundEffectDoodad.db2
    PrepareStatement(HOTFIX_SEL_GROUND_EFFECT_DOODAD, "SELECT ID, Animscale, PushScale, Flags, ModelFileID FROM ground_effect_doodad ORDER BY ID DESC", CONNECTION_SYNCH);

    // GroundEffectTexture.db2
    PrepareStatement(HOTFIX_SEL_GROUND_EFFECT_TEXTURE, "SELECT ID, DoodadID1, DoodadID2, DoodadID3, DoodadID4, DoodadWeight1, DoodadWeight2, "
        "DoodadWeight3, DoodadWeight4, Sound, Density FROM ground_effect_texture ORDER BY ID DESC", CONNECTION_SYNCH);

    // GroupFinderActivity.db2
    PrepareStatement(HOTFIX_SEL_GROUP_FINDER_ACTIVITY, "SELECT ID, FullName, ShortName, MinGearLevelSuggestion, MapID, AreaID, GroupFinderCategoryID, "
        "GroupFinderActivityGrpID, OrderIndex, MinLevel, MaxLevelSuggestion, DifficultyID, Flags, DisplayType, MaxPlayers FROM group_finder_activity"
        " ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_GROUP_FINDER_ACTIVITY, "SELECT ID, FullName_lang, ShortName_lang FROM group_finder_activity_locale WHERE locale = ?", CONNECTION_SYNCH);

    // GroupFinderActivityGrp.db2
    PrepareStatement(HOTFIX_SEL_GROUP_FINDER_ACTIVITY_GRP, "SELECT ID, Name, OrderIndex FROM group_finder_activity_grp ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_GROUP_FINDER_ACTIVITY_GRP, "SELECT ID, Name_lang FROM group_finder_activity_grp_locale WHERE locale = ?", CONNECTION_SYNCH);

    // GroupFinderCategory.db2
    PrepareStatement(HOTFIX_SEL_GROUP_FINDER_CATEGORY, "SELECT ID, Name, Flags, OrderIndex FROM group_finder_category ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_GROUP_FINDER_CATEGORY, "SELECT ID, Name_lang FROM group_finder_category_locale WHERE locale = ?", CONNECTION_SYNCH);

    // GuildColorBackground.db2
    PrepareStatement(HOTFIX_SEL_GUILD_COLOR_BACKGROUND, "SELECT ID, Red, Green, Blue FROM guild_color_background ORDER BY ID DESC", CONNECTION_SYNCH);

    // GuildColorBorder.db2
    PrepareStatement(HOTFIX_SEL_GUILD_COLOR_BORDER, "SELECT ID, Red, Green, Blue FROM guild_color_border ORDER BY ID DESC", CONNECTION_SYNCH);

    // GuildColorEmblem.db2
    PrepareStatement(HOTFIX_SEL_GUILD_COLOR_EMBLEM, "SELECT ID, Red, Green, Blue FROM guild_color_emblem ORDER BY ID DESC", CONNECTION_SYNCH);

    // GuildPerkSpells.db2
    PrepareStatement(HOTFIX_SEL_GUILD_PERK_SPELLS, "SELECT ID, SpellID FROM guild_perk_spells ORDER BY ID DESC", CONNECTION_SYNCH);

    // Heirloom.db2
    PrepareStatement(HOTFIX_SEL_HEIRLOOM, "SELECT SourceText, ItemID, LegacyItemID, LegacyUpgradedItemID, StaticUpgradedItemID, UpgradeItemID1, "
        "UpgradeItemID2, UpgradeItemID3, UpgradeItemBonusListID1, UpgradeItemBonusListID2, UpgradeItemBonusListID3, Flags, SourceTypeEnum, ID"
        " FROM heirloom ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_HEIRLOOM, "SELECT ID, SourceText_lang FROM heirloom_locale WHERE locale = ?", CONNECTION_SYNCH);

    // HelmetAnimScaling.db2
    PrepareStatement(HOTFIX_SEL_HELMET_ANIM_SCALING, "SELECT ID, Amount, RaceID FROM helmet_anim_scaling ORDER BY ID DESC", CONNECTION_SYNCH);

    // HelmetGeosetVisData.db2
    PrepareStatement(HOTFIX_SEL_HELMET_GEOSET_VIS_DATA, "SELECT ID, HideGeoset1, HideGeoset2, HideGeoset3, HideGeoset4, HideGeoset5, HideGeoset6, "
        "HideGeoset7, HideGeoset8, HideGeoset9 FROM helmet_geoset_vis_data ORDER BY ID DESC", CONNECTION_SYNCH);

    // HighlightColor.db2
    PrepareStatement(HOTFIX_SEL_HIGHLIGHT_COLOR, "SELECT ID, StartColor, MidColor, EndColor, Type, Flags FROM highlight_color ORDER BY ID DESC", CONNECTION_SYNCH);

    // HolidayDescriptions.db2
    PrepareStatement(HOTFIX_SEL_HOLIDAY_DESCRIPTIONS, "SELECT ID, Description FROM holiday_descriptions ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_HOLIDAY_DESCRIPTIONS, "SELECT ID, Description_lang FROM holiday_descriptions_locale WHERE locale = ?", CONNECTION_SYNCH);

    // HolidayNames.db2
    PrepareStatement(HOTFIX_SEL_HOLIDAY_NAMES, "SELECT ID, Name FROM holiday_names ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_HOLIDAY_NAMES, "SELECT ID, Name_lang FROM holiday_names_locale WHERE locale = ?", CONNECTION_SYNCH);

    // Holidays.db2
    PrepareStatement(HOTFIX_SEL_HOLIDAYS, "SELECT ID, Date1, Date2, Date3, Date4, Date5, Date6, Date7, Date8, Date9, Date10, Date11, Date12, Date13, "
        "Date14, Date15, Date16, Duration1, Duration2, Duration3, Duration4, Duration5, Duration6, Duration7, Duration8, Duration9, Duration10, "
        "Region, Looping, CalendarFlags1, CalendarFlags2, CalendarFlags3, CalendarFlags4, CalendarFlags5, CalendarFlags6, CalendarFlags7, "
        "CalendarFlags8, CalendarFlags9, CalendarFlags10, Priority, CalendarFilterType, Flags, HolidayNameID, HolidayDescriptionID, "
        "TextureFileDataID1, TextureFileDataID2, TextureFileDataID3 FROM holidays ORDER BY ID DESC", CONNECTION_SYNCH);

    // Hotfix.db2
    PrepareStatement(HOTFIX_SEL_HOTFIX, "SELECT ID, Tablename, ObjectID, Flags FROM hotfix ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_HOTFIX, "SELECT ID, Tablename_lang FROM hotfix_locale WHERE locale = ?", CONNECTION_SYNCH);

    // ImportPriceArmor.db2
    PrepareStatement(HOTFIX_SEL_IMPORT_PRICE_ARMOR, "SELECT ID, ClothModifier, LeatherModifier, ChainModifier, PlateModifier FROM import_price_armor"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // ImportPriceQuality.db2
    PrepareStatement(HOTFIX_SEL_IMPORT_PRICE_QUALITY, "SELECT ID, Data FROM import_price_quality ORDER BY ID DESC", CONNECTION_SYNCH);

    // ImportPriceShield.db2
    PrepareStatement(HOTFIX_SEL_IMPORT_PRICE_SHIELD, "SELECT ID, Data FROM import_price_shield ORDER BY ID DESC", CONNECTION_SYNCH);

    // ImportPriceWeapon.db2
    PrepareStatement(HOTFIX_SEL_IMPORT_PRICE_WEAPON, "SELECT ID, Data FROM import_price_weapon ORDER BY ID DESC", CONNECTION_SYNCH);

    // InvasionClientData.db2
    PrepareStatement(HOTFIX_SEL_INVASION_CLIENT_DATA, "SELECT Name, IconLocation1, IconLocation2, ID, WorldStateID, UiTextureAtlasMemberID, "
        "ScenarioID, WorldQuestID, WorldStateValue, InvasionEnabledWorldStateID FROM invasion_client_data ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_INVASION_CLIENT_DATA, "SELECT ID, Name_lang FROM invasion_client_data_locale WHERE locale = ?", CONNECTION_SYNCH);

    // Item.db2
    PrepareStatement(HOTFIX_SEL_ITEM, "SELECT ID, IconFileDataID, ClassID, SubclassID, SoundOverrideSubclass, Material, InventoryType, SheatheType, "
        "ItemGroupSoundsID FROM item ORDER BY ID DESC", CONNECTION_SYNCH);

    // ItemAppearance.db2
    PrepareStatement(HOTFIX_SEL_ITEM_APPEARANCE, "SELECT ID, ItemDisplayInfoID, DefaultIconFileDataID, UiOrder, DisplayType FROM item_appearance"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // ItemAppearanceXUiCamera.db2
    PrepareStatement(HOTFIX_SEL_ITEM_APPEARANCE_X_UI_CAMERA, "SELECT ID, ItemAppearanceID, UiCameraID FROM item_appearance_x_ui_camera"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // ItemArmorQuality.db2
    PrepareStatement(HOTFIX_SEL_ITEM_ARMOR_QUALITY, "SELECT ID, Qualitymod1, Qualitymod2, Qualitymod3, Qualitymod4, Qualitymod5, Qualitymod6, "
        "Qualitymod7, ItemLevel FROM item_armor_quality ORDER BY ID DESC", CONNECTION_SYNCH);

    // ItemArmorShield.db2
    PrepareStatement(HOTFIX_SEL_ITEM_ARMOR_SHIELD, "SELECT ID, Quality1, Quality2, Quality3, Quality4, Quality5, Quality6, Quality7, ItemLevel"
        " FROM item_armor_shield ORDER BY ID DESC", CONNECTION_SYNCH);

    // ItemArmorTotal.db2
    PrepareStatement(HOTFIX_SEL_ITEM_ARMOR_TOTAL, "SELECT ID, Cloth, Leather, Mail, Plate, ItemLevel FROM item_armor_total ORDER BY ID DESC", CONNECTION_SYNCH);

    // ItemBagFamily.db2
    PrepareStatement(HOTFIX_SEL_ITEM_BAG_FAMILY, "SELECT ID, Name FROM item_bag_family ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_ITEM_BAG_FAMILY, "SELECT ID, Name_lang FROM item_bag_family_locale WHERE locale = ?", CONNECTION_SYNCH);

    // ItemBonus.db2
    PrepareStatement(HOTFIX_SEL_ITEM_BONUS, "SELECT ID, Value1, Value2, Value3, ParentItemBonusListID, Type, OrderIndex FROM item_bonus"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // ItemBonusListLevelDelta.db2
    PrepareStatement(HOTFIX_SEL_ITEM_BONUS_LIST_LEVEL_DELTA, "SELECT ItemLevelDelta, ID FROM item_bonus_list_level_delta ORDER BY ID DESC", CONNECTION_SYNCH);

    // ItemBonusTreeNode.db2
    PrepareStatement(HOTFIX_SEL_ITEM_BONUS_TREE_NODE, "SELECT ID, ChildItemBonusTreeID, ChildItemBonusListID, ChildItemLevelSelectorID, ItemContext, "
        "BonusTreeID FROM item_bonus_tree_node ORDER BY ID DESC", CONNECTION_SYNCH);

    // ItemChildEquipment.db2
    PrepareStatement(HOTFIX_SEL_ITEM_CHILD_EQUIPMENT, "SELECT ID, ChildItemID, ChildItemEquipSlot, ItemID FROM item_child_equipment ORDER BY ID DESC", CONNECTION_SYNCH);

    // ItemClass.db2
    PrepareStatement(HOTFIX_SEL_ITEM_CLASS, "SELECT ID, ClassName, PriceModifier, OldEnumValue, Class FROM item_class ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_ITEM_CLASS, "SELECT ID, ClassName_lang FROM item_class_locale WHERE locale = ?", CONNECTION_SYNCH);

    // ItemCurrencyCost.db2
    PrepareStatement(HOTFIX_SEL_ITEM_CURRENCY_COST, "SELECT ID, ItemID FROM item_currency_cost ORDER BY ID DESC", CONNECTION_SYNCH);

    // ItemDamageAmmo.db2
    PrepareStatement(HOTFIX_SEL_ITEM_DAMAGE_AMMO, "SELECT ID, Quality1, Quality2, Quality3, Quality4, Quality5, Quality6, Quality7, ItemLevel"
        " FROM item_damage_ammo ORDER BY ID DESC", CONNECTION_SYNCH);

    // ItemDamageOneHand.db2
    PrepareStatement(HOTFIX_SEL_ITEM_DAMAGE_ONE_HAND, "SELECT ID, Quality1, Quality2, Quality3, Quality4, Quality5, Quality6, Quality7, ItemLevel"
        " FROM item_damage_one_hand ORDER BY ID DESC", CONNECTION_SYNCH);

    // ItemDamageOneHandCaster.db2
    PrepareStatement(HOTFIX_SEL_ITEM_DAMAGE_ONE_HAND_CASTER, "SELECT ID, Quality1, Quality2, Quality3, Quality4, Quality5, Quality6, Quality7, "
        "ItemLevel FROM item_damage_one_hand_caster ORDER BY ID DESC", CONNECTION_SYNCH);

    // ItemDamageTwoHand.db2
    PrepareStatement(HOTFIX_SEL_ITEM_DAMAGE_TWO_HAND, "SELECT ID, Quality1, Quality2, Quality3, Quality4, Quality5, Quality6, Quality7, ItemLevel"
        " FROM item_damage_two_hand ORDER BY ID DESC", CONNECTION_SYNCH);

    // ItemDamageTwoHandCaster.db2
    PrepareStatement(HOTFIX_SEL_ITEM_DAMAGE_TWO_HAND_CASTER, "SELECT ID, Quality1, Quality2, Quality3, Quality4, Quality5, Quality6, Quality7, "
        "ItemLevel FROM item_damage_two_hand_caster ORDER BY ID DESC", CONNECTION_SYNCH);

    // ItemDisenchantLoot.db2
    PrepareStatement(HOTFIX_SEL_ITEM_DISENCHANT_LOOT, "SELECT ID, MinLevel, MaxLevel, SkillRequired, Subclass, Quality, ExpansionID, ItemClass"
        " FROM item_disenchant_loot ORDER BY ID DESC", CONNECTION_SYNCH);

    // ItemDisplayInfo.db2
    PrepareStatement(HOTFIX_SEL_ITEM_DISPLAY_INFO, "SELECT ID, Flags, ItemRangedDisplayInfoID, ItemVisual, ParticleColorID, OverrideSwooshSoundKitID, "
        "SheatheTransformMatrixID, ModelType1, StateSpellVisualKitID, SheathedSpellVisualKitID, UnsheathedSpellVisualKitID, ModelResourcesID1, "
        "ModelResourcesID2, ModelMaterialResourcesID1, ModelMaterialResourcesID2, GeosetGroup1, GeosetGroup2, GeosetGroup3, GeosetGroup4, "
        "AttachmentGeosetGroup1, AttachmentGeosetGroup2, AttachmentGeosetGroup3, AttachmentGeosetGroup4, HelmetGeosetVis1, HelmetGeosetVis2"
        " FROM item_display_info ORDER BY ID DESC", CONNECTION_SYNCH);

    // ItemDisplayInfoMaterialRes.db2
    PrepareStatement(HOTFIX_SEL_ITEM_DISPLAY_INFO_MATERIAL_RES, "SELECT ID, MaterialResourcesID, ComponentSection FROM item_display_info_material_res"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // ItemDisplayXUiCamera.db2
    PrepareStatement(HOTFIX_SEL_ITEM_DISPLAY_X_UI_CAMERA, "SELECT ID, ItemDisplayInfoID, UiCameraID FROM item_display_x_ui_camera ORDER BY ID DESC", CONNECTION_SYNCH);

    // ItemEffect.db2
    PrepareStatement(HOTFIX_SEL_ITEM_EFFECT, "SELECT ID, SpellID, CoolDownMSec, CategoryCoolDownMSec, Charges, SpellCategoryID, ChrSpecializationID, "
        "LegacySlotIndex, TriggerType, ItemID FROM item_effect ORDER BY ID DESC", CONNECTION_SYNCH);

    // ItemExtendedCost.db2
    PrepareStatement(HOTFIX_SEL_ITEM_EXTENDED_COST, "SELECT ID, ItemID1, ItemID2, ItemID3, ItemID4, ItemID5, CurrencyCount1, CurrencyCount2, "
        "CurrencyCount3, CurrencyCount4, CurrencyCount5, ItemCount1, ItemCount2, ItemCount3, ItemCount4, ItemCount5, RequiredArenaRating, "
        "CurrencyID1, CurrencyID2, CurrencyID3, CurrencyID4, CurrencyID5, ArenaBracket, MinFactionID, MinReputation, Flags, RequiredAchievement"
        " FROM item_extended_cost ORDER BY ID DESC", CONNECTION_SYNCH);

    // ItemGroupSounds.db2
    PrepareStatement(HOTFIX_SEL_ITEM_GROUP_SOUNDS, "SELECT ID, Sound1, Sound2, Sound3, Sound4 FROM item_group_sounds ORDER BY ID DESC", CONNECTION_SYNCH);

    // ItemLevelSelector.db2
    PrepareStatement(HOTFIX_SEL_ITEM_LEVEL_SELECTOR, "SELECT ID, MinItemLevel, ItemLevelSelectorQualitySetID FROM item_level_selector ORDER BY ID DESC", CONNECTION_SYNCH);

    // ItemLevelSelectorQuality.db2
    PrepareStatement(HOTFIX_SEL_ITEM_LEVEL_SELECTOR_QUALITY, "SELECT ID, QualityItemBonusListID, Quality, ItemLevelSelectorQualitySetID"
        " FROM item_level_selector_quality ORDER BY ID DESC", CONNECTION_SYNCH);

    // ItemLevelSelectorQualitySet.db2
    PrepareStatement(HOTFIX_SEL_ITEM_LEVEL_SELECTOR_QUALITY_SET, "SELECT ID, IlvlRare, IlvlEpic FROM item_level_selector_quality_set ORDER BY ID DESC", CONNECTION_SYNCH);

    // ItemLimitCategory.db2
    PrepareStatement(HOTFIX_SEL_ITEM_LIMIT_CATEGORY, "SELECT ID, Name, Quantity, Flags FROM item_limit_category ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_ITEM_LIMIT_CATEGORY, "SELECT ID, Name_lang FROM item_limit_category_locale WHERE locale = ?", CONNECTION_SYNCH);

    // ItemLimitCategoryCondition.db2
    PrepareStatement(HOTFIX_SEL_ITEM_LIMIT_CATEGORY_CONDITION, "SELECT ID, AddQuantity, PlayerConditionID, ParentItemLimitCategoryID"
        " FROM item_limit_category_condition ORDER BY ID DESC", CONNECTION_SYNCH);

    // ItemModifiedAppearance.db2
    PrepareStatement(HOTFIX_SEL_ITEM_MODIFIED_APPEARANCE, "SELECT ItemID, ID, ItemAppearanceModifierID, ItemAppearanceID, OrderIndex, "
        "TransmogSourceTypeEnum FROM item_modified_appearance ORDER BY ID DESC", CONNECTION_SYNCH);

    // ItemModifiedAppearanceExtra.db2
    PrepareStatement(HOTFIX_SEL_ITEM_MODIFIED_APPEARANCE_EXTRA, "SELECT ID, IconFileDataID, UnequippedIconFileDataID, SheatheType, "
        "DisplayWeaponSubclassID, DisplayInventoryType FROM item_modified_appearance_extra ORDER BY ID DESC", CONNECTION_SYNCH);

    // ItemNameDescription.db2
    PrepareStatement(HOTFIX_SEL_ITEM_NAME_DESCRIPTION, "SELECT ID, Description, Color FROM item_name_description ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_ITEM_NAME_DESCRIPTION, "SELECT ID, Description_lang FROM item_name_description_locale WHERE locale = ?", CONNECTION_SYNCH);

    // ItemPetFood.db2
    PrepareStatement(HOTFIX_SEL_ITEM_PET_FOOD, "SELECT ID, Name FROM item_pet_food ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_ITEM_PET_FOOD, "SELECT ID, Name_lang FROM item_pet_food_locale WHERE locale = ?", CONNECTION_SYNCH);

    // ItemPriceBase.db2
    PrepareStatement(HOTFIX_SEL_ITEM_PRICE_BASE, "SELECT ID, Armor, Weapon, ItemLevel FROM item_price_base ORDER BY ID DESC", CONNECTION_SYNCH);

    // ItemRandomProperties.db2
    PrepareStatement(HOTFIX_SEL_ITEM_RANDOM_PROPERTIES, "SELECT ID, Name, Enchantment1, Enchantment2, Enchantment3, Enchantment4, Enchantment5"
        " FROM item_random_properties ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_ITEM_RANDOM_PROPERTIES, "SELECT ID, Name_lang FROM item_random_properties_locale WHERE locale = ?", CONNECTION_SYNCH);

    // ItemRandomSuffix.db2
    PrepareStatement(HOTFIX_SEL_ITEM_RANDOM_SUFFIX, "SELECT ID, Name, Enchantment1, Enchantment2, Enchantment3, Enchantment4, Enchantment5, "
        "AllocationPct1, AllocationPct2, AllocationPct3, AllocationPct4, AllocationPct5 FROM item_random_suffix ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_ITEM_RANDOM_SUFFIX, "SELECT ID, Name_lang FROM item_random_suffix_locale WHERE locale = ?", CONNECTION_SYNCH);

    // ItemRangedDisplayInfo.db2
    PrepareStatement(HOTFIX_SEL_ITEM_RANGED_DISPLAY_INFO, "SELECT ID, MissileSpellVisualEffectNameID, QuiverFileDataID, CastSpellVisualID, "
        "AutoAttackSpellVisualID FROM item_ranged_display_info ORDER BY ID DESC", CONNECTION_SYNCH);

    // ItemSearchName.db2
    PrepareStatement(HOTFIX_SEL_ITEM_SEARCH_NAME, "SELECT AllowableRace, Display, ID, Flags1, Flags2, Flags3, ItemLevel, OverallQualityID, "
        "ExpansionID, RequiredLevel, MinFactionID, MinReputation, AllowableClass, RequiredSkill, RequiredSkillRank, RequiredAbility"
        " FROM item_search_name ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_ITEM_SEARCH_NAME, "SELECT ID, Display_lang FROM item_search_name_locale WHERE locale = ?", CONNECTION_SYNCH);

    // ItemSet.db2
    PrepareStatement(HOTFIX_SEL_ITEM_SET, "SELECT ID, Name, ItemID1, ItemID2, ItemID3, ItemID4, ItemID5, ItemID6, ItemID7, ItemID8, ItemID9, "
        "ItemID10, ItemID11, ItemID12, ItemID13, ItemID14, ItemID15, ItemID16, ItemID17, RequiredSkillRank, RequiredSkill, SetFlags FROM item_set"
        " ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_ITEM_SET, "SELECT ID, Name_lang FROM item_set_locale WHERE locale = ?", CONNECTION_SYNCH);

    // ItemSetSpell.db2
    PrepareStatement(HOTFIX_SEL_ITEM_SET_SPELL, "SELECT ID, SpellID, ChrSpecID, Threshold, ItemSetID FROM item_set_spell ORDER BY ID DESC", CONNECTION_SYNCH);

    // ItemSparse.db2
    PrepareStatement(HOTFIX_SEL_ITEM_SPARSE, "SELECT ID, AllowableRace, Display, Display1, Display2, Display3, Description, Flags1, Flags2, Flags3, "
        "Flags4, PriceRandomValue, PriceVariance, VendorStackCount, BuyPrice, SellPrice, RequiredAbility, MaxCount, Stackable, StatPercentEditor1, "
        "StatPercentEditor2, StatPercentEditor3, StatPercentEditor4, StatPercentEditor5, StatPercentEditor6, StatPercentEditor7, StatPercentEditor8, "
        "StatPercentEditor9, StatPercentEditor10, StatPercentageOfSocket1, StatPercentageOfSocket2, StatPercentageOfSocket3, StatPercentageOfSocket4, "
        "StatPercentageOfSocket5, StatPercentageOfSocket6, StatPercentageOfSocket7, StatPercentageOfSocket8, StatPercentageOfSocket9, "
        "StatPercentageOfSocket10, ItemRange, BagFamily, QualityModifier, DurationInInventory, DmgVariance, AllowableClass, ItemLevel, RequiredSkill, "
        "RequiredSkillRank, MinFactionID, ItemStatValue1, ItemStatValue2, ItemStatValue3, ItemStatValue4, ItemStatValue5, ItemStatValue6, "
        "ItemStatValue7, ItemStatValue8, ItemStatValue9, ItemStatValue10, ScalingStatDistributionID, ItemDelay, PageID, StartQuestID, LockID, "
        "RandomSelect, ItemRandomSuffixGroupID, ItemSet, ZoneBound, InstanceBound, TotemCategoryID, SocketMatch_enchantment_id, GemProperties, "
        "LimitCategory, RequiredHoliday, RequiredTransmogHoliday, ItemNameDescriptionID, OverallQualityID, InventoryType, RequiredLevel, "
        "RequiredPVPRank, RequiredPVPMedal, MinReputation, ContainerSlots, StatModifierBonusStat1, StatModifierBonusStat2, StatModifierBonusStat3, "
        "StatModifierBonusStat4, StatModifierBonusStat5, StatModifierBonusStat6, StatModifierBonusStat7, StatModifierBonusStat8, "
        "StatModifierBonusStat9, StatModifierBonusStat10, DamageDamageType, Bonding, LanguageID, PageMaterialID, Material, SheatheType, SocketType1, "
        "SocketType2, SocketType3, SpellWeightCategory, SpellWeight, ArtifactID, ExpansionID FROM item_sparse ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_ITEM_SPARSE, "SELECT ID, Display_lang, Display1_lang, Display2_lang, Display3_lang, Description_lang"
        " FROM item_sparse_locale WHERE locale = ?", CONNECTION_SYNCH);

    // ItemSpec.db2
    PrepareStatement(HOTFIX_SEL_ITEM_SPEC, "SELECT ID, SpecializationID, MinLevel, MaxLevel, ItemType, PrimaryStat, SecondaryStat FROM item_spec"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // ItemSpecOverride.db2
    PrepareStatement(HOTFIX_SEL_ITEM_SPEC_OVERRIDE, "SELECT ID, SpecID, ItemID FROM item_spec_override ORDER BY ID DESC", CONNECTION_SYNCH);

    // ItemSubClass.db2
    PrepareStatement(HOTFIX_SEL_ITEM_SUB_CLASS, "SELECT ID, DisplayName, VerboseName, Flags, ClassID, SubClassID, PrerequisiteProficiency, "
        "PostrequisiteProficiency, DisplayFlags, WeaponSwingSize, AuctionHouseSortOrder FROM item_sub_class ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_ITEM_SUB_CLASS, "SELECT ID, DisplayName_lang, VerboseName_lang FROM item_sub_class_locale WHERE locale = ?", CONNECTION_SYNCH);

    // ItemSubClassMask.db2
    PrepareStatement(HOTFIX_SEL_ITEM_SUB_CLASS_MASK, "SELECT ID, Name, Mask, ClassID FROM item_sub_class_mask ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_ITEM_SUB_CLASS_MASK, "SELECT ID, Name_lang FROM item_sub_class_mask_locale WHERE locale = ?", CONNECTION_SYNCH);

    // ItemUpgrade.db2
    PrepareStatement(HOTFIX_SEL_ITEM_UPGRADE, "SELECT ID, CurrencyAmount, PrerequisiteID, CurrencyType, ItemUpgradePathID, ItemLevelIncrement"
        " FROM item_upgrade ORDER BY ID DESC", CONNECTION_SYNCH);

    // ItemVisuals.db2
    PrepareStatement(HOTFIX_SEL_ITEM_VISUALS, "SELECT ID, ModelFileID1, ModelFileID2, ModelFileID3, ModelFileID4, ModelFileID5 FROM item_visuals"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // ItemXBonusTree.db2
    PrepareStatement(HOTFIX_SEL_ITEM_X_BONUS_TREE, "SELECT ID, ItemBonusTreeID, ItemID FROM item_x_bonus_tree ORDER BY ID DESC", CONNECTION_SYNCH);

    // JournalEncounter.db2
    PrepareStatement(HOTFIX_SEL_JOURNAL_ENCOUNTER, "SELECT ID, Name, Description, Map1, Map2, DungeonMapID, WorldMapAreaID, FirstSectionID, "
        "JournalInstanceID, DifficultyMask, Flags, OrderIndex, MapDisplayConditionID FROM journal_encounter ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_JOURNAL_ENCOUNTER, "SELECT ID, Name_lang, Description_lang FROM journal_encounter_locale WHERE locale = ?", CONNECTION_SYNCH);

    // JournalEncounterCreature.db2
    PrepareStatement(HOTFIX_SEL_JOURNAL_ENCOUNTER_CREATURE, "SELECT Name, Description, CreatureDisplayInfoID, FileDataID, UiModelSceneID, "
        "JournalEncounterID, OrderIndex, ID FROM journal_encounter_creature ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_JOURNAL_ENCOUNTER_CREATURE, "SELECT ID, Name_lang, Description_lang FROM journal_encounter_creature_locale"
        " WHERE locale = ?", CONNECTION_SYNCH);

    // JournalEncounterItem.db2
    PrepareStatement(HOTFIX_SEL_JOURNAL_ENCOUNTER_ITEM, "SELECT ItemID, JournalEncounterID, DifficultyMask, FactionMask, Flags, ID"
        " FROM journal_encounter_item ORDER BY ID DESC", CONNECTION_SYNCH);

    // JournalEncounterSection.db2
    PrepareStatement(HOTFIX_SEL_JOURNAL_ENCOUNTER_SECTION, "SELECT ID, Title, BodyText, IconCreatureDisplayInfoID, SpellID, IconFileDataID, "
        "JournalEncounterID, NextSiblingSectionID, FirstChildSectionID, ParentSectionID, Flags, IconFlags, OrderIndex, Type, DifficultyMask, "
        "UiModelSceneID FROM journal_encounter_section ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_JOURNAL_ENCOUNTER_SECTION, "SELECT ID, Title_lang, BodyText_lang FROM journal_encounter_section_locale"
        " WHERE locale = ?", CONNECTION_SYNCH);

    // JournalEncounterXDifficulty.db2
    PrepareStatement(HOTFIX_SEL_JOURNAL_ENCOUNTER_X_DIFFICULTY, "SELECT ID, DifficultyID FROM journal_encounter_x_difficulty ORDER BY ID DESC", CONNECTION_SYNCH);

    // JournalEncounterXMapLoc.db2
    PrepareStatement(HOTFIX_SEL_JOURNAL_ENCOUNTER_X_MAP_LOC, "SELECT ID, Map1, Map2, Flags, JournalEncounterID, DungeonMapID, MapDisplayConditionID"
        " FROM journal_encounter_x_map_loc ORDER BY ID DESC", CONNECTION_SYNCH);

    // JournalInstance.db2
    PrepareStatement(HOTFIX_SEL_JOURNAL_INSTANCE, "SELECT Name, Description, ButtonFileDataID, ButtonSmallFileDataID, BackgroundFileDataID, "
        "LoreFileDataID, MapID, AreaID, OrderIndex, Flags, ID FROM journal_instance ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_JOURNAL_INSTANCE, "SELECT ID, Name_lang, Description_lang FROM journal_instance_locale WHERE locale = ?", CONNECTION_SYNCH);

    // JournalItemXDifficulty.db2
    PrepareStatement(HOTFIX_SEL_JOURNAL_ITEM_X_DIFFICULTY, "SELECT ID, DifficultyID FROM journal_item_x_difficulty ORDER BY ID DESC", CONNECTION_SYNCH);

    // JournalSectionXDifficulty.db2
    PrepareStatement(HOTFIX_SEL_JOURNAL_SECTION_X_DIFFICULTY, "SELECT ID, DifficultyID FROM journal_section_x_difficulty ORDER BY ID DESC", CONNECTION_SYNCH);

    // JournalTier.db2
    PrepareStatement(HOTFIX_SEL_JOURNAL_TIER, "SELECT ID, Name FROM journal_tier ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_JOURNAL_TIER, "SELECT ID, Name_lang FROM journal_tier_locale WHERE locale = ?", CONNECTION_SYNCH);

    // JournalTierXInstance.db2
    PrepareStatement(HOTFIX_SEL_JOURNAL_TIER_X_INSTANCE, "SELECT ID, JournalTierID, JournalInstanceID FROM journal_tier_x_instance ORDER BY ID DESC", CONNECTION_SYNCH);

    // Keychain.db2
    PrepareStatement(HOTFIX_SEL_KEYCHAIN, "SELECT ID, Key1, Key2, Key3, Key4, Key5, Key6, Key7, Key8, Key9, Key10, Key11, Key12, Key13, Key14, Key15, "
        "Key16, Key17, Key18, Key19, Key20, Key21, Key22, Key23, Key24, Key25, Key26, Key27, Key28, Key29, Key30, Key31, Key32 FROM keychain"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // KeystoneAffix.db2
    PrepareStatement(HOTFIX_SEL_KEYSTONE_AFFIX, "SELECT ID, Name, Description, Filedataid FROM keystone_affix ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_KEYSTONE_AFFIX, "SELECT ID, Name_lang, Description_lang FROM keystone_affix_locale WHERE locale = ?", CONNECTION_SYNCH);

    // Languages.db2
    PrepareStatement(HOTFIX_SEL_LANGUAGES, "SELECT Name, ID FROM languages ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_LANGUAGES, "SELECT ID, Name_lang FROM languages_locale WHERE locale = ?", CONNECTION_SYNCH);

    // LanguageWords.db2
    PrepareStatement(HOTFIX_SEL_LANGUAGE_WORDS, "SELECT ID, Word, LanguageID FROM language_words ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_LANGUAGE_WORDS, "SELECT ID, Word_lang FROM language_words_locale WHERE locale = ?", CONNECTION_SYNCH);

    // LfgDungeonExpansion.db2
    PrepareStatement(HOTFIX_SEL_LFG_DUNGEON_EXPANSION, "SELECT ID, RandomID, ExpansionLevel, HardLevelMin, HardLevelMax, TargetLevelMin, "
        "TargetLevelMax FROM lfg_dungeon_expansion ORDER BY ID DESC", CONNECTION_SYNCH);

    // LfgDungeonGroup.db2
    PrepareStatement(HOTFIX_SEL_LFG_DUNGEON_GROUP, "SELECT ID, Name, OrderIndex, ParentGroupId, Typeid FROM lfg_dungeon_group ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_LFG_DUNGEON_GROUP, "SELECT ID, Name_lang FROM lfg_dungeon_group_locale WHERE locale = ?", CONNECTION_SYNCH);

    // LfgDungeons.db2
    PrepareStatement(HOTFIX_SEL_LFG_DUNGEONS, "SELECT ID, Name, Description, Flags, MinGear, MaxLevel, TargetLevelMax, MapID, RandomID, ScenarioID, "
        "FinalEncounterID, BonusReputationAmount, MentorItemLevel, RequiredPlayerConditionId, MinLevel, TargetLevel, TargetLevelMin, DifficultyID, "
        "TypeID, Faction, ExpansionLevel, OrderIndex, GroupID, CountTank, CountHealer, CountDamage, MinCountTank, MinCountHealer, MinCountDamage, "
        "Substruct, MentorCharLevel, IconTextureFileID, RewardsBgTextureFileID, PopupBgTextureFileID FROM lfg_dungeons ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_LFG_DUNGEONS, "SELECT ID, Name_lang, Description_lang FROM lfg_dungeons_locale WHERE locale = ?", CONNECTION_SYNCH);

    // LfgDungeonsGroupingMap.db2
    PrepareStatement(HOTFIX_SEL_LFG_DUNGEONS_GROUPING_MAP, "SELECT ID, RandomLfgDungeonsID, GroupID FROM lfg_dungeons_grouping_map ORDER BY ID DESC", CONNECTION_SYNCH);

    // LfgRoleRequirement.db2
    PrepareStatement(HOTFIX_SEL_LFG_ROLE_REQUIREMENT, "SELECT ID, RoleType, PlayerConditionID, LfgDungeonsId FROM lfg_role_requirement"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // Light.db2
    PrepareStatement(HOTFIX_SEL_LIGHT, "SELECT ID, GameCoordsX, GameCoordsY, GameCoordsZ, GameFalloffStart, GameFalloffEnd, ContinentID, "
        "LightParamsID1, LightParamsID2, LightParamsID3, LightParamsID4, LightParamsID5, LightParamsID6, LightParamsID7, LightParamsID8 FROM light"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // LightData.db2
    PrepareStatement(HOTFIX_SEL_LIGHT_DATA, "SELECT ID, DirectColor, AmbientColor, SkyTopColor, SkyMiddleColor, SkyBand1Color, SkyBand2Color, "
        "SkySmogColor, SkyFogColor, SunColor, CloudSunColor, CloudEmissiveColor, CloudLayer1AmbientColor, CloudLayer2AmbientColor, OceanCloseColor, "
        "OceanFarColor, RiverCloseColor, RiverFarColor, ShadowOpacity, FogEnd, FogScaler, CloudDensity, FogDensity, FogHeight, FogHeightScaler, "
        "FogHeightDensity, SunFogAngle, EndFogColorDistance, SunFogColor, EndFogColor, FogHeightColor, ColorGradingFileDataID, HorizonAmbientColor, "
        "GroundAmbientColor, LightParamID, Time FROM light_data ORDER BY ID DESC", CONNECTION_SYNCH);

    // LightParams.db2
    PrepareStatement(HOTFIX_SEL_LIGHT_PARAMS, "SELECT Glow, WaterShallowAlpha, WaterDeepAlpha, OceanShallowAlpha, OceanDeepAlpha, "
        "OverrideCelestialSphere1, OverrideCelestialSphere2, OverrideCelestialSphere3, LightSkyboxID, HighlightSky, CloudTypeID, Flags, ID"
        " FROM light_params ORDER BY ID DESC", CONNECTION_SYNCH);

    // LightSkybox.db2
    PrepareStatement(HOTFIX_SEL_LIGHT_SKYBOX, "SELECT ID, Name, CelestialSkyboxFileDataID, SkyboxFileDataID, Flags FROM light_skybox ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_LIGHT_SKYBOX, "SELECT ID, Name_lang FROM light_skybox_locale WHERE locale = ?", CONNECTION_SYNCH);

    // LiquidMaterial.db2
    PrepareStatement(HOTFIX_SEL_LIQUID_MATERIAL, "SELECT ID, LVF, Flags FROM liquid_material ORDER BY ID DESC", CONNECTION_SYNCH);

    // LiquidObject.db2
    PrepareStatement(HOTFIX_SEL_LIQUID_OBJECT, "SELECT ID, FlowDirection, FlowSpeed, LiquidTypeID, Fishable, Reflection FROM liquid_object"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // LiquidType.db2
    PrepareStatement(HOTFIX_SEL_LIQUID_TYPE, "SELECT ID, Name, Texture1, Texture2, Texture3, Texture4, Texture5, Texture6, SpellID, MaxDarkenDepth, "
        "FogDarkenIntensity, AmbDarkenIntensity, DirDarkenIntensity, ParticleScale, Color1, Color2, Float1, Float2, Float3, `Float4`, Float5, Float6, "
        "Float7, `Float8`, Float9, Float10, Float11, Float12, Float13, Float14, Float15, Float16, Float17, Float18, `Int1`, `Int2`, `Int3`, `Int4`, "
        "Flags, LightID, SoundBank, ParticleMovement, ParticleTexSlots, MaterialID, FrameCountTexture1, FrameCountTexture2, FrameCountTexture3, "
        "FrameCountTexture4, FrameCountTexture5, FrameCountTexture6, SoundID FROM liquid_type ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_LIQUID_TYPE, "SELECT ID, Name_lang FROM liquid_type_locale WHERE locale = ?", CONNECTION_SYNCH);

    // LoadingScreens.db2
    PrepareStatement(HOTFIX_SEL_LOADING_SCREENS, "SELECT ID, NarrowScreenFileDataID, WideScreenFileDataID, WideScreen169FileDataID"
        " FROM loading_screens ORDER BY ID DESC", CONNECTION_SYNCH);

    // LoadingScreenTaxiSplines.db2
    PrepareStatement(HOTFIX_SEL_LOADING_SCREEN_TAXI_SPLINES, "SELECT ID, LocX1, LocX2, LocX3, LocX4, LocX5, LocX6, LocX7, LocX8, LocX9, LocX10, "
        "LocY1, LocY2, LocY3, LocY4, LocY5, LocY6, LocY7, LocY8, LocY9, LocY10, PathID, LoadingScreenID, LegIndex FROM loading_screen_taxi_splines"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // Locale.db2
    PrepareStatement(HOTFIX_SEL_LOCALE, "SELECT ID, FontFileDataID, WowLocale, Secondary, ClientDisplayExpansion FROM locale ORDER BY ID DESC", CONNECTION_SYNCH);

    // Location.db2
    PrepareStatement(HOTFIX_SEL_LOCATION, "SELECT ID, Pos1, Pos2, Pos3, Rot1, Rot2, Rot3 FROM location ORDER BY ID DESC", CONNECTION_SYNCH);

    // Lock.db2
    PrepareStatement(HOTFIX_SEL_LOCK, "SELECT ID, Index1, Index2, Index3, Index4, Index5, Index6, Index7, Index8, Skill1, Skill2, Skill3, Skill4, "
        "Skill5, Skill6, Skill7, Skill8, Type1, Type2, Type3, Type4, Type5, Type6, Type7, Type8, Action1, Action2, Action3, Action4, Action5, "
        "Action6, Action7, Action8 FROM `lock` ORDER BY ID DESC", CONNECTION_SYNCH);

    // LockType.db2
    PrepareStatement(HOTFIX_SEL_LOCK_TYPE, "SELECT Name, ResourceName, Verb, CursorName, ID FROM lock_type ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_LOCK_TYPE, "SELECT ID, Name_lang, ResourceName_lang, Verb_lang, CursorName_lang FROM lock_type_locale"
        " WHERE locale = ?", CONNECTION_SYNCH);

    // LookAtController.db2
    PrepareStatement(HOTFIX_SEL_LOOK_AT_CONTROLLER, "SELECT ID, ReactionEnableDistance, ReactionGiveupDistance, TorsoSpeedFactor, HeadSpeedFactor, "
        "ReactionEnableFOVDeg, ReactionGiveupTimeMS, ReactionIgnoreTimeMinMS, ReactionIgnoreTimeMaxMS, MaxTorsoYaw, MaxTorsoYawWhileMoving, "
        "MaxHeadYaw, MaxHeadPitch, Flags, ReactionWarmUpTimeMSMin, ReactionWarmUpTimeMSMax, ReactionGiveupFOVDeg, MaxTorsoPitchUp, MaxTorsoPitchDown"
        " FROM look_at_controller ORDER BY ID DESC", CONNECTION_SYNCH);

    // MailTemplate.db2
    PrepareStatement(HOTFIX_SEL_MAIL_TEMPLATE, "SELECT ID, Body FROM mail_template ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_MAIL_TEMPLATE, "SELECT ID, Body_lang FROM mail_template_locale WHERE locale = ?", CONNECTION_SYNCH);

    // ManagedWorldState.db2
    PrepareStatement(HOTFIX_SEL_MANAGED_WORLD_STATE, "SELECT CurrentStageWorldStateID, ProgressWorldStateID, UpTimeSecs, DownTimeSecs, "
        "OccurrencesWorldStateID, AccumulationStateTargetValue, DepletionStateTargetValue, AccumulationAmountPerMinute, DepletionAmountPerMinute, ID"
        " FROM managed_world_state ORDER BY ID DESC", CONNECTION_SYNCH);

    // ManagedWorldStateBuff.db2
    PrepareStatement(HOTFIX_SEL_MANAGED_WORLD_STATE_BUFF, "SELECT ID, OccurrenceValue, BuffSpellID, PlayerConditionID, ManagedWorldStateID"
        " FROM managed_world_state_buff ORDER BY ID DESC", CONNECTION_SYNCH);

    // ManagedWorldStateInput.db2
    PrepareStatement(HOTFIX_SEL_MANAGED_WORLD_STATE_INPUT, "SELECT ID, ManagedWorldStateID, QuestID, ValidInputConditionID"
        " FROM managed_world_state_input ORDER BY ID DESC", CONNECTION_SYNCH);

    // ManifestInterfaceActionIcon.db2
    PrepareStatement(HOTFIX_SEL_MANIFEST_INTERFACE_ACTION_ICON, "SELECT ID FROM manifest_interface_action_icon ORDER BY ID DESC", CONNECTION_SYNCH);

    // ManifestInterfaceData.db2
    PrepareStatement(HOTFIX_SEL_MANIFEST_INTERFACE_DATA, "SELECT ID, FilePath, FileName FROM manifest_interface_data ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_MANIFEST_INTERFACE_DATA, "SELECT ID, FilePath_lang, FileName_lang FROM manifest_interface_data_locale"
        " WHERE locale = ?", CONNECTION_SYNCH);

    // ManifestInterfaceItemIcon.db2
    PrepareStatement(HOTFIX_SEL_MANIFEST_INTERFACE_ITEM_ICON, "SELECT ID FROM manifest_interface_item_icon ORDER BY ID DESC", CONNECTION_SYNCH);

    // ManifestInterfaceTOCData.db2
    PrepareStatement(HOTFIX_SEL_MANIFEST_INTERFACE_T_O_C_DATA, "SELECT ID, FilePath FROM manifest_interface_t_o_c_data ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_MANIFEST_INTERFACE_T_O_C_DATA, "SELECT ID, FilePath_lang FROM manifest_interface_t_o_c_data_locale WHERE locale = ?", CONNECTION_SYNCH);

    // ManifestMP3.db2
    PrepareStatement(HOTFIX_SEL_MANIFEST_M_P3, "SELECT ID FROM manifest_m_p3 ORDER BY ID DESC", CONNECTION_SYNCH);

    // Map.db2
    PrepareStatement(HOTFIX_SEL_MAP, "SELECT ID, Directory, MapName, MapDescription0, MapDescription1, PvpShortDescription, PvpLongDescription, "
        "Flags1, Flags2, MinimapIconScale, CorpsePosX, CorpsePosY, AreaTableID, LoadingScreenID, CorpseMapID, TimeOfDayOverride, ParentMapID, "
        "CosmeticParentMapID, WindSettingsID, InstanceType, MapType, ExpansionID, MaxPlayers, TimeOffset FROM map ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_MAP, "SELECT ID, Directory_lang, MapName_lang, MapDescription0_lang, MapDescription1_lang, "
        "PvpShortDescription_lang, PvpLongDescription_lang FROM map_locale WHERE locale = ?", CONNECTION_SYNCH);

    // MapCelestialBody.db2
    PrepareStatement(HOTFIX_SEL_MAP_CELESTIAL_BODY, "SELECT ID, CelestialBodyID, PlayerConditionID FROM map_celestial_body ORDER BY ID DESC", CONNECTION_SYNCH);

    // MapChallengeMode.db2
    PrepareStatement(HOTFIX_SEL_MAP_CHALLENGE_MODE, "SELECT Name, ID, MapID, CriteriaCount1, CriteriaCount2, CriteriaCount3, Flags"
        " FROM map_challenge_mode ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_MAP_CHALLENGE_MODE, "SELECT ID, Name_lang FROM map_challenge_mode_locale WHERE locale = ?", CONNECTION_SYNCH);

    // MapDifficulty.db2
    PrepareStatement(HOTFIX_SEL_MAP_DIFFICULTY, "SELECT ID, Message, DifficultyID, ResetInterval, MaxPlayers, LockID, Flags, ItemContext, "
        "ItemContextPickerID, MapID FROM map_difficulty ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_MAP_DIFFICULTY, "SELECT ID, Message_lang FROM map_difficulty_locale WHERE locale = ?", CONNECTION_SYNCH);

    // MapDifficultyXCondition.db2
    PrepareStatement(HOTFIX_SEL_MAP_DIFFICULTY_X_CONDITION, "SELECT ID, FailureDescription, PlayerConditionID, OrderIndex, MapDifficultyId"
        " FROM map_difficulty_x_condition ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_MAP_DIFFICULTY_X_CONDITION, "SELECT ID, FailureDescription_lang FROM map_difficulty_x_condition_locale"
        " WHERE locale = ?", CONNECTION_SYNCH);

    // MapLoadingScreen.db2
    PrepareStatement(HOTFIX_SEL_MAP_LOADING_SCREEN, "SELECT ID, Min1, Min2, Max1, Max2, LoadingScreenID, OrderIndex FROM map_loading_screen"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // MarketingPromotionsXLocale.db2
    PrepareStatement(HOTFIX_SEL_MARKETING_PROMOTIONS_X, "SELECT ID, AcceptURL, AdTexture, LogoTexture, AcceptButtonTexture, "
        "DeclineButtonTexture, PromotionID, LocaleID FROM marketing_promotions_x_locale ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_MARKETING_PROMOTIONS_X, "SELECT ID, AcceptURL_lang FROM marketing_promotions_x_locale_locale WHERE locale = ?", CONNECTION_SYNCH);

    // Material.db2
    PrepareStatement(HOTFIX_SEL_MATERIAL, "SELECT ID, Flags, FoleySoundID, SheatheSoundID, UnsheatheSoundID FROM material ORDER BY ID DESC", CONNECTION_SYNCH);

    // MissileTargeting.db2
    PrepareStatement(HOTFIX_SEL_MISSILE_TARGETING, "SELECT ID, TurnLingering, PitchLingering, MouseLingering, EndOpacity, ArcSpeed, ArcRepeat, "
        "ArcWidth, ImpactRadius1, ImpactRadius2, ImpactTexRadius, ArcTextureFileID, ImpactTextureFileID, ImpactModelFileID1, ImpactModelFileID2"
        " FROM missile_targeting ORDER BY ID DESC", CONNECTION_SYNCH);

    // ModelAnimCloakDampening.db2
    PrepareStatement(HOTFIX_SEL_MODEL_ANIM_CLOAK_DAMPENING, "SELECT ID, AnimationDataID, CloakDampeningID FROM model_anim_cloak_dampening"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // ModelFileData.db2
    PrepareStatement(HOTFIX_SEL_MODEL_FILE_DATA, "SELECT Flags, LodCount, ID, ModelResourcesID FROM model_file_data ORDER BY ID DESC", CONNECTION_SYNCH);

    // ModelRibbonQuality.db2
    PrepareStatement(HOTFIX_SEL_MODEL_RIBBON_QUALITY, "SELECT ID, RibbonQualityID FROM model_ribbon_quality ORDER BY ID DESC", CONNECTION_SYNCH);

    // ModifierTree.db2
    PrepareStatement(HOTFIX_SEL_MODIFIER_TREE, "SELECT ID, Asset, SecondaryAsset, Parent, Type, TertiaryAsset, Operator, Amount FROM modifier_tree"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // Mount.db2
    PrepareStatement(HOTFIX_SEL_MOUNT, "SELECT Name, Description, SourceText, SourceSpellID, MountFlyRideHeight, MountTypeID, Flags, SourceTypeEnum, "
        "ID, PlayerConditionID, UiModelSceneID FROM mount ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_MOUNT, "SELECT ID, Name_lang, Description_lang, SourceText_lang FROM mount_locale WHERE locale = ?", CONNECTION_SYNCH);

    // MountCapability.db2
    PrepareStatement(HOTFIX_SEL_MOUNT_CAPABILITY, "SELECT ReqSpellKnownID, ModSpellAuraID, ReqRidingSkill, ReqAreaID, ReqMapID, Flags, ID, "
        "ReqSpellAuraID FROM mount_capability ORDER BY ID DESC", CONNECTION_SYNCH);

    // MountTypeXCapability.db2
    PrepareStatement(HOTFIX_SEL_MOUNT_TYPE_X_CAPABILITY, "SELECT ID, MountTypeID, MountCapabilityID, OrderIndex FROM mount_type_x_capability"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // MountXDisplay.db2
    PrepareStatement(HOTFIX_SEL_MOUNT_X_DISPLAY, "SELECT ID, CreatureDisplayInfoID, PlayerConditionID, MountID FROM mount_x_display ORDER BY ID DESC", CONNECTION_SYNCH);

    // Movie.db2
    PrepareStatement(HOTFIX_SEL_MOVIE, "SELECT ID, AudioFileDataID, SubtitleFileDataID, Volume, KeyID FROM movie ORDER BY ID DESC", CONNECTION_SYNCH);

    // MovieFileData.db2
    PrepareStatement(HOTFIX_SEL_MOVIE_FILE_DATA, "SELECT ID, Resolution FROM movie_file_data ORDER BY ID DESC", CONNECTION_SYNCH);

    // MovieVariation.db2
    PrepareStatement(HOTFIX_SEL_MOVIE_VARIATION, "SELECT ID, FileDataID, OverlayFileDataID FROM movie_variation ORDER BY ID DESC", CONNECTION_SYNCH);

    // NameGen.db2
    PrepareStatement(HOTFIX_SEL_NAME_GEN, "SELECT ID, Name, RaceID, Sex FROM name_gen ORDER BY ID DESC", CONNECTION_SYNCH);

    // NamesProfanity.db2
    PrepareStatement(HOTFIX_SEL_NAMES_PROFANITY, "SELECT ID, Name, Language FROM names_profanity ORDER BY ID DESC", CONNECTION_SYNCH);

    // NamesReserved.db2
    PrepareStatement(HOTFIX_SEL_NAMES_RESERVED, "SELECT ID, Name FROM names_reserved ORDER BY ID DESC", CONNECTION_SYNCH);

    // NamesReservedLocale.db2
    PrepareStatement(HOTFIX_SEL_NAMES_RESERVED_LOCALE, "SELECT ID, Name, LocaleMask FROM names_reserved_locale ORDER BY ID DESC", CONNECTION_SYNCH);

    // NPCModelItemSlotDisplayInfo.db2
    PrepareStatement(HOTFIX_SEL_N_P_C_MODEL_ITEM_SLOT_DISPLAY_INFO, "SELECT ID, ItemDisplayInfoID, ItemSlot FROM n_p_c_model_item_slot_display_info"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // NPCSounds.db2
    PrepareStatement(HOTFIX_SEL_N_P_C_SOUNDS, "SELECT ID, SoundID1, SoundID2, SoundID3, SoundID4 FROM n_p_c_sounds ORDER BY ID DESC", CONNECTION_SYNCH);

    // ObjectEffect.db2
    PrepareStatement(HOTFIX_SEL_OBJECT_EFFECT, "SELECT ID, Offset1, Offset2, Offset3, ObjectEffectGroupID, TriggerType, EventType, EffectRecType, "
        "Attachment, EffectRecID, ObjectEffectModifierID FROM object_effect ORDER BY ID DESC", CONNECTION_SYNCH);

    // ObjectEffectModifier.db2
    PrepareStatement(HOTFIX_SEL_OBJECT_EFFECT_MODIFIER, "SELECT ID, Param1, Param2, Param3, Param4, InputType, MapType, OutputType"
        " FROM object_effect_modifier ORDER BY ID DESC", CONNECTION_SYNCH);

    // ObjectEffectPackageElem.db2
    PrepareStatement(HOTFIX_SEL_OBJECT_EFFECT_PACKAGE_ELEM, "SELECT ID, ObjectEffectPackageID, ObjectEffectGroupID, StateType"
        " FROM object_effect_package_elem ORDER BY ID DESC", CONNECTION_SYNCH);

    // OutlineEffect.db2
    PrepareStatement(HOTFIX_SEL_OUTLINE_EFFECT, "SELECT ID, 'Range', UnitConditionID, PassiveHighlightColorID, HighlightColorID, Priority, Flags"
        " FROM outline_effect ORDER BY ID DESC", CONNECTION_SYNCH);

    // OverrideSpellData.db2
    PrepareStatement(HOTFIX_SEL_OVERRIDE_SPELL_DATA, "SELECT ID, Spells1, Spells2, Spells3, Spells4, Spells5, Spells6, Spells7, Spells8, Spells9, "
        "Spells10, PlayerActionBarFileDataID, Flags FROM override_spell_data ORDER BY ID DESC", CONNECTION_SYNCH);

    // PageTextMaterial.db2
    PrepareStatement(HOTFIX_SEL_PAGE_TEXT_MATERIAL, "SELECT ID, Name FROM page_text_material ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_PAGE_TEXT_MATERIAL, "SELECT ID, Name_lang FROM page_text_material_locale WHERE locale = ?", CONNECTION_SYNCH);

    // PaperDollItemFrame.db2
    PrepareStatement(HOTFIX_SEL_PAPER_DOLL_ITEM_FRAME, "SELECT ID, ItemButtonName, SlotNumber, SlotIconFileID FROM paper_doll_item_frame"
        " ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_PAPER_DOLL_ITEM_FRAME, "SELECT ID, ItemButtonName_lang FROM paper_doll_item_frame_locale WHERE locale = ?", CONNECTION_SYNCH);

    // ParagonReputation.db2
    PrepareStatement(HOTFIX_SEL_PARAGON_REPUTATION, "SELECT ID, LevelThreshold, QuestID, FactionID FROM paragon_reputation ORDER BY ID DESC", CONNECTION_SYNCH);

    // ParticleColor.db2
    PrepareStatement(HOTFIX_SEL_PARTICLE_COLOR, "SELECT ID, Start1, Start2, Start3, Mid1, Mid2, Mid3, End1, End2, End3 FROM particle_color"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // Path.db2
    PrepareStatement(HOTFIX_SEL_PATH, "SELECT ID, Type, SplineType, Red, Green, Blue, Alpha, Flags FROM path ORDER BY ID DESC", CONNECTION_SYNCH);

    // PathNode.db2
    PrepareStatement(HOTFIX_SEL_PATH_NODE, "SELECT ID, LocationID, PathID, Sequence FROM path_node ORDER BY ID DESC", CONNECTION_SYNCH);

    // PathNodeProperty.db2
    PrepareStatement(HOTFIX_SEL_PATH_NODE_PROPERTY, "SELECT PathID, Sequence, PropertyIndex, ID, Value FROM path_node_property ORDER BY ID DESC", CONNECTION_SYNCH);

    // PathProperty.db2
    PrepareStatement(HOTFIX_SEL_PATH_PROPERTY, "SELECT Value, PathID, PropertyIndex, ID FROM path_property ORDER BY ID DESC", CONNECTION_SYNCH);

    // Phase.db2
    PrepareStatement(HOTFIX_SEL_PHASE, "SELECT ID, Flags FROM phase ORDER BY ID DESC", CONNECTION_SYNCH);

    // PhaseShiftZoneSounds.db2
    PrepareStatement(HOTFIX_SEL_PHASE_SHIFT_ZONE_SOUNDS, "SELECT ID, AreaID, PhaseID, PhaseGroupID, SoundAmbienceID, UwSoundAmbienceID, WmoAreaID, "
        "PhaseUseFlags, SoundProviderPreferencesID, UwSoundProviderPreferencesID, ZoneIntroMusicID, ZoneMusicID, UwZoneIntroMusicID, UwZoneMusicID"
        " FROM phase_shift_zone_sounds ORDER BY ID DESC", CONNECTION_SYNCH);

    // PhaseXPhaseGroup.db2
    PrepareStatement(HOTFIX_SEL_PHASE_X_PHASE_GROUP, "SELECT ID, PhaseID, PhaseGroupID FROM phase_x_phase_group ORDER BY ID DESC", CONNECTION_SYNCH);

    // PlayerCondition.db2
    PrepareStatement(HOTFIX_SEL_PLAYER_CONDITION, "SELECT RaceMask, FailureDescription, ID, Flags, MinLevel, MaxLevel, ClassMask, Gender, "
        "NativeGender, SkillLogic, LanguageID, MinLanguage, MaxLanguage, MaxFactionID, MaxReputation, ReputationLogic, CurrentPvpFaction, MinPVPRank, "
        "MaxPVPRank, PvpMedal, PrevQuestLogic, CurrQuestLogic, CurrentCompletedQuestLogic, SpellLogic, ItemLogic, ItemFlags, AuraSpellLogic, "
        "WorldStateExpressionID, WeatherID, PartyStatus, LifetimeMaxPVPRank, AchievementLogic, LfgLogic, AreaLogic, CurrencyLogic, QuestKillID, "
        "QuestKillLogic, MinExpansionLevel, MaxExpansionLevel, MinExpansionTier, MaxExpansionTier, MinGuildLevel, MaxGuildLevel, PhaseUseFlags, "
        "PhaseID, PhaseGroupID, MinAvgItemLevel, MaxAvgItemLevel, MinAvgEquippedItemLevel, MaxAvgEquippedItemLevel, ChrSpecializationIndex, "
        "ChrSpecializationRole, PowerType, PowerTypeComp, PowerTypeValue, ModifierTreeID, WeaponSubclassMask, SkillID1, SkillID2, SkillID3, SkillID4, "
        "MinSkill1, MinSkill2, MinSkill3, MinSkill4, MaxSkill1, MaxSkill2, MaxSkill3, MaxSkill4, MinFactionID1, MinFactionID2, MinFactionID3, "
        "MinReputation1, MinReputation2, MinReputation3, PrevQuestID1, PrevQuestID2, PrevQuestID3, PrevQuestID4, CurrQuestID1, CurrQuestID2, "
        "CurrQuestID3, CurrQuestID4, CurrentCompletedQuestID1, CurrentCompletedQuestID2, CurrentCompletedQuestID3, CurrentCompletedQuestID4, "
        "SpellID1, SpellID2, SpellID3, SpellID4, ItemID1, ItemID2, ItemID3, ItemID4, ItemCount1, ItemCount2, ItemCount3, ItemCount4, Explored1, "
        "Explored2, Time1, Time2, AuraSpellID1, AuraSpellID2, AuraSpellID3, AuraSpellID4, AuraStacks1, AuraStacks2, AuraStacks3, AuraStacks4, "
        "Achievement1, Achievement2, Achievement3, Achievement4, LfgStatus1, LfgStatus2, LfgStatus3, LfgStatus4, LfgCompare1, LfgCompare2, "
        "LfgCompare3, LfgCompare4, LfgValue1, LfgValue2, LfgValue3, LfgValue4, AreaID1, AreaID2, AreaID3, AreaID4, CurrencyID1, CurrencyID2, "
        "CurrencyID3, CurrencyID4, CurrencyCount1, CurrencyCount2, CurrencyCount3, CurrencyCount4, QuestKillMonster1, QuestKillMonster2, "
        "QuestKillMonster3, QuestKillMonster4, QuestKillMonster5, QuestKillMonster6, MovementFlags1, MovementFlags2 FROM player_condition"
        " ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_PLAYER_CONDITION, "SELECT ID, FailureDescription_lang FROM player_condition_locale WHERE locale = ?", CONNECTION_SYNCH);

    // Positioner.db2
    PrepareStatement(HOTFIX_SEL_POSITIONER, "SELECT ID, StartLife, FirstStateID, Flags, StartLifePercent FROM positioner ORDER BY ID DESC", CONNECTION_SYNCH);

    // PositionerState.db2
    PrepareStatement(HOTFIX_SEL_POSITIONER_STATE, "SELECT ID, EndLife, EndLifePercent, NextStateID, TransformMatrixID, PosEntryID, RotEntryID, "
        "ScaleEntryID, Flags FROM positioner_state ORDER BY ID DESC", CONNECTION_SYNCH);

    // PositionerStateEntry.db2
    PrepareStatement(HOTFIX_SEL_POSITIONER_STATE_ENTRY, "SELECT ID, ParamA, ParamB, SrcValType, SrcVal, DstValType, DstVal, EntryType, Style, "
        "SrcType, DstType, CurveID FROM positioner_state_entry ORDER BY ID DESC", CONNECTION_SYNCH);

    // PowerDisplay.db2
    PrepareStatement(HOTFIX_SEL_POWER_DISPLAY, "SELECT ID, GlobalStringBaseTag, ActualType, Red, Green, Blue FROM power_display ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_POWER_DISPLAY, "SELECT ID, GlobalStringBaseTag_lang FROM power_display_locale WHERE locale = ?", CONNECTION_SYNCH);

    // PowerType.db2
    PrepareStatement(HOTFIX_SEL_POWER_TYPE, "SELECT ID, NameGlobalStringTag, CostGlobalStringTag, RegenPeace, RegenCombat, MaxBasePower, "
        "RegenInterruptTimeMS, Flags, PowerTypeEnum, MinPower, CenterPower, DefaultPower, DisplayModifier FROM power_type ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_POWER_TYPE, "SELECT ID, NameGlobalStringTag_lang, CostGlobalStringTag_lang FROM power_type_locale WHERE locale = ?", CONNECTION_SYNCH);

    // PrestigeLevelInfo.db2
    PrepareStatement(HOTFIX_SEL_PRESTIGE_LEVEL_INFO, "SELECT ID, Name, BadgeTextureFileDataID, PrestigeLevel, Flags FROM prestige_level_info"
        " ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_PRESTIGE_LEVEL_INFO, "SELECT ID, Name_lang FROM prestige_level_info_locale WHERE locale = ?", CONNECTION_SYNCH);

    // PvpBracketTypes.db2
    PrepareStatement(HOTFIX_SEL_PVP_BRACKET_TYPES, "SELECT ID, BracketID, WeeklyQuestID1, WeeklyQuestID2, WeeklyQuestID3, WeeklyQuestID4"
        " FROM pvp_bracket_types ORDER BY ID DESC", CONNECTION_SYNCH);

    // PvpDifficulty.db2
    PrepareStatement(HOTFIX_SEL_PVP_DIFFICULTY, "SELECT ID, RangeIndex, MinLevel, MaxLevel, MapID FROM pvp_difficulty ORDER BY ID DESC", CONNECTION_SYNCH);

    // PvpItem.db2
    PrepareStatement(HOTFIX_SEL_PVP_ITEM, "SELECT ID, ItemID, ItemLevelDelta FROM pvp_item ORDER BY ID DESC", CONNECTION_SYNCH);

    // PvpReward.db2
    PrepareStatement(HOTFIX_SEL_PVP_REWARD, "SELECT ID, HonorLevel, PrestigeLevel, RewardPackID FROM pvp_reward ORDER BY ID DESC", CONNECTION_SYNCH);

    // PvpScalingEffect.db2
    PrepareStatement(HOTFIX_SEL_PVP_SCALING_EFFECT, "SELECT ID, Value, PvpScalingEffectTypeID, SpecializationID FROM pvp_scaling_effect"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // PvpScalingEffectType.db2
    PrepareStatement(HOTFIX_SEL_PVP_SCALING_EFFECT_TYPE, "SELECT ID, Name FROM pvp_scaling_effect_type ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_PVP_SCALING_EFFECT_TYPE, "SELECT ID, Name_lang FROM pvp_scaling_effect_type_locale WHERE locale = ?", CONNECTION_SYNCH);

    // PvpTalent.db2
    PrepareStatement(HOTFIX_SEL_PVP_TALENT, "SELECT ID, Description, SpellID, OverrideSpellID, ExtraSpellID, TierID, ColumnIndex, Flags, ClassID, "
        "SpecID, Role FROM pvp_talent ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_PVP_TALENT, "SELECT ID, Description_lang FROM pvp_talent_locale WHERE locale = ?", CONNECTION_SYNCH);

    // PvpTalentUnlock.db2
    PrepareStatement(HOTFIX_SEL_PVP_TALENT_UNLOCK, "SELECT ID, TierID, ColumnIndex, HonorLevel FROM pvp_talent_unlock ORDER BY ID DESC", CONNECTION_SYNCH);

    // QuestFactionReward.db2
    PrepareStatement(HOTFIX_SEL_QUEST_FACTION_REWARD, "SELECT ID, Difficulty1, Difficulty2, Difficulty3, Difficulty4, Difficulty5, Difficulty6, "
        "Difficulty7, Difficulty8, Difficulty9, Difficulty10 FROM quest_faction_reward ORDER BY ID DESC", CONNECTION_SYNCH);

    // QuestFeedbackEffect.db2
    PrepareStatement(HOTFIX_SEL_QUEST_FEEDBACK_EFFECT, "SELECT ID, FileDataID, MinimapAtlasMemberID, AttachPoint, PassiveHighlightColorType, "
        "Priority, Flags FROM quest_feedback_effect ORDER BY ID DESC", CONNECTION_SYNCH);

    // QuestInfo.db2
    PrepareStatement(HOTFIX_SEL_QUEST_INFO, "SELECT ID, InfoName, Profession, Type, Modifiers FROM quest_info ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_QUEST_INFO, "SELECT ID, InfoName_lang FROM quest_info_locale WHERE locale = ?", CONNECTION_SYNCH);

    // QuestLine.db2
    PrepareStatement(HOTFIX_SEL_QUEST_LINE, "SELECT ID, Name FROM quest_line ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_QUEST_LINE, "SELECT ID, Name_lang FROM quest_line_locale WHERE locale = ?", CONNECTION_SYNCH);

    // QuestLineXQuest.db2
    PrepareStatement(HOTFIX_SEL_QUEST_LINE_X_QUEST, "SELECT ID, QuestLineID, QuestID, OrderIndex FROM quest_line_x_quest ORDER BY ID DESC", CONNECTION_SYNCH);

    // QuestMoneyReward.db2
    PrepareStatement(HOTFIX_SEL_QUEST_MONEY_REWARD, "SELECT ID, Difficulty1, Difficulty2, Difficulty3, Difficulty4, Difficulty5, Difficulty6, "
        "Difficulty7, Difficulty8, Difficulty9, Difficulty10 FROM quest_money_reward ORDER BY ID DESC", CONNECTION_SYNCH);

    // QuestObjective.db2
    PrepareStatement(HOTFIX_SEL_QUEST_OBJECTIVE, "SELECT ID, Description, Amount, ObjectID, Type, OrderIndex, StorageIndex, Flags, QuestID"
        " FROM quest_objective ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_QUEST_OBJECTIVE, "SELECT ID, Description_lang FROM quest_objective_locale WHERE locale = ?", CONNECTION_SYNCH);

    // QuestPackageItem.db2
    PrepareStatement(HOTFIX_SEL_QUEST_PACKAGE_ITEM, "SELECT ID, ItemID, PackageID, DisplayType, ItemQuantity FROM quest_package_item ORDER BY ID DESC", CONNECTION_SYNCH);

    // QuestPOIBlob.db2
    PrepareStatement(HOTFIX_SEL_QUEST_P_O_I_BLOB, "SELECT ID, MapID, WorldMapAreaID, NumPoints, Floor, PlayerConditionID, QuestID, ObjectiveIndex"
        " FROM quest_p_o_i_blob ORDER BY ID DESC", CONNECTION_SYNCH);

    // QuestPOIPoint.db2
    PrepareStatement(HOTFIX_SEL_QUEST_P_O_I_POINT, "SELECT QuestPOIBlobID, X, Y, ID FROM quest_p_o_i_point ORDER BY ID DESC", CONNECTION_SYNCH);

    // QuestSort.db2
    PrepareStatement(HOTFIX_SEL_QUEST_SORT, "SELECT ID, SortName, UiOrderIndex FROM quest_sort ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_QUEST_SORT, "SELECT ID, SortName_lang FROM quest_sort_locale WHERE locale = ?", CONNECTION_SYNCH);

    // QuestV2.db2
    PrepareStatement(HOTFIX_SEL_QUEST_V2, "SELECT ID, UniqueBitFlag FROM quest_v2 ORDER BY ID DESC", CONNECTION_SYNCH);

    // QuestV2CliTask.db2
    PrepareStatement(HOTFIX_SEL_QUEST_V2_CLI_TASK, "SELECT FiltRaces, QuestTitle, BulletText, StartItem, UniqueBitFlag, ConditionID, FiltClasses, "
        "FiltCompletedQuest1, FiltCompletedQuest2, FiltCompletedQuest3, FiltMinSkillID, WorldStateExpressionID, FiltActiveQuest, "
        "FiltCompletedQuestLogic, FiltMaxFactionID, FiltMaxFactionValue, FiltMaxLevel, FiltMinFactionID, FiltMinFactionValue, FiltMinLevel, "
        "FiltMinSkillValue, FiltNonActiveQuest, ID, BreadCrumbID, QuestInfoID, SandboxScalingID FROM quest_v2_cli_task ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_QUEST_V2_CLI_TASK, "SELECT ID, QuestTitle_lang, BulletText_lang FROM quest_v2_cli_task_locale WHERE locale = ?", CONNECTION_SYNCH);

    // QuestXGroupActivity.db2
    PrepareStatement(HOTFIX_SEL_QUEST_X_GROUP_ACTIVITY, "SELECT ID, QuestID, GroupFinderActivityID FROM quest_x_group_activity ORDER BY ID DESC", CONNECTION_SYNCH);

    // QuestXp.db2
    PrepareStatement(HOTFIX_SEL_QUEST_XP, "SELECT ID, Difficulty1, Difficulty2, Difficulty3, Difficulty4, Difficulty5, Difficulty6, Difficulty7, "
        "Difficulty8, Difficulty9, Difficulty10 FROM quest_xp ORDER BY ID DESC", CONNECTION_SYNCH);

    // RandPropPoints.db2
    PrepareStatement(HOTFIX_SEL_RAND_PROP_POINTS, "SELECT ID, Epic1, Epic2, Epic3, Epic4, Epic5, Superior1, Superior2, Superior3, Superior4, "
        "Superior5, Good1, Good2, Good3, Good4, Good5 FROM rand_prop_points ORDER BY ID DESC", CONNECTION_SYNCH);

    // RelicSlotTierRequirement.db2
    PrepareStatement(HOTFIX_SEL_RELIC_SLOT_TIER_REQUIREMENT, "SELECT ID, PlayerConditionID, RelicIndex, RelicTier FROM relic_slot_tier_requirement"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // RelicTalent.db2
    PrepareStatement(HOTFIX_SEL_RELIC_TALENT, "SELECT ID, ArtifactPowerID, ArtifactPowerLabel, Type, PVal, Flags FROM relic_talent ORDER BY ID DESC", CONNECTION_SYNCH);

    // ResearchBranch.db2
    PrepareStatement(HOTFIX_SEL_RESEARCH_BRANCH, "SELECT ID, Name, ItemID, CurrencyID, ResearchFieldID, TextureFileID, BigTextureFileID"
        " FROM research_branch ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_RESEARCH_BRANCH, "SELECT ID, Name_lang FROM research_branch_locale WHERE locale = ?", CONNECTION_SYNCH);

    // ResearchField.db2
    PrepareStatement(HOTFIX_SEL_RESEARCH_FIELD, "SELECT Name, Slot, ID FROM research_field ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_RESEARCH_FIELD, "SELECT ID, Name_lang FROM research_field_locale WHERE locale = ?", CONNECTION_SYNCH);

    // ResearchProject.db2
    PrepareStatement(HOTFIX_SEL_RESEARCH_PROJECT, "SELECT Name, Description, SpellID, ResearchBranchID, Rarity, NumSockets, ID, TextureFileID, "
        "RequiredWeight FROM research_project ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_RESEARCH_PROJECT, "SELECT ID, Name_lang, Description_lang FROM research_project_locale WHERE locale = ?", CONNECTION_SYNCH);

    // ResearchSite.db2
    PrepareStatement(HOTFIX_SEL_RESEARCH_SITE, "SELECT ID, Name, QuestPoiBlobID, MapID, AreaPOIIconEnum FROM research_site ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_RESEARCH_SITE, "SELECT ID, Name_lang FROM research_site_locale WHERE locale = ?", CONNECTION_SYNCH);

    // Resistances.db2
    PrepareStatement(HOTFIX_SEL_RESISTANCES, "SELECT ID, Name, Flags, FizzleSoundID FROM resistances ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_RESISTANCES, "SELECT ID, Name_lang FROM resistances_locale WHERE locale = ?", CONNECTION_SYNCH);

    // RewardPack.db2
    PrepareStatement(HOTFIX_SEL_REWARD_PACK, "SELECT ID, Money, ArtifactXPMultiplier, ArtifactXPDifficulty, ArtifactXPCategoryID, CharTitleID, "
        "TreasurePickerID FROM reward_pack ORDER BY ID DESC", CONNECTION_SYNCH);

    // RewardPackXCurrencyType.db2
    PrepareStatement(HOTFIX_SEL_REWARD_PACK_X_CURRENCY_TYPE, "SELECT ID, CurrencyTypeID, Quantity, RewardPackID FROM reward_pack_x_currency_type"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // RewardPackXItem.db2
    PrepareStatement(HOTFIX_SEL_REWARD_PACK_X_ITEM, "SELECT ID, ItemID, ItemQuantity, RewardPackID FROM reward_pack_x_item ORDER BY ID DESC", CONNECTION_SYNCH);

    // RibbonQuality.db2
    PrepareStatement(HOTFIX_SEL_RIBBON_QUALITY, "SELECT ID, MaxSampleTimeDelta, AngleThreshold, MinDistancePerSlice, NumStrips, Flags"
        " FROM ribbon_quality ORDER BY ID DESC", CONNECTION_SYNCH);

    // RulesetItemUpgrade.db2
    PrepareStatement(HOTFIX_SEL_RULESET_ITEM_UPGRADE, "SELECT ID, ItemID, ItemUpgradeID FROM ruleset_item_upgrade ORDER BY ID DESC", CONNECTION_SYNCH);

    // SandboxScaling.db2
    PrepareStatement(HOTFIX_SEL_SANDBOX_SCALING, "SELECT ID, MinLevel, MaxLevel, Flags FROM sandbox_scaling ORDER BY ID DESC", CONNECTION_SYNCH);

    // ScalingStatDistribution.db2
    PrepareStatement(HOTFIX_SEL_SCALING_STAT_DISTRIBUTION, "SELECT ID, PlayerLevelToItemLevelCurveID, MinLevel, MaxLevel"
        " FROM scaling_stat_distribution ORDER BY ID DESC", CONNECTION_SYNCH);

    // Scenario.db2
    PrepareStatement(HOTFIX_SEL_SCENARIO, "SELECT ID, Name, AreaTableID, Flags, Type FROM scenario ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_SCENARIO, "SELECT ID, Name_lang FROM scenario_locale WHERE locale = ?", CONNECTION_SYNCH);

    // ScenarioStep.db2
    PrepareStatement(HOTFIX_SEL_SCENARIO_STEP, "SELECT ID, Description, Title, ScenarioID, Supersedes, RewardQuestID, OrderIndex, Flags, "
        "Criteriatreeid, RelatedStep FROM scenario_step ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_SCENARIO_STEP, "SELECT ID, Description_lang, Title_lang FROM scenario_step_locale WHERE locale = ?", CONNECTION_SYNCH);

    // SceneScript.db2
    PrepareStatement(HOTFIX_SEL_SCENE_SCRIPT, "SELECT ID, FirstSceneScriptID, NextSceneScriptID FROM scene_script ORDER BY ID DESC", CONNECTION_SYNCH);

    // SceneScriptGlobalText.db2
    PrepareStatement(HOTFIX_SEL_SCENE_SCRIPT_GLOBAL_TEXT, "SELECT ID, Name, Script FROM scene_script_global_text ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_SCENE_SCRIPT_GLOBAL_TEXT, "SELECT ID, Name_lang, Script_lang FROM scene_script_global_text_locale WHERE locale = ?", CONNECTION_SYNCH);

    // SceneScriptPackage.db2
    PrepareStatement(HOTFIX_SEL_SCENE_SCRIPT_PACKAGE, "SELECT ID, Name FROM scene_script_package ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_SCENE_SCRIPT_PACKAGE, "SELECT ID, Name_lang FROM scene_script_package_locale WHERE locale = ?", CONNECTION_SYNCH);

    // SceneScriptPackageMember.db2
    PrepareStatement(HOTFIX_SEL_SCENE_SCRIPT_PACKAGE_MEMBER, "SELECT ID, SceneScriptPackageID, SceneScriptID, ChildSceneScriptPackageID, OrderIndex"
        " FROM scene_script_package_member ORDER BY ID DESC", CONNECTION_SYNCH);

    // SceneScriptText.db2
    PrepareStatement(HOTFIX_SEL_SCENE_SCRIPT_TEXT, "SELECT ID, Name, Script FROM scene_script_text ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_SCENE_SCRIPT_TEXT, "SELECT ID, Name_lang, Script_lang FROM scene_script_text_locale WHERE locale = ?", CONNECTION_SYNCH);

    // ScheduledInterval.db2
    PrepareStatement(HOTFIX_SEL_SCHEDULED_INTERVAL, "SELECT ID, Flags, RepeatType, DurationSecs, OffsetSecs, DateAlignmentType FROM scheduled_interval"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // ScheduledWorldState.db2
    PrepareStatement(HOTFIX_SEL_SCHEDULED_WORLD_STATE, "SELECT ID, ScheduledWorldStateGroupID, WorldStateID, Value, DurationSecs, Weight, "
        "UniqueCategory, Flags, OrderIndex FROM scheduled_world_state ORDER BY ID DESC", CONNECTION_SYNCH);

    // ScheduledWorldStateGroup.db2
    PrepareStatement(HOTFIX_SEL_SCHEDULED_WORLD_STATE_GROUP, "SELECT ID, Flags, ScheduledIntervalID, SelectionType, SelectionCount, Priority"
        " FROM scheduled_world_state_group ORDER BY ID DESC", CONNECTION_SYNCH);

    // ScheduledWorldStateXUniqCat.db2
    PrepareStatement(HOTFIX_SEL_SCHEDULED_WORLD_STATE_X_UNIQ_CAT, "SELECT ID, ScheduledUniqueCategoryID FROM scheduled_world_state_x_uniq_cat"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // ScreenEffect.db2
    PrepareStatement(HOTFIX_SEL_SCREEN_EFFECT, "SELECT ID, Name, Param1, Param2, Param3, Param4, LightParamsID, LightParamsFadeIn, "
        "LightParamsFadeOut, TimeOfDayOverride, Effect, LightFlags, EffectMask, FullScreenEffectID, SoundAmbienceID, ZoneMusicID FROM screen_effect"
        " ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_SCREEN_EFFECT, "SELECT ID, Name_lang FROM screen_effect_locale WHERE locale = ?", CONNECTION_SYNCH);

    // ScreenLocation.db2
    PrepareStatement(HOTFIX_SEL_SCREEN_LOCATION, "SELECT ID, Name FROM screen_location ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_SCREEN_LOCATION, "SELECT ID, Name_lang FROM screen_location_locale WHERE locale = ?", CONNECTION_SYNCH);

    // SDReplacementModel.db2
    PrepareStatement(HOTFIX_SEL_S_D_REPLACEMENT_MODEL, "SELECT ID, SdFileDataID FROM s_d_replacement_model ORDER BY ID DESC", CONNECTION_SYNCH);

    // SeamlessSite.db2
    PrepareStatement(HOTFIX_SEL_SEAMLESS_SITE, "SELECT ID, MapID FROM seamless_site ORDER BY ID DESC", CONNECTION_SYNCH);

    // ServerMessages.db2
    PrepareStatement(HOTFIX_SEL_SERVER_MESSAGES, "SELECT ID, Text FROM server_messages ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_SERVER_MESSAGES, "SELECT ID, Text_lang FROM server_messages_locale WHERE locale = ?", CONNECTION_SYNCH);

    // ShadowyEffect.db2
    PrepareStatement(HOTFIX_SEL_SHADOWY_EFFECT, "SELECT ID, PrimaryColor, SecondaryColor, Duration, Value, FadeInTime, FadeOutTime, InnerStrength, "
        "OuterStrength, InitialDelay, AttachPos, Flags, CurveID, Priority FROM shadowy_effect ORDER BY ID DESC", CONNECTION_SYNCH);

    // SkillLine.db2
    PrepareStatement(HOTFIX_SEL_SKILL_LINE, "SELECT ID, DisplayName, Description, AlternateVerb, Flags, CategoryID, CanLink, SpellIconFileID, "
        "ParentSkillLineID FROM skill_line ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_SKILL_LINE, "SELECT ID, DisplayName_lang, Description_lang, AlternateVerb_lang FROM skill_line_locale"
        " WHERE locale = ?", CONNECTION_SYNCH);

    // SkillLineAbility.db2
    PrepareStatement(HOTFIX_SEL_SKILL_LINE_ABILITY, "SELECT RaceMask, ID, Spell, SupercedesSpell, SkillLine, TrivialSkillLineRankHigh, "
        "TrivialSkillLineRankLow, UniqueBit, TradeSkillCategoryID, NumSkillUps, ClassMask, MinSkillLineRank, AcquireMethod, Flags"
        " FROM skill_line_ability ORDER BY ID DESC", CONNECTION_SYNCH);

    // SkillRaceClassInfo.db2
    PrepareStatement(HOTFIX_SEL_SKILL_RACE_CLASS_INFO, "SELECT ID, RaceMask, SkillID, Flags, SkillTierID, Availability, MinLevel, ClassMask"
        " FROM skill_race_class_info ORDER BY ID DESC", CONNECTION_SYNCH);

    // SoundAmbience.db2
    PrepareStatement(HOTFIX_SEL_SOUND_AMBIENCE, "SELECT ID, Flags, SoundFilterID, FlavorSoundFilterID, AmbienceID1, AmbienceID2 FROM sound_ambience"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // SoundAmbienceFlavor.db2
    PrepareStatement(HOTFIX_SEL_SOUND_AMBIENCE_FLAVOR, "SELECT ID, SoundEntriesIDDay, SoundEntriesIDNight FROM sound_ambience_flavor ORDER BY ID DESC", CONNECTION_SYNCH);

    // SoundBus.db2
    PrepareStatement(HOTFIX_SEL_SOUND_BUS, "SELECT DefaultVolume, Flags, DefaultPlaybackLimit, DefaultPriority, DefaultPriorityPenalty, BusEnumID, "
        "ID FROM sound_bus ORDER BY ID DESC", CONNECTION_SYNCH);

    // SoundBusOverride.db2
    PrepareStatement(HOTFIX_SEL_SOUND_BUS_OVERRIDE, "SELECT ID, Volume, PlaybackLimit, Priority, PriorityPenalty, SoundBusID, PlayerConditionID"
        " FROM sound_bus_override ORDER BY ID DESC", CONNECTION_SYNCH);

    // SoundEmitterPillPoints.db2
    PrepareStatement(HOTFIX_SEL_SOUND_EMITTER_PILL_POINTS, "SELECT ID, Position1, Position2, Position3, SoundEmittersID FROM sound_emitter_pill_points"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // SoundEmitters.db2
    PrepareStatement(HOTFIX_SEL_SOUND_EMITTERS, "SELECT Name, Position1, Position2, Position3, Direction1, Direction2, Direction3, "
        "WorldStateExpressionID, PhaseID, EmitterType, PhaseUseFlags, Flags, ID, SoundEntriesID, PhaseGroupID FROM sound_emitters ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_SOUND_EMITTERS, "SELECT ID, Name_lang FROM sound_emitters_locale WHERE locale = ?", CONNECTION_SYNCH);

    // SoundEnvelope.db2
    PrepareStatement(HOTFIX_SEL_SOUND_ENVELOPE, "SELECT ID, SoundKitID, CurveID, DecayIndex, SustainIndex, ReleaseIndex, EnvelopeType, Flags"
        " FROM sound_envelope ORDER BY ID DESC", CONNECTION_SYNCH);

    // SoundFilter.db2
    PrepareStatement(HOTFIX_SEL_SOUND_FILTER, "SELECT ID, Name FROM sound_filter ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_SOUND_FILTER, "SELECT ID, Name_lang FROM sound_filter_locale WHERE locale = ?", CONNECTION_SYNCH);

    // SoundFilterElem.db2
    PrepareStatement(HOTFIX_SEL_SOUND_FILTER_ELEM, "SELECT ID, Params1, Params2, Params3, Params4, Params5, Params6, Params7, Params8, Params9, "
        "FilterType FROM sound_filter_elem ORDER BY ID DESC", CONNECTION_SYNCH);

    // SoundKit.db2
    PrepareStatement(HOTFIX_SEL_SOUND_KIT, "SELECT ID, VolumeFloat, MinDistance, DistanceCutoff, Flags, SoundEntriesAdvancedID, SoundType, "
        "DialogType, EAXDef, VolumeVariationPlus, VolumeVariationMinus, PitchVariationPlus, PitchVariationMinus, PitchAdjust, BusOverwriteID, "
        "MaxInstances FROM sound_kit ORDER BY ID DESC", CONNECTION_SYNCH);

    // SoundKitAdvanced.db2
    PrepareStatement(HOTFIX_SEL_SOUND_KIT_ADVANCED, "SELECT ID, InnerRadius2D, DuckToSFX, DuckToMusic, InnerRadiusOfInfluence, "
        "OuterRadiusOfInfluence, TimeToDuck, TimeToUnduck, OuterRadius2D, 'Usage', SoundKitID, TimeA, TimeB, TimeC, TimeD, RandomOffsetRange, "
        "TimeIntervalMin, TimeIntervalMax, DelayMin, DelayMax, VolumeSliderCategory, DuckToAmbience, InsideAngle, OutsideAngle, OutsideVolume, "
        "MinRandomPosOffset, MaxRandomPosOffset, DuckToDialog, DuckToSuppressors, MsOffset, TimeCooldownMin, TimeCooldownMax, MaxInstancesBehavior, "
        "VolumeControlType, VolumeFadeInTimeMin, VolumeFadeInTimeMax, VolumeFadeInCurveID, VolumeFadeOutTimeMin, VolumeFadeOutTimeMax, "
        "VolumeFadeOutCurveID, ChanceToPlay FROM sound_kit_advanced ORDER BY ID DESC", CONNECTION_SYNCH);

    // SoundKitChild.db2
    PrepareStatement(HOTFIX_SEL_SOUND_KIT_CHILD, "SELECT ID, ParentSoundKitID, SoundKitID FROM sound_kit_child ORDER BY ID DESC", CONNECTION_SYNCH);

    // SoundKitEntry.db2
    PrepareStatement(HOTFIX_SEL_SOUND_KIT_ENTRY, "SELECT ID, SoundKitID, FileDataID, Frequency, Volume FROM sound_kit_entry ORDER BY ID DESC", CONNECTION_SYNCH);

    // SoundKitFallback.db2
    PrepareStatement(HOTFIX_SEL_SOUND_KIT_FALLBACK, "SELECT ID, SoundKitID, FallbackSoundKitID FROM sound_kit_fallback ORDER BY ID DESC", CONNECTION_SYNCH);

    // SoundKitName.db2
    PrepareStatement(HOTFIX_SEL_SOUND_KIT_NAME, "SELECT ID, Name FROM sound_kit_name ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_SOUND_KIT_NAME, "SELECT ID, Name_lang FROM sound_kit_name_locale WHERE locale = ?", CONNECTION_SYNCH);

    // SoundOverride.db2
    PrepareStatement(HOTFIX_SEL_SOUND_OVERRIDE, "SELECT ID, ZoneIntroMusicID, ZoneMusicID, SoundAmbienceID, SoundProviderPreferencesID"
        " FROM sound_override ORDER BY ID DESC", CONNECTION_SYNCH);

    // SoundProviderPreferences.db2
    PrepareStatement(HOTFIX_SEL_SOUND_PROVIDER_PREFERENCES, "SELECT ID, Description, EAXDecayTime, EAX2EnvironmentSize, EAX2EnvironmentDiffusion, "
        "EAX2DecayHFRatio, EAX2ReflectionsDelay, EAX2ReverbDelay, EAX2RoomRolloff, EAX2AirAbsorption, EAX3DecayLFRatio, EAX3EchoTime, EAX3EchoDepth, "
        "EAX3ModulationTime, EAX3ModulationDepth, EAX3HFReference, EAX3LFReference, Flags, EAX2Room, EAX2RoomHF, EAX2Reflections, EAX2Reverb, "
        "EAXEnvironmentSelection, EAX3RoomLF FROM sound_provider_preferences ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_SOUND_PROVIDER_PREFERENCES, "SELECT ID, Description_lang FROM sound_provider_preferences_locale WHERE locale = ?", CONNECTION_SYNCH);

    // SourceInfo.db2
    PrepareStatement(HOTFIX_SEL_SOURCE_INFO, "SELECT ID, SourceText, SourceTypeEnum, PvpFaction FROM source_info ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_SOURCE_INFO, "SELECT ID, SourceText_lang FROM source_info_locale WHERE locale = ?", CONNECTION_SYNCH);

    // SpamMessages.db2
    PrepareStatement(HOTFIX_SEL_SPAM_MESSAGES, "SELECT ID, Text FROM spam_messages ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_SPAM_MESSAGES, "SELECT ID, Text_lang FROM spam_messages_locale WHERE locale = ?", CONNECTION_SYNCH);

    // SpecializationSpells.db2
    PrepareStatement(HOTFIX_SEL_SPECIALIZATION_SPELLS, "SELECT Description, SpellID, OverridesSpellID, SpecID, DisplayOrder, ID"
        " FROM specialization_spells ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_SPECIALIZATION_SPELLS, "SELECT ID, Description_lang FROM specialization_spells_locale WHERE locale = ?", CONNECTION_SYNCH);

    // SpellActionBarPref.db2
    PrepareStatement(HOTFIX_SEL_SPELL_ACTION_BAR_PREF, "SELECT ID, SpellID, PreferredActionBarMask FROM spell_action_bar_pref ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellActivationOverlay.db2
    PrepareStatement(HOTFIX_SEL_SPELL_ACTIVATION_OVERLAY, "SELECT ID, SpellID, OverlayFileDataID, Color, Scale, IconHighlightSpellClassMask1, "
        "IconHighlightSpellClassMask2, IconHighlightSpellClassMask3, IconHighlightSpellClassMask4, ScreenLocationID, TriggerType, SoundEntriesID"
        " FROM spell_activation_overlay ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellAuraOptions.db2
    PrepareStatement(HOTFIX_SEL_SPELL_AURA_OPTIONS, "SELECT ID, ProcCharges, ProcTypeMask, ProcCategoryRecovery, CumulativeAura, "
        "SpellProcsPerMinuteID, DifficultyID, ProcChance, SpellID FROM spell_aura_options ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellAuraRestrictions.db2
    PrepareStatement(HOTFIX_SEL_SPELL_AURA_RESTRICTIONS, "SELECT ID, CasterAuraSpell, TargetAuraSpell, ExcludeCasterAuraSpell, "
        "ExcludeTargetAuraSpell, DifficultyID, CasterAuraState, TargetAuraState, ExcludeCasterAuraState, ExcludeTargetAuraState, SpellID"
        " FROM spell_aura_restrictions ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellAuraVisibility.db2
    PrepareStatement(HOTFIX_SEL_SPELL_AURA_VISIBILITY, "SELECT Type, Flags, ID FROM spell_aura_visibility ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellAuraVisXChrSpec.db2
    PrepareStatement(HOTFIX_SEL_SPELL_AURA_VIS_X_CHR_SPEC, "SELECT ID, ChrSpecializationID FROM spell_aura_vis_x_chr_spec ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellCastingRequirements.db2
    PrepareStatement(HOTFIX_SEL_SPELL_CASTING_REQUIREMENTS, "SELECT ID, SpellID, MinFactionID, RequiredAreasID, RequiresSpellFocus, "
        "FacingCasterFlags, MinReputation, RequiredAuraVision FROM spell_casting_requirements ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellCastTimes.db2
    PrepareStatement(HOTFIX_SEL_SPELL_CAST_TIMES, "SELECT ID, Base, Minimum, PerLevel FROM spell_cast_times ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellCategories.db2
    PrepareStatement(HOTFIX_SEL_SPELL_CATEGORIES, "SELECT ID, Category, StartRecoveryCategory, ChargeCategory, DifficultyID, DefenseType, DispelType, "
        "Mechanic, PreventionType, SpellID FROM spell_categories ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellCategory.db2
    PrepareStatement(HOTFIX_SEL_SPELL_CATEGORY, "SELECT ID, Name, ChargeRecoveryTime, Flags, UsesPerWeek, MaxCharges, TypeMask FROM spell_category"
        " ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_SPELL_CATEGORY, "SELECT ID, Name_lang FROM spell_category_locale WHERE locale = ?", CONNECTION_SYNCH);

    // SpellChainEffects.db2
    PrepareStatement(HOTFIX_SEL_SPELL_CHAIN_EFFECTS, "SELECT ID, AvgSegLen, NoiseScale, TexCoordScale, SegDuration, Flags, JointOffsetRadius, "
        "MinorJointScale, MajorJointScale, JointMoveSpeed, JointSmoothness, MinDurationBetweenJointJumps, MaxDurationBetweenJointJumps, WaveHeight, "
        "WaveFreq, WaveSpeed, MinWaveAngle, MaxWaveAngle, MinWaveSpin, MaxWaveSpin, ArcHeight, MinArcAngle, MaxArcAngle, MinArcSpin, MaxArcSpin, "
        "DelayBetweenEffects, MinFlickerOnDuration, MaxFlickerOnDuration, MinFlickerOffDuration, MaxFlickerOffDuration, PulseSpeed, PulseOnLength, "
        "PulseFadeLength, WavePhase, TimePerFlipFrame, VariancePerFlipFrame, TextureCoordScaleU1, TextureCoordScaleU2, TextureCoordScaleU3, "
        "TextureCoordScaleV1, TextureCoordScaleV2, TextureCoordScaleV3, TextureRepeatLengthU1, TextureRepeatLengthU2, TextureRepeatLengthU3, "
        "TextureRepeatLengthV1, TextureRepeatLengthV2, TextureRepeatLengthV3, TextureParticleFileDataID, StartWidth, EndWidth, "
        "ParticleScaleMultiplier, ParticleEmissionRateMultiplier, SegDelay, JointCount, SpellChainEffectID1, SpellChainEffectID2, "
        "SpellChainEffectID3, SpellChainEffectID4, SpellChainEffectID5, SpellChainEffectID6, SpellChainEffectID7, SpellChainEffectID8, "
        "SpellChainEffectID9, SpellChainEffectID10, SpellChainEffectID11, WidthScaleCurveID, JointsPerMinorJoint, MinorJointsPerMajorJoint, Alpha, "
        "Red, Green, Blue, BlendMode, RenderLayer, NumFlipFramesU, NumFlipFramesV, SoundKitID, TextureFileDataID1, TextureFileDataID2, "
        "TextureFileDataID3 FROM spell_chain_effects ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellClassOptions.db2
    PrepareStatement(HOTFIX_SEL_SPELL_CLASS_OPTIONS, "SELECT ID, SpellID, SpellClassMask1, SpellClassMask2, SpellClassMask3, SpellClassMask4, "
        "SpellClassSet, ModalNextSpell FROM spell_class_options ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellCooldowns.db2
    PrepareStatement(HOTFIX_SEL_SPELL_COOLDOWNS, "SELECT ID, CategoryRecoveryTime, RecoveryTime, StartRecoveryTime, DifficultyID, SpellID"
        " FROM spell_cooldowns ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellDescriptionVariables.db2
    PrepareStatement(HOTFIX_SEL_SPELL_DESCRIPTION_VARIABLES, "SELECT ID, Variables FROM spell_description_variables ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_SPELL_DESCRIPTION_VARIABLES, "SELECT ID, Variables_lang FROM spell_description_variables_locale WHERE locale = ?", CONNECTION_SYNCH);

    // SpellDispelType.db2
    PrepareStatement(HOTFIX_SEL_SPELL_DISPEL_TYPE, "SELECT ID, Name, InternalName, Mask, ImmunityPossible FROM spell_dispel_type ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_SPELL_DISPEL_TYPE, "SELECT ID, Name_lang, InternalName_lang FROM spell_dispel_type_locale WHERE locale = ?", CONNECTION_SYNCH);

    // SpellDuration.db2
    PrepareStatement(HOTFIX_SEL_SPELL_DURATION, "SELECT ID, Duration, MaxDuration, DurationPerLevel FROM spell_duration ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellEffect.db2
    PrepareStatement(HOTFIX_SEL_SPELL_EFFECT, "SELECT ID, Effect, EffectBasePoints, EffectIndex, EffectAura, DifficultyID, EffectAmplitude, "
        "EffectAuraPeriod, EffectBonusCoefficient, EffectChainAmplitude, EffectChainTargets, EffectDieSides, EffectItemType, EffectMechanic, "
        "EffectPointsPerResource, EffectRealPointsPerLevel, EffectTriggerSpell, EffectPosFacing, EffectAttributes, BonusCoefficientFromAP, "
        "PvpMultiplier, Coefficient, Variance, ResourceCoefficient, GroupSizeBasePointsCoefficient, EffectSpellClassMask1, EffectSpellClassMask2, "
        "EffectSpellClassMask3, EffectSpellClassMask4, EffectMiscValue1, EffectMiscValue2, EffectRadiusIndex1, EffectRadiusIndex2, ImplicitTarget1, "
        "ImplicitTarget2, SpellID FROM spell_effect ORDER BY ID DESC", CONNECTION_SYNCH);

    // Spell.db2
    PrepareStatement(HOTFIX_SEL_SPELL, "SELECT ID, Name, NameSubtext, Description, AuraDescription FROM spell ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_SPELL, "SELECT ID, Name_lang, NameSubtext_lang, Description_lang, AuraDescription_lang FROM spell_locale"
        " WHERE locale = ?", CONNECTION_SYNCH);

    // SpellEffectEmission.db2
    PrepareStatement(HOTFIX_SEL_SPELL_EFFECT_EMISSION, "SELECT ID, EmissionRate, ModelScale, AreaModelID, Flags FROM spell_effect_emission"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellEquippedItems.db2
    PrepareStatement(HOTFIX_SEL_SPELL_EQUIPPED_ITEMS, "SELECT ID, SpellID, EquippedItemInvTypes, EquippedItemSubclass, EquippedItemClass"
        " FROM spell_equipped_items ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellFlyout.db2
    PrepareStatement(HOTFIX_SEL_SPELL_FLYOUT, "SELECT ID, RaceMask, Name, Description, Flags, ClassMask, SpellIconFileID FROM spell_flyout"
        " ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_SPELL_FLYOUT, "SELECT ID, Name_lang, Description_lang FROM spell_flyout_locale WHERE locale = ?", CONNECTION_SYNCH);

    // SpellFlyoutItem.db2
    PrepareStatement(HOTFIX_SEL_SPELL_FLYOUT_ITEM, "SELECT ID, SpellID, Slot FROM spell_flyout_item ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellFocusObject.db2
    PrepareStatement(HOTFIX_SEL_SPELL_FOCUS_OBJECT, "SELECT ID, Name FROM spell_focus_object ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_SPELL_FOCUS_OBJECT, "SELECT ID, Name_lang FROM spell_focus_object_locale WHERE locale = ?", CONNECTION_SYNCH);

    // SpellInterrupts.db2
    PrepareStatement(HOTFIX_SEL_SPELL_INTERRUPTS, "SELECT ID, DifficultyID, InterruptFlags, AuraInterruptFlags1, AuraInterruptFlags2, "
        "ChannelInterruptFlags1, ChannelInterruptFlags2, SpellID FROM spell_interrupts ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellItemEnchantment.db2
    PrepareStatement(HOTFIX_SEL_SPELL_ITEM_ENCHANTMENT, "SELECT ID, Name, EffectArg1, EffectArg2, EffectArg3, EffectScalingPoints1, "
        "EffectScalingPoints2, EffectScalingPoints3, TransmogCost, TextureFileDataID, EffectPointsMin1, EffectPointsMin2, EffectPointsMin3, "
        "ItemVisual, Flags, RequiredSkillID, RequiredSkillRank, ItemLevel, Charges, Effect1, Effect2, Effect3, ConditionID, MinLevel, MaxLevel, "
        "ScalingClass, ScalingClassRestricted, TransmogPlayerConditionID FROM spell_item_enchantment ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_SPELL_ITEM_ENCHANTMENT, "SELECT ID, Name_lang FROM spell_item_enchantment_locale WHERE locale = ?", CONNECTION_SYNCH);

    // SpellItemEnchantmentCondition.db2
    PrepareStatement(HOTFIX_SEL_SPELL_ITEM_ENCHANTMENT_CONDITION, "SELECT ID, LtOperand1, LtOperand2, LtOperand3, LtOperand4, LtOperand5, "
        "LtOperandType1, LtOperandType2, LtOperandType3, LtOperandType4, LtOperandType5, Operator1, Operator2, Operator3, Operator4, Operator5, "
        "RtOperandType1, RtOperandType2, RtOperandType3, RtOperandType4, RtOperandType5, RtOperand1, RtOperand2, RtOperand3, RtOperand4, RtOperand5, "
        "Logic1, Logic2, Logic3, Logic4, Logic5 FROM spell_item_enchantment_condition ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellKeyboundOverride.db2
    PrepareStatement(HOTFIX_SEL_SPELL_KEYBOUND_OVERRIDE, "SELECT ID, Function, Data, Type FROM spell_keybound_override ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_SPELL_KEYBOUND_OVERRIDE, "SELECT ID, Function_lang FROM spell_keybound_override_locale WHERE locale = ?", CONNECTION_SYNCH);

    // SpellLabel.db2
    PrepareStatement(HOTFIX_SEL_SPELL_LABEL, "SELECT ID, LabelID FROM spell_label ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellLearnSpell.db2
    PrepareStatement(HOTFIX_SEL_SPELL_LEARN_SPELL, "SELECT ID, SpellID, LearnSpellID, OverridesSpellID FROM spell_learn_spell ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellLevels.db2
    PrepareStatement(HOTFIX_SEL_SPELL_LEVELS, "SELECT ID, BaseLevel, MaxLevel, SpellLevel, DifficultyID, MaxPassiveAuraLevel, SpellID"
        " FROM spell_levels ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellMechanic.db2
    PrepareStatement(HOTFIX_SEL_SPELL_MECHANIC, "SELECT ID, StateName FROM spell_mechanic ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_SPELL_MECHANIC, "SELECT ID, StateName_lang FROM spell_mechanic_locale WHERE locale = ?", CONNECTION_SYNCH);

    // SpellMisc.db2
    PrepareStatement(HOTFIX_SEL_SPELL_MISC, "SELECT ID, CastingTimeIndex, DurationIndex, RangeIndex, SchoolMask, SpellIconFileDataID, Speed, "
        "ActiveIconFileDataID, LaunchDelay, DifficultyID, Attributes1, Attributes2, Attributes3, Attributes4, Attributes5, Attributes6, Attributes7, "
        "Attributes8, Attributes9, Attributes10, Attributes11, Attributes12, Attributes13, Attributes14, SpellID FROM spell_misc ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellMissile.db2
    PrepareStatement(HOTFIX_SEL_SPELL_MISSILE, "SELECT ID, SpellID, DefaultPitchMin, DefaultPitchMax, DefaultSpeedMin, DefaultSpeedMax, "
        "RandomizeFacingMin, RandomizeFacingMax, RandomizePitchMin, RandomizePitchMax, RandomizeSpeedMin, RandomizeSpeedMax, Gravity, MaxDuration, "
        "CollisionRadius, Flags FROM spell_missile ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellMissileMotion.db2
    PrepareStatement(HOTFIX_SEL_SPELL_MISSILE_MOTION, "SELECT ID, Name, ScriptBody, Flags, MissileCount FROM spell_missile_motion ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_SPELL_MISSILE_MOTION, "SELECT ID, Name_lang, ScriptBody_lang FROM spell_missile_motion_locale WHERE locale = ?", CONNECTION_SYNCH);

    // SpellPower.db2
    PrepareStatement(HOTFIX_SEL_SPELL_POWER, "SELECT ManaCost, PowerCostPct, PowerPctPerSecond, RequiredAuraSpellID, PowerCostMaxPct, OrderIndex, "
        "PowerType, ID, ManaCostPerLevel, ManaPerSecond, OptionalCost, PowerDisplayID, AltPowerBarID, SpellID FROM spell_power ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellPowerDifficulty.db2
    PrepareStatement(HOTFIX_SEL_SPELL_POWER_DIFFICULTY, "SELECT DifficultyID, OrderIndex, ID FROM spell_power_difficulty ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellProceduralEffect.db2
    PrepareStatement(HOTFIX_SEL_SPELL_PROCEDURAL_EFFECT, "SELECT Value1, Value2, Value3, Value4, Type, ID FROM spell_procedural_effect"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellProcsPerMinute.db2
    PrepareStatement(HOTFIX_SEL_SPELL_PROCS_PER_MINUTE, "SELECT ID, BaseProcRate, Flags FROM spell_procs_per_minute ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellProcsPerMinuteMod.db2
    PrepareStatement(HOTFIX_SEL_SPELL_PROCS_PER_MINUTE_MOD, "SELECT ID, Coeff, Param, Type, SpellProcsPerMinuteID FROM spell_procs_per_minute_mod"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellRadius.db2
    PrepareStatement(HOTFIX_SEL_SPELL_RADIUS, "SELECT ID, Radius, RadiusPerLevel, RadiusMin, RadiusMax FROM spell_radius ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellRange.db2
    PrepareStatement(HOTFIX_SEL_SPELL_RANGE, "SELECT ID, DisplayName, DisplayNameShort, RangeMin1, RangeMin2, RangeMax1, RangeMax2, Flags"
        " FROM spell_range ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_SPELL_RANGE, "SELECT ID, DisplayName_lang, DisplayNameShort_lang FROM spell_range_locale WHERE locale = ?", CONNECTION_SYNCH);

    // SpellReagents.db2
    PrepareStatement(HOTFIX_SEL_SPELL_REAGENTS, "SELECT ID, SpellID, Reagent1, Reagent2, Reagent3, Reagent4, Reagent5, Reagent6, Reagent7, Reagent8, "
        "ReagentCount1, ReagentCount2, ReagentCount3, ReagentCount4, ReagentCount5, ReagentCount6, ReagentCount7, ReagentCount8 FROM spell_reagents"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellReagentsCurrency.db2
    PrepareStatement(HOTFIX_SEL_SPELL_REAGENTS_CURRENCY, "SELECT ID, SpellID, CurrencyTypesID, CurrencyCount FROM spell_reagents_currency"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellScaling.db2
    PrepareStatement(HOTFIX_SEL_SPELL_SCALING, "SELECT ID, SpellID, ScalesFromItemLevel, Class, MinScalingLevel, MaxScalingLevel FROM spell_scaling"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellShapeshift.db2
    PrepareStatement(HOTFIX_SEL_SPELL_SHAPESHIFT, "SELECT ID, SpellID, ShapeshiftExclude1, ShapeshiftExclude2, ShapeshiftMask1, ShapeshiftMask2, "
        "StanceBarOrder FROM spell_shapeshift ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellShapeshiftForm.db2
    PrepareStatement(HOTFIX_SEL_SPELL_SHAPESHIFT_FORM, "SELECT ID, Name, DamageVariance, Flags, CombatRoundTime, MountTypeID, CreatureType, "
        "BonusActionBar, AttackIconFileID, CreatureDisplayID1, CreatureDisplayID2, CreatureDisplayID3, CreatureDisplayID4, PresetSpellID1, "
        "PresetSpellID2, PresetSpellID3, PresetSpellID4, PresetSpellID5, PresetSpellID6, PresetSpellID7, PresetSpellID8 FROM spell_shapeshift_form"
        " ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_SPELL_SHAPESHIFT_FORM, "SELECT ID, Name_lang FROM spell_shapeshift_form_locale WHERE locale = ?", CONNECTION_SYNCH);

    // SpellSpecialUnitEffect.db2
    PrepareStatement(HOTFIX_SEL_SPELL_SPECIAL_UNIT_EFFECT, "SELECT ID, SpellVisualEffectNameID, PositionerID FROM spell_special_unit_effect"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellTargetRestrictions.db2
    PrepareStatement(HOTFIX_SEL_SPELL_TARGET_RESTRICTIONS, "SELECT ID, ConeDegrees, Width, Targets, TargetCreatureType, DifficultyID, MaxTargets, "
        "MaxTargetLevel, SpellID FROM spell_target_restrictions ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellTotems.db2
    PrepareStatement(HOTFIX_SEL_SPELL_TOTEMS, "SELECT ID, SpellID, Totem1, Totem2, RequiredTotemCategoryID1, RequiredTotemCategoryID2"
        " FROM spell_totems ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellVisual.db2
    PrepareStatement(HOTFIX_SEL_SPELL_VISUAL, "SELECT ID, MissileCastOffset1, MissileCastOffset2, MissileCastOffset3, MissileImpactOffset1, "
        "MissileImpactOffset2, MissileImpactOffset3, Flags, SpellVisualMissileSetID, MissileDestinationAttachment, MissileAttachment, "
        "MissileCastPositionerID, MissileImpactPositionerID, MissileTargetingKit, AnimEventSoundID, DamageNumberDelay, HostileSpellVisualID, "
        "CasterSpellVisualID, LowViolenceSpellVisualID FROM spell_visual ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellVisualAnim.db2
    PrepareStatement(HOTFIX_SEL_SPELL_VISUAL_ANIM, "SELECT ID, InitialAnimID, LoopAnimID, AnimKitID FROM spell_visual_anim ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellVisualColorEffect.db2
    PrepareStatement(HOTFIX_SEL_SPELL_VISUAL_COLOR_EFFECT, "SELECT ID, Duration, Color, ColorMultiplier, RedCurveID, GreenCurveID, BlueCurveID, "
        "AlphaCurveID, OpacityCurveID, Flags, Type, PositionerID FROM spell_visual_color_effect ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellVisualEffectName.db2
    PrepareStatement(HOTFIX_SEL_SPELL_VISUAL_EFFECT_NAME, "SELECT ID, ModelFileDataID, EffectRadius, BaseMissileSpeed, Scale, MinAllowedScale, "
        "MaxAllowedScale, Alpha, Flags, Type, GenericID, TextureFileDataID, RibbonQualityID, DissolveEffectID, Unknown13 FROM spell_visual_effect_name"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellVisualEvent.db2
    PrepareStatement(HOTFIX_SEL_SPELL_VISUAL_EVENT, "SELECT ID, StartEvent, StartMinOffsetMs, StartMaxOffsetMs, EndEvent, EndMinOffsetMs, "
        "EndMaxOffsetMs, TargetType, SpellVisualKitID FROM spell_visual_event ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellVisualKit.db2
    PrepareStatement(HOTFIX_SEL_SPELL_VISUAL_KIT, "SELECT ID, Flags, FallbackPriority, FallbackSpellVisualKitID, DelayMin, DelayMax"
        " FROM spell_visual_kit ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellVisualKitAreaModel.db2
    PrepareStatement(HOTFIX_SEL_SPELL_VISUAL_KIT_AREA_MODEL, "SELECT ID, ModelFileDataID, EmissionRate, Spacing, ModelScale, LifeTime, Flags"
        " FROM spell_visual_kit_area_model ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellVisualKitEffect.db2
    PrepareStatement(HOTFIX_SEL_SPELL_VISUAL_KIT_EFFECT, "SELECT ID, EffectType, Effect FROM spell_visual_kit_effect ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellVisualKitModelAttach.db2
    PrepareStatement(HOTFIX_SEL_SPELL_VISUAL_KIT_MODEL_ATTACH, "SELECT Offset1, Offset2, Offset3, OffsetVariation1, OffsetVariation2, "
        "OffsetVariation3, ID, SpellVisualEffectNameID, AttachmentID, Flags, PositionerID, Yaw, Pitch, Roll, YawVariation, PitchVariation, "
        "RollVariation, Scale, ScaleVariation, StartAnimID, AnimID, EndAnimID, AnimKitID, LowDefModelAttachID, StartDelay"
        " FROM spell_visual_kit_model_attach ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellVisualMissile.db2
    PrepareStatement(HOTFIX_SEL_SPELL_VISUAL_MISSILE, "SELECT FollowGroundHeight, FollowGroundDropSpeed, Flags, CastOffset1, CastOffset2, "
        "CastOffset3, ImpactOffset1, ImpactOffset2, ImpactOffset3, SpellVisualEffectNameID, CastPositionerID, ImpactPositionerID, "
        "FollowGroundApproach, SpellMissileMotionID, Attachment, DestinationAttachment, ID, SoundEntriesID, AnimKitID FROM spell_visual_missile"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellXDescriptionVariables.db2
    PrepareStatement(HOTFIX_SEL_SPELL_X_DESCRIPTION_VARIABLES, "SELECT ID, SpellID, SpellDescriptionVariablesID FROM spell_x_description_variables"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // SpellXSpellVisual.db2
    PrepareStatement(HOTFIX_SEL_SPELL_X_SPELL_VISUAL, "SELECT SpellVisualID, ID, Probability, CasterPlayerConditionID, CasterUnitConditionID, "
        "ViewerPlayerConditionID, ViewerUnitConditionID, SpellIconFileID, ActiveIconFileID, Flags, DifficultyID, Priority, SpellID"
        " FROM spell_x_spell_visual ORDER BY ID DESC", CONNECTION_SYNCH);

    // StartupFiles.db2
    PrepareStatement(HOTFIX_SEL_STARTUP_FILES, "SELECT ID, FileDataID, Locale, BytesRequired FROM startup_files ORDER BY ID DESC", CONNECTION_SYNCH);

    // Startup_Strings.db2
    PrepareStatement(HOTFIX_SEL_STARTUP__STRINGS, "SELECT ID, Name, Message FROM startup__strings ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_STARTUP__STRINGS, "SELECT ID, Name_lang, Message_lang FROM startup__strings_locale WHERE locale = ?", CONNECTION_SYNCH);

    // Stationery.db2
    PrepareStatement(HOTFIX_SEL_STATIONERY, "SELECT ID, Flags, ItemID, TextureFileDataID1, TextureFileDataID2 FROM stationery ORDER BY ID DESC", CONNECTION_SYNCH);

    // SummonProperties.db2
    PrepareStatement(HOTFIX_SEL_SUMMON_PROPERTIES, "SELECT ID, Flags, Control, Faction, Title, Slot FROM summon_properties ORDER BY ID DESC", CONNECTION_SYNCH);

    // TactKey.db2
    PrepareStatement(HOTFIX_SEL_TACT_KEY, "SELECT ID, Key1, Key2, Key3, Key4, Key5, Key6, Key7, Key8, Key9, Key10, Key11, Key12, Key13, Key14, Key15, "
        "Key16 FROM tact_key ORDER BY ID DESC", CONNECTION_SYNCH);

    // TactKeyLookup.db2
    PrepareStatement(HOTFIX_SEL_TACT_KEY_LOOKUP, "SELECT ID, TACTID1, TACTID2, TACTID3, TACTID4, TACTID5, TACTID6, TACTID7, TACTID8"
        " FROM tact_key_lookup ORDER BY ID DESC", CONNECTION_SYNCH);

    // Talent.db2
    PrepareStatement(HOTFIX_SEL_TALENT, "SELECT ID, Description, SpellID, OverridesSpellID, SpecID, TierID, ColumnIndex, Flags, CategoryMask1, "
        "CategoryMask2, ClassID FROM talent ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_TALENT, "SELECT ID, Description_lang FROM talent_locale WHERE locale = ?", CONNECTION_SYNCH);

    // TaxiNodes.db2
    PrepareStatement(HOTFIX_SEL_TAXI_NODES, "SELECT ID, Name, PosX, PosY, PosZ, MountCreatureID1, MountCreatureID2, MapOffset1, MapOffset2, Facing, "
        "FlightMapOffset1, FlightMapOffset2, ContinentID, ConditionID, CharacterBitNumber, Flags, UiTextureKitID, SpecialIconConditionID"
        " FROM taxi_nodes ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_TAXI_NODES, "SELECT ID, Name_lang FROM taxi_nodes_locale WHERE locale = ?", CONNECTION_SYNCH);

    // TaxiPath.db2
    PrepareStatement(HOTFIX_SEL_TAXI_PATH, "SELECT FromTaxiNode, ToTaxiNode, ID, Cost FROM taxi_path ORDER BY ID DESC", CONNECTION_SYNCH);

    // TaxiPathNode.db2
    PrepareStatement(HOTFIX_SEL_TAXI_PATH_NODE, "SELECT LocX, LocY, LocZ, PathID, ContinentID, NodeIndex, ID, Flags, Delay, ArrivalEventID, "
        "DepartureEventID FROM taxi_path_node ORDER BY ID DESC", CONNECTION_SYNCH);

    // TerrainMaterial.db2
    PrepareStatement(HOTFIX_SEL_TERRAIN_MATERIAL, "SELECT ID, Shader, EnvMapDiffuseFileID, EnvMapSpecularFileID FROM terrain_material ORDER BY ID DESC", CONNECTION_SYNCH);

    // TerrainType.db2
    PrepareStatement(HOTFIX_SEL_TERRAIN_TYPE, "SELECT ID, TerrainDesc, FootstepSprayRun, FootstepSprayWalk, SoundID, Flags FROM terrain_type"
        " ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_TERRAIN_TYPE, "SELECT ID, TerrainDesc_lang FROM terrain_type_locale WHERE locale = ?", CONNECTION_SYNCH);

    // TerrainTypeSounds.db2
    PrepareStatement(HOTFIX_SEL_TERRAIN_TYPE_SOUNDS, "SELECT ID, Name FROM terrain_type_sounds ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_TERRAIN_TYPE_SOUNDS, "SELECT ID, Name_lang FROM terrain_type_sounds_locale WHERE locale = ?", CONNECTION_SYNCH);

    // TextureBlendSet.db2
    PrepareStatement(HOTFIX_SEL_TEXTURE_BLEND_SET, "SELECT ID, TextureFileDataID1, TextureFileDataID2, TextureFileDataID3, TextureScrollRateU1, "
        "TextureScrollRateU2, TextureScrollRateU3, TextureScrollRateV1, TextureScrollRateV2, TextureScrollRateV3, TextureScaleU1, TextureScaleU2, "
        "TextureScaleU3, TextureScaleV1, TextureScaleV2, TextureScaleV3, ModX1, ModX2, ModX3, ModX4, SwizzleRed, SwizzleGreen, SwizzleBlue, "
        "SwizzleAlpha FROM texture_blend_set ORDER BY ID DESC", CONNECTION_SYNCH);

    // TextureFileData.db2
    PrepareStatement(HOTFIX_SEL_TEXTURE_FILE_DATA, "SELECT ID, MaterialResourcesID, UsageType FROM texture_file_data ORDER BY ID DESC", CONNECTION_SYNCH);

    // TotemCategory.db2
    PrepareStatement(HOTFIX_SEL_TOTEM_CATEGORY, "SELECT ID, Name, TotemCategoryMask, TotemCategoryType FROM totem_category ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_TOTEM_CATEGORY, "SELECT ID, Name_lang FROM totem_category_locale WHERE locale = ?", CONNECTION_SYNCH);

    // Toy.db2
    PrepareStatement(HOTFIX_SEL_TOY, "SELECT SourceText, ItemID, Flags, SourceTypeEnum, ID FROM toy ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_TOY, "SELECT ID, SourceText_lang FROM toy_locale WHERE locale = ?", CONNECTION_SYNCH);

    // TradeSkillCategory.db2
    PrepareStatement(HOTFIX_SEL_TRADE_SKILL_CATEGORY, "SELECT ID, Name, HordeName, SkillLineID, ParentTradeSkillCategoryID, OrderIndex, Flags"
        " FROM trade_skill_category ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_TRADE_SKILL_CATEGORY, "SELECT ID, Name_lang, HordeName_lang FROM trade_skill_category_locale WHERE locale = ?", CONNECTION_SYNCH);

    // TradeSkillItem.db2
    PrepareStatement(HOTFIX_SEL_TRADE_SKILL_ITEM, "SELECT ID, ItemLevel, RequiredLevel FROM trade_skill_item ORDER BY ID DESC", CONNECTION_SYNCH);

    // TransformMatrix.db2
    PrepareStatement(HOTFIX_SEL_TRANSFORM_MATRIX, "SELECT ID, Pos1, Pos2, Pos3, Yaw, Pitch, Roll, Scale FROM transform_matrix ORDER BY ID DESC", CONNECTION_SYNCH);

    // TransmogHoliday.db2
    PrepareStatement(HOTFIX_SEL_TRANSMOG_HOLIDAY, "SELECT ID, RequiredTransmogHoliday FROM transmog_holiday ORDER BY ID DESC", CONNECTION_SYNCH);

    // TransmogSet.db2
    PrepareStatement(HOTFIX_SEL_TRANSMOG_SET, "SELECT Name, ParentTransmogSetID, UiOrder, ExpansionID, ID, Flags, TrackingQuestID, ClassMask, "
        "ItemNameDescriptionID, TransmogSetGroupID FROM transmog_set ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_TRANSMOG_SET, "SELECT ID, Name_lang FROM transmog_set_locale WHERE locale = ?", CONNECTION_SYNCH);

    // TransmogSetGroup.db2
    PrepareStatement(HOTFIX_SEL_TRANSMOG_SET_GROUP, "SELECT Name, ID FROM transmog_set_group ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_TRANSMOG_SET_GROUP, "SELECT ID, Name_lang FROM transmog_set_group_locale WHERE locale = ?", CONNECTION_SYNCH);

    // TransmogSetItem.db2
    PrepareStatement(HOTFIX_SEL_TRANSMOG_SET_ITEM, "SELECT ID, TransmogSetID, ItemModifiedAppearanceID, Flags FROM transmog_set_item ORDER BY ID DESC", CONNECTION_SYNCH);

    // TransportAnimation.db2
    PrepareStatement(HOTFIX_SEL_TRANSPORT_ANIMATION, "SELECT ID, TimeIndex, PosX, PosY, PosZ, SequenceID, TransportID FROM transport_animation"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // TransportPhysics.db2
    PrepareStatement(HOTFIX_SEL_TRANSPORT_PHYSICS, "SELECT ID, WaveAmp, WaveTimeScale, RollAmp, RollTimeScale, PitchAmp, PitchTimeScale, MaxBank, "
        "MaxBankTurnSpeed, SpeedDampThresh, SpeedDamp FROM transport_physics ORDER BY ID DESC", CONNECTION_SYNCH);

    // TransportRotation.db2
    PrepareStatement(HOTFIX_SEL_TRANSPORT_ROTATION, "SELECT ID, TimeIndex, X, Y, Z, W, TransportID FROM transport_rotation ORDER BY ID DESC", CONNECTION_SYNCH);

    // Trophy.db2
    PrepareStatement(HOTFIX_SEL_TROPHY, "SELECT ID, Name, GameObjectDisplayInfoID, TrophyTypeID, PlayerConditionID FROM trophy ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_TROPHY, "SELECT ID, Name_lang FROM trophy_locale WHERE locale = ?", CONNECTION_SYNCH);

    // UiCamera.db2
    PrepareStatement(HOTFIX_SEL_UI_CAMERA, "SELECT ID, Name, Pos1, Pos2, Pos3, LookAt1, LookAt2, LookAt3, Up1, Up2, Up3, AnimFrame, UiCameraTypeID, "
        "AnimVariation, Flags, AnimID FROM ui_camera ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_UI_CAMERA, "SELECT ID, Name_lang FROM ui_camera_locale WHERE locale = ?", CONNECTION_SYNCH);

    // UiCameraType.db2
    PrepareStatement(HOTFIX_SEL_UI_CAMERA_TYPE, "SELECT ID, Name, Width, Height FROM ui_camera_type ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_UI_CAMERA_TYPE, "SELECT ID, Name_lang FROM ui_camera_type_locale WHERE locale = ?", CONNECTION_SYNCH);

    // UiCamFbackTransmogChrRace.db2
    PrepareStatement(HOTFIX_SEL_UI_CAM_FBACK_TRANSMOG_CHR_RACE, "SELECT ID, UiCameraID, ChrRaceID, Gender, InventoryType, Variation"
        " FROM ui_cam_fback_transmog_chr_race ORDER BY ID DESC", CONNECTION_SYNCH);

    // UiCamFbackTransmogWeapon.db2
    PrepareStatement(HOTFIX_SEL_UI_CAM_FBACK_TRANSMOG_WEAPON, "SELECT ID, UiCameraID, ItemClass, ItemSubclass, InventoryType"
        " FROM ui_cam_fback_transmog_weapon ORDER BY ID DESC", CONNECTION_SYNCH);

    // UIExpansionDisplayInfo.db2
    PrepareStatement(HOTFIX_SEL_U_I_EXPANSION_DISPLAY_INFO, "SELECT ID, ExpansionLogo, ExpansionBanner, ExpansionLevel FROM u_i_expansion_display_info"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // UIExpansionDisplayInfoIcon.db2
    PrepareStatement(HOTFIX_SEL_U_I_EXPANSION_DISPLAY_INFO_ICON, "SELECT ID, FeatureDescription, ParentID, FeatureIcon"
        " FROM u_i_expansion_display_info_icon ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_U_I_EXPANSION_DISPLAY_INFO_ICON, "SELECT ID, FeatureDescription_lang FROM u_i_expansion_display_info_icon_locale"
        " WHERE locale = ?", CONNECTION_SYNCH);

    // UiMapPOI.db2
    PrepareStatement(HOTFIX_SEL_UI_MAP_P_O_I, "SELECT ContinentID, WorldLoc1, WorldLoc2, WorldLoc3, UiTextureAtlasMemberID, Flags, PoiDataType, "
        "PoiData, ID FROM ui_map_p_o_i ORDER BY ID DESC", CONNECTION_SYNCH);

    // UiModelScene.db2
    PrepareStatement(HOTFIX_SEL_UI_MODEL_SCENE, "SELECT ID, UiSystemType, Flags FROM ui_model_scene ORDER BY ID DESC", CONNECTION_SYNCH);

    // UiModelSceneActor.db2
    PrepareStatement(HOTFIX_SEL_UI_MODEL_SCENE_ACTOR, "SELECT ScriptTag, Position1, Position2, Position3, OrientationYaw, OrientationPitch, "
        "OrientationRoll, NormalizedScale, Flags, ID, UiModelSceneActorDisplayID FROM ui_model_scene_actor ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_UI_MODEL_SCENE_ACTOR, "SELECT ID, ScriptTag_lang FROM ui_model_scene_actor_locale WHERE locale = ?", CONNECTION_SYNCH);

    // UiModelSceneActorDisplay.db2
    PrepareStatement(HOTFIX_SEL_UI_MODEL_SCENE_ACTOR_DISPLAY, "SELECT ID, AnimSpeed, Alpha, Scale, AnimationID, SequenceVariation"
        " FROM ui_model_scene_actor_display ORDER BY ID DESC", CONNECTION_SYNCH);

    // UiModelSceneCamera.db2
    PrepareStatement(HOTFIX_SEL_UI_MODEL_SCENE_CAMERA, "SELECT ScriptTag, Target1, Target2, Target3, ZoomedTargetOffset1, ZoomedTargetOffset2, "
        "ZoomedTargetOffset3, Yaw, Pitch, Roll, ZoomedYawOffset, ZoomedPitchOffset, ZoomedRollOffset, ZoomDistance, MinZoomDistance, MaxZoomDistance, "
        "Flags, CameraType, ID FROM ui_model_scene_camera ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_UI_MODEL_SCENE_CAMERA, "SELECT ID, ScriptTag_lang FROM ui_model_scene_camera_locale WHERE locale = ?", CONNECTION_SYNCH);

    // UiTextureAtlas.db2
    PrepareStatement(HOTFIX_SEL_UI_TEXTURE_ATLAS, "SELECT ID, FileDataID, AtlasHeight, AtlasWidth FROM ui_texture_atlas ORDER BY ID DESC", CONNECTION_SYNCH);

    // UiTextureAtlasMember.db2
    PrepareStatement(HOTFIX_SEL_UI_TEXTURE_ATLAS_MEMBER, "SELECT CommittedName, ID, UiTextureAtlasID, CommittedLeft, CommittedRight, CommittedTop, "
        "CommittedBottom, CommittedFlags FROM ui_texture_atlas_member ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_UI_TEXTURE_ATLAS_MEMBER, "SELECT ID, CommittedName_lang FROM ui_texture_atlas_member_locale WHERE locale = ?", CONNECTION_SYNCH);

    // UiTextureKit.db2
    PrepareStatement(HOTFIX_SEL_UI_TEXTURE_KIT, "SELECT ID, KitPrefix FROM ui_texture_kit ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_UI_TEXTURE_KIT, "SELECT ID, KitPrefix_lang FROM ui_texture_kit_locale WHERE locale = ?", CONNECTION_SYNCH);

    // UnitBlood.db2
    PrepareStatement(HOTFIX_SEL_UNIT_BLOOD, "SELECT ID, PlayerCritBloodSpurtID, PlayerHitBloodSpurtID, DefaultBloodSpurtID, "
        "PlayerOmniCritBloodSpurtID, PlayerOmniHitBloodSpurtID, DefaultOmniBloodSpurtID FROM unit_blood ORDER BY ID DESC", CONNECTION_SYNCH);

    // UnitBloodLevels.db2
    PrepareStatement(HOTFIX_SEL_UNIT_BLOOD_LEVELS, "SELECT ID, Violencelevel1, Violencelevel2, Violencelevel3 FROM unit_blood_levels ORDER BY ID DESC", CONNECTION_SYNCH);

    // UnitCondition.db2
    PrepareStatement(HOTFIX_SEL_UNIT_CONDITION, "SELECT ID, Value1, Value2, Value3, Value4, Value5, Value6, Value7, Value8, Flags, Variable1, "
        "Variable2, Variable3, Variable4, Variable5, Variable6, Variable7, Variable8, Op1, Op2, Op3, Op4, Op5, Op6, Op7, Op8 FROM unit_condition"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // UnitPowerBar.db2
    PrepareStatement(HOTFIX_SEL_UNIT_POWER_BAR, "SELECT ID, Name, Cost, OutOfError, ToolTip, RegenerationPeace, RegenerationCombat, FileDataID1, "
        "FileDataID2, FileDataID3, FileDataID4, FileDataID5, FileDataID6, Color1, Color2, Color3, Color4, Color5, Color6, StartInset, EndInset, "
        "StartPower, Flags, CenterPower, BarType, MinPower, MaxPower FROM unit_power_bar ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_UNIT_POWER_BAR, "SELECT ID, Name_lang, Cost_lang, OutOfError_lang, ToolTip_lang FROM unit_power_bar_locale"
        " WHERE locale = ?", CONNECTION_SYNCH);

    // Vehicle.db2
    PrepareStatement(HOTFIX_SEL_VEHICLE, "SELECT ID, Flags, TurnSpeed, PitchSpeed, PitchMin, PitchMax, MouseLookOffsetPitch, CameraFadeDistScalarMin, "
        "CameraFadeDistScalarMax, CameraPitchOffset, FacingLimitRight, FacingLimitLeft, CameraYawOffset, SeatID1, SeatID2, SeatID3, SeatID4, SeatID5, "
        "SeatID6, SeatID7, SeatID8, VehicleUIIndicatorID, PowerDisplayID1, PowerDisplayID2, PowerDisplayID3, FlagsB, UiLocomotionType, "
        "MissileTargetingID FROM vehicle ORDER BY ID DESC", CONNECTION_SYNCH);

    // VehicleSeat.db2
    PrepareStatement(HOTFIX_SEL_VEHICLE_SEAT, "SELECT ID, Flags, FlagsB, FlagsC, AttachmentOffsetX, AttachmentOffsetY, AttachmentOffsetZ, "
        "EnterPreDelay, EnterSpeed, EnterGravity, EnterMinDuration, EnterMaxDuration, EnterMinArcHeight, EnterMaxArcHeight, ExitPreDelay, ExitSpeed, "
        "ExitGravity, ExitMinDuration, ExitMaxDuration, ExitMinArcHeight, ExitMaxArcHeight, PassengerYaw, PassengerPitch, PassengerRoll, "
        "VehicleEnterAnimDelay, VehicleExitAnimDelay, CameraEnteringDelay, CameraEnteringDuration, CameraExitingDelay, CameraExitingDuration, "
        "CameraOffsetX, CameraOffsetY, CameraOffsetZ, CameraPosChaseRate, CameraFacingChaseRate, CameraEnteringZoom, CameraSeatZoomMin, "
        "CameraSeatZoomMax, UiSkinFileDataID, EnterAnimStart, EnterAnimLoop, RideAnimStart, RideAnimLoop, RideUpperAnimStart, RideUpperAnimLoop, "
        "ExitAnimStart, ExitAnimLoop, ExitAnimEnd, VehicleEnterAnim, VehicleExitAnim, VehicleRideAnimLoop, EnterAnimKitID, RideAnimKitID, "
        "ExitAnimKitID, VehicleEnterAnimKitID, VehicleRideAnimKitID, VehicleExitAnimKitID, CameraModeID, AttachmentID, PassengerAttachmentID, "
        "VehicleEnterAnimBone, VehicleExitAnimBone, VehicleRideAnimLoopBone, VehicleAbilityDisplay, EnterUISoundID, ExitUISoundID FROM vehicle_seat"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // VehicleUIIndicator.db2
    PrepareStatement(HOTFIX_SEL_VEHICLE_U_I_INDICATOR, "SELECT ID, BackgroundTextureFileID FROM vehicle_u_i_indicator ORDER BY ID DESC", CONNECTION_SYNCH);

    // VehicleUIIndSeat.db2
    PrepareStatement(HOTFIX_SEL_VEHICLE_U_I_IND_SEAT, "SELECT ID, XPos, YPos, VirtualSeatIndex FROM vehicle_u_i_ind_seat ORDER BY ID DESC", CONNECTION_SYNCH);

    // Vignette.db2
    PrepareStatement(HOTFIX_SEL_VIGNETTE, "SELECT ID, Name, MaxHeight, MinHeight, QuestFeedbackEffectID, Flags, PlayerConditionID, "
        "VisibleTrackingQuestID FROM vignette ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_VIGNETTE, "SELECT ID, Name_lang FROM vignette_locale WHERE locale = ?", CONNECTION_SYNCH);

    // VirtualAttachment.db2
    PrepareStatement(HOTFIX_SEL_VIRTUAL_ATTACHMENT, "SELECT ID, Name, PositionerID FROM virtual_attachment ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_VIRTUAL_ATTACHMENT, "SELECT ID, Name_lang FROM virtual_attachment_locale WHERE locale = ?", CONNECTION_SYNCH);

    // VirtualAttachmentCustomization.db2
    PrepareStatement(HOTFIX_SEL_VIRTUAL_ATTACHMENT_CUSTOMIZATION, "SELECT ID, FileDataID, VirtualAttachmentID, PositionerID"
        " FROM virtual_attachment_customization ORDER BY ID DESC", CONNECTION_SYNCH);

    // VocalUISounds.db2
    PrepareStatement(HOTFIX_SEL_VOCAL_U_I_SOUNDS, "SELECT ID, VocalUIEnum, RaceID, ClassID, NormalSoundID1, NormalSoundID2 FROM vocal_u_i_sounds"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // WbAccessControlList.db2
    PrepareStatement(HOTFIX_SEL_WB_ACCESS_CONTROL_LIST, "SELECT ID, URL, GrantFlags, RevokeFlags, WowEditInternal, RegionID"
        " FROM wb_access_control_list ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_WB_ACCESS_CONTROL_LIST, "SELECT ID, URL_lang FROM wb_access_control_list_locale WHERE locale = ?", CONNECTION_SYNCH);

    // WbCertWhitelist.db2
    PrepareStatement(HOTFIX_SEL_WB_CERT_WHITELIST, "SELECT ID, Domain, GrantAccess, RevokeAccess, WowEditInternal FROM wb_cert_whitelist"
        " ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_WB_CERT_WHITELIST, "SELECT ID, Domain_lang FROM wb_cert_whitelist_locale WHERE locale = ?", CONNECTION_SYNCH);

    // WeaponImpactSounds.db2
    PrepareStatement(HOTFIX_SEL_WEAPON_IMPACT_SOUNDS, "SELECT ID, WeaponSubClassID, ParrySoundType, ImpactSource, ImpactSoundID1, ImpactSoundID2, "
        "ImpactSoundID3, ImpactSoundID4, ImpactSoundID5, ImpactSoundID6, ImpactSoundID7, ImpactSoundID8, ImpactSoundID9, ImpactSoundID10, "
        "ImpactSoundID11, CritImpactSoundID1, CritImpactSoundID2, CritImpactSoundID3, CritImpactSoundID4, CritImpactSoundID5, CritImpactSoundID6, "
        "CritImpactSoundID7, CritImpactSoundID8, CritImpactSoundID9, CritImpactSoundID10, CritImpactSoundID11, PierceImpactSoundID1, "
        "PierceImpactSoundID2, PierceImpactSoundID3, PierceImpactSoundID4, PierceImpactSoundID5, PierceImpactSoundID6, PierceImpactSoundID7, "
        "PierceImpactSoundID8, PierceImpactSoundID9, PierceImpactSoundID10, PierceImpactSoundID11, PierceCritImpactSoundID1, "
        "PierceCritImpactSoundID2, PierceCritImpactSoundID3, PierceCritImpactSoundID4, PierceCritImpactSoundID5, PierceCritImpactSoundID6, "
        "PierceCritImpactSoundID7, PierceCritImpactSoundID8, PierceCritImpactSoundID9, PierceCritImpactSoundID10, PierceCritImpactSoundID11"
        " FROM weapon_impact_sounds ORDER BY ID DESC", CONNECTION_SYNCH);

    // WeaponSwingSounds2.db2
    PrepareStatement(HOTFIX_SEL_WEAPON_SWING_SOUNDS2, "SELECT ID, SwingType, Crit, SoundID FROM weapon_swing_sounds2 ORDER BY ID DESC", CONNECTION_SYNCH);

    // WeaponTrail.db2
    PrepareStatement(HOTFIX_SEL_WEAPON_TRAIL, "SELECT ID, FileDataID, Yaw, Pitch, Roll, TextureFileDataID1, TextureFileDataID2, TextureFileDataID3, "
        "TextureScrollRateU1, TextureScrollRateU2, TextureScrollRateU3, TextureScrollRateV1, TextureScrollRateV2, TextureScrollRateV3, "
        "TextureScaleU1, TextureScaleU2, TextureScaleU3, TextureScaleV1, TextureScaleV2, TextureScaleV3 FROM weapon_trail ORDER BY ID DESC", CONNECTION_SYNCH);

    // WeaponTrailModelDef.db2
    PrepareStatement(HOTFIX_SEL_WEAPON_TRAIL_MODEL_DEF, "SELECT ID, LowDefFileDataID, WeaponTrailID FROM weapon_trail_model_def ORDER BY ID DESC", CONNECTION_SYNCH);

    // WeaponTrailParam.db2
    PrepareStatement(HOTFIX_SEL_WEAPON_TRAIL_PARAM, "SELECT ID, Duration, FadeOutTime, EdgeLifeSpan, InitialDelay, SmoothSampleAngle, Hand, "
        "OverrideAttachTop, OverrideAttachBot, Flags FROM weapon_trail_param ORDER BY ID DESC", CONNECTION_SYNCH);

    // Weather.db2
    PrepareStatement(HOTFIX_SEL_WEATHER, "SELECT ID, Intensity1, Intensity2, TransitionSkyBox, EffectColor1, EffectColor2, EffectColor3, Scale, "
        "Volatility, TwinkleIntensity, FallModifier, RotationalSpeed, ParticulateFileDataID, SoundAmbienceID, Type, EffectType, WindSettingsID, "
        "AmbienceID, EffectTextureFileDataID FROM weather ORDER BY ID DESC", CONNECTION_SYNCH);

    // WindSettings.db2
    PrepareStatement(HOTFIX_SEL_WIND_SETTINGS, "SELECT ID, BaseMag, BaseDir1, BaseDir2, BaseDir3, VarianceMagOver, VarianceMagUnder, VarianceDir1, "
        "VarianceDir2, VarianceDir3, MaxStepMag, MaxStepDir1, MaxStepDir2, MaxStepDir3, Frequency, Duration, Flags FROM wind_settings ORDER BY ID DESC", CONNECTION_SYNCH);

    // WmoAreaTable.db2
    PrepareStatement(HOTFIX_SEL_WMO_AREA_TABLE, "SELECT AreaName, WmoGroupID, AmbienceID, ZoneMusic, IntroSound, AreaTableID, UwIntroSound, "
        "UwAmbience, NameSetID, SoundProviderPref, SoundProviderPrefUnderwater, Flags, ID, UwZoneMusic, WmoID FROM wmo_area_table ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_WMO_AREA_TABLE, "SELECT ID, AreaName_lang FROM wmo_area_table_locale WHERE locale = ?", CONNECTION_SYNCH);

    // WmoMinimapTexture.db2
    PrepareStatement(HOTFIX_SEL_WMO_MINIMAP_TEXTURE, "SELECT ID, FileDataID, GroupNum, BlockX, BlockY FROM wmo_minimap_texture ORDER BY ID DESC", CONNECTION_SYNCH);

    // WorldBossLockout.db2
    PrepareStatement(HOTFIX_SEL_WORLD_BOSS_LOCKOUT, "SELECT ID, Name, TrackingQuestID FROM world_boss_lockout ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_WORLD_BOSS_LOCKOUT, "SELECT ID, Name_lang FROM world_boss_lockout_locale WHERE locale = ?", CONNECTION_SYNCH);

    // WorldChunkSounds.db2
    PrepareStatement(HOTFIX_SEL_WORLD_CHUNK_SOUNDS, "SELECT ID, MapID, ChunkX, ChunkY, SubChunkX, SubChunkY, SoundOverrideID FROM world_chunk_sounds"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // WorldEffect.db2
    PrepareStatement(HOTFIX_SEL_WORLD_EFFECT, "SELECT ID, TargetAsset, CombatConditionID, TargetType, WhenToDisplay, QuestFeedbackEffectID, "
        "PlayerConditionID FROM world_effect ORDER BY ID DESC", CONNECTION_SYNCH);

    // WorldElapsedTimer.db2
    PrepareStatement(HOTFIX_SEL_WORLD_ELAPSED_TIMER, "SELECT ID, Name, Flags, Type FROM world_elapsed_timer ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_WORLD_ELAPSED_TIMER, "SELECT ID, Name_lang FROM world_elapsed_timer_locale WHERE locale = ?", CONNECTION_SYNCH);

    // WorldMapArea.db2
    PrepareStatement(HOTFIX_SEL_WORLD_MAP_AREA, "SELECT AreaName, LocLeft, LocRight, LocTop, LocBottom, Flags, MapID, AreaID, DisplayMapID, "
        "DefaultDungeonFloor, ParentWorldMapID, LevelRangeMin, LevelRangeMax, BountySetID, BountyDisplayLocation, ID, VisibilityPlayerConditionID"
        " FROM world_map_area ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_WORLD_MAP_AREA, "SELECT ID, AreaName_lang FROM world_map_area_locale WHERE locale = ?", CONNECTION_SYNCH);

    // WorldMapContinent.db2
    PrepareStatement(HOTFIX_SEL_WORLD_MAP_CONTINENT, "SELECT ID, ContinentOffset1, ContinentOffset2, Scale, TaxiMin1, TaxiMin2, TaxiMax1, TaxiMax2, "
        "MapID, WorldMapID, LeftBoundary, RightBoundary, TopBoundary, BottomBoundary, Flags FROM world_map_continent ORDER BY ID DESC", CONNECTION_SYNCH);

    // WorldMapOverlay.db2
    PrepareStatement(HOTFIX_SEL_WORLD_MAP_OVERLAY, "SELECT TextureName, ID, TextureWidth, TextureHeight, MapAreaID, OffsetX, OffsetY, HitRectTop, "
        "HitRectLeft, HitRectBottom, HitRectRight, PlayerConditionID, Flags, AreaID1, AreaID2, AreaID3, AreaID4 FROM world_map_overlay"
        " ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_WORLD_MAP_OVERLAY, "SELECT ID, TextureName_lang FROM world_map_overlay_locale WHERE locale = ?", CONNECTION_SYNCH);

    // WorldMapTransforms.db2
    PrepareStatement(HOTFIX_SEL_WORLD_MAP_TRANSFORMS, "SELECT ID, RegionMinX, RegionMinY, RegionMinZ, RegionMaxX, RegionMaxY, RegionMaxZ, "
        "RegionOffsetX, RegionOffsetY, RegionScale, MapID, AreaID, NewMapID, NewDungeonMapID, NewAreaID, Flags, Priority FROM world_map_transforms"
        " ORDER BY ID DESC", CONNECTION_SYNCH);

    // WorldSafeLocs.db2
    PrepareStatement(HOTFIX_SEL_WORLD_SAFE_LOCS, "SELECT ID, Name, LocX, LocY, LocZ, LocO, MapID FROM world_safe_locs ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_WORLD_SAFE_LOCS, "SELECT ID, Name_lang FROM world_safe_locs_locale WHERE locale = ?", CONNECTION_SYNCH);

    // WorldStateExpression.db2
    PrepareStatement(HOTFIX_SEL_WORLD_STATE_EXPRESSION, "SELECT ID, Expression FROM world_state_expression ORDER BY ID DESC", CONNECTION_SYNCH);

    // WorldStateUI.db2
    PrepareStatement(HOTFIX_SEL_WORLD_STATE_U_I, "SELECT Icon, ExtendedUI, DynamicTooltip, String, Tooltip, MapID, AreaID, PhaseID, PhaseGroupID, "
        "StateVariable, ExtendedUIStateVariable1, ExtendedUIStateVariable2, ExtendedUIStateVariable3, OrderIndex, PhaseUseFlags, Type, ID, "
        "DynamicIconFileID, DynamicFlashIconFileID FROM world_state_u_i ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_WORLD_STATE_U_I, "SELECT ID, Icon_lang, ExtendedUI_lang, DynamicTooltip_lang, String_lang, Tooltip_lang"
        " FROM world_state_u_i_locale WHERE locale = ?", CONNECTION_SYNCH);

    // WorldStateZoneSounds.db2
    PrepareStatement(HOTFIX_SEL_WORLD_STATE_ZONE_SOUNDS, "SELECT ID, WmoAreaID, WorldStateID, WorldStateValue, AreaID, ZoneIntroMusicID, ZoneMusicID, "
        "SoundAmbienceID, SoundProviderPreferencesID FROM world_state_zone_sounds ORDER BY ID DESC", CONNECTION_SYNCH);

    // World_Pvp_Area.db2
    PrepareStatement(HOTFIX_SEL_WORLD__PVP__AREA, "SELECT ID, AreaID, NextTimeWorldstate, GameTimeWorldstate, BattlePopulate_time, MapID, MinLevel, "
        "MaxLevel FROM world__pvp__area ORDER BY ID DESC", CONNECTION_SYNCH);

    // ZoneIntroMusicTable.db2
    PrepareStatement(HOTFIX_SEL_ZONE_INTRO_MUSIC_TABLE, "SELECT ID, Name, MinDelayMinutes, Priority, SoundID FROM zone_intro_music_table"
        " ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_ZONE_INTRO_MUSIC_TABLE, "SELECT ID, Name_lang FROM zone_intro_music_table_locale WHERE locale = ?", CONNECTION_SYNCH);

    // ZoneLight.db2
    PrepareStatement(HOTFIX_SEL_ZONE_LIGHT, "SELECT ID, Name, MapID, LightID, Flags FROM zone_light ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_ZONE_LIGHT, "SELECT ID, Name_lang FROM zone_light_locale WHERE locale = ?", CONNECTION_SYNCH);

    // ZoneLightPoint.db2
    PrepareStatement(HOTFIX_SEL_ZONE_LIGHT_POINT, "SELECT ID, Pos1, Pos2, PointOrder FROM zone_light_point ORDER BY ID DESC", CONNECTION_SYNCH);

    // ZoneMusic.db2
    PrepareStatement(HOTFIX_SEL_ZONE_MUSIC, "SELECT ID, SetName, SilenceIntervalMin1, SilenceIntervalMin2, SilenceIntervalMax1, SilenceIntervalMax2, "
        "Sounds1, Sounds2 FROM zone_music ORDER BY ID DESC", CONNECTION_SYNCH);
    PREPARE_LOCALE_STMT(HOTFIX_SEL_ZONE_MUSIC, "SELECT ID, SetName_lang FROM zone_music_locale WHERE locale = ?", CONNECTION_SYNCH);

    // ZoneStory.db2
    PrepareStatement(HOTFIX_SEL_ZONE_STORY, "SELECT ID, DisplayAchievementID, DisplayWorldMapAreaID, PlayerFactionGroupID FROM zone_story"
        " ORDER BY ID DESC", CONNECTION_SYNCH);
}

HotfixDatabaseConnection::HotfixDatabaseConnection(MySQLConnectionInfo& connInfo) : MySQLConnection(connInfo)
{
}

HotfixDatabaseConnection::HotfixDatabaseConnection(ProducerConsumerQueue<SQLOperation*>* q, MySQLConnectionInfo& connInfo) : MySQLConnection(q, connInfo)
{
}

HotfixDatabaseConnection::~HotfixDatabaseConnection()
{
}
